{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/d3/d3.js","webpack:///./node_modules/underscore/underscore.js","webpack:///external \"@jupyter-widgets/base\"","webpack:///./src/utils.js","webpack:///./src/Mark.js","webpack:///./src/MarkModel.js","webpack:///./src/BaseModel.js","webpack:///./src/Selector.js","webpack:///./src/Interaction.js","webpack:///./src/Scale.js","webpack:///./src/ScaleModel.js","webpack:///./src/LinearScaleModel.js","webpack:///./src/ColorUtils.js","webpack:///./src/selector_utils.js","webpack:///./src/LinearScale.js","webpack:///./src/Markers.js","webpack:///./src/Axis.js","webpack:///./src/OrdinalScale.js","webpack:///./src/colorbrewer.js","webpack:///./src/ScatterBase.js","webpack:///./src/ScatterBaseModel.js","webpack:///./src/lasso_test.js","webpack:///./src/ColorScale.js","webpack:///./src/ColorScaleModel.js","webpack:///./src/Lines.js","webpack:///./src/Figure.js","webpack:///./src/PopperReference.js","webpack:///./node_modules/popper.js/dist/esm/popper.js","webpack:///./src/index-embed.js","webpack:///./src/bqplot.less?606a","webpack:///./src/bqplot.less","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/style-loader/addStyles.js","webpack:///./src/index.js","webpack:///./src/GridHeatMapModel.js","webpack:///./src/AxisModel.js","webpack:///./src/HandDraw.js","webpack:///./src/Bars.js","webpack:///./src/HandDrawModel.js","webpack:///./src/OHLC.js","webpack:///./src/BarsModel.js","webpack:///./src/Hist.js","webpack:///./src/OHLCModel.js","webpack:///./src/HistModel.js","webpack:///./src/SelectorModel.js","webpack:///./src/Boxplot.js","webpack:///./src/IndexSelector.js","webpack:///./src/OrdinalColorScale.js","webpack:///./src/BoxplotModel.js","webpack:///./src/Label.js","webpack:///./src/LabelModel.js","webpack:///./src/OrdinalScaleModel.js","webpack:///./src/BrushSelector.js","webpack:///./src/LassoSelector.js","webpack:///./src/PanZoom.js","webpack:///./src/ColorAxis.js","webpack:///./src/PanZoomModel.js","webpack:///./src/Pie.js","webpack:///./src/PieModel.js","webpack:///./src/DateColorScale.js","webpack:///./src/DateColorScaleModel.js","webpack:///./src/DateScale.js","webpack:///./src/Scatter.js","webpack:///./src/DateScaleModel.js","webpack:///./src/LinesModel.js","webpack:///./src/ScatterModel.js","webpack:///./src/FastIntervalSelector.js","webpack:///./src/LogScale.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/LogScaleModel.js","webpack:///./src/SquareMarketMap.js","webpack:///./src/FigureModel.js","webpack:///./src/Map.js","webpack:///./src/Tooltip.js","webpack:///./src/TooltipModel.js","webpack:///./src/FlexLine.js","webpack:///./src/MapModel.js","webpack:///./node_modules/topojson/build/topojson.js","webpack:///./src/GeoScale.js","webpack:///./src/GeoScaleModel.js","webpack:///./src/MarketMap.js","webpack:///./src/GridHeatMap.js","webpack:///./src/MarketMapModel.js","webpack:///./src/HeatMap.js","webpack:///./src/HeatMapModel.js","webpack:///./src/Toolbar.js","webpack:///./src/GraphModel.js","webpack:///./src/Graph.js","webpack:///./src/Image.js","webpack:///./src/ImageModel.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","length","array","Array","Date","now","createElement","style","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","ascending","descending","min","f","max","extent","sum","mean","j","quantile","values","H","h","Math","floor","v","median","numbers","push","sort","variance","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","_","range","start","stop","step","Infinity","Error","k","d3_range_integerScale","forEach","set","isArray","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","requote","replace","d3_requote_re","d3_subclass","__proto__","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","window","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_tanh","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","width","sign","string","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","context","projectStream","contextStream","cacheStream","pointRadius","d3_geo_pathProjectStream","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","ease","d3_ease_clamp","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","previousUnderscore","ArrayProto","ObjProto","FuncProto","nativeIsArray","nativeKeys","nativeBind","nativeCreate","Ctor","obj","_wrapped","VERSION","optimizeCb","func","argCount","collection","accumulator","isFunction","isObject","matcher","iteratee","createAssigner","keysFunc","undefinedOnly","baseCreate","MAX_ARRAY_INDEX","getLength","isArrayLike","createReduce","dir","memo","currentKey","iterator","collect","results","foldl","inject","reduceRight","foldr","detect","predicate","findIndex","findKey","reject","negate","every","all","some","any","includes","include","item","fromIndex","guard","invoke","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","rand","shuffled","sample","sortBy","criteria","groupBy","indexBy","countBy","toArray","pass","fail","head","take","initial","last","rest","tail","drop","compact","flatten","shallow","strict","startIndex","idx","isArguments","len","createPredicateIndexFinder","createIndexFinder","predicateFind","sortedIndex","without","difference","uniq","unique","isSorted","isBoolean","seen","union","argsLength","unzip","findLastIndex","low","high","executeBound","sourceFunc","boundFunc","callingContext","TypeError","partial","boundArgs","bindAll","memoize","hasher","cache","address","wait","defer","throttle","options","timeout","later","leading","trailing","debounce","immediate","timestamp","callNow","wrapper","once","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","constructor","proto","prop","allKeys","mapObject","functions","extend","extendOwn","assign","pick","oiteratee","omit","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","isEqual","isEmpty","isString","isElement","Int8Array","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","accum","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","escape","unescape","fallback","idCounter","uniqueId","templateSettings","evaluate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","settings","oldSettings","variable","render","argument","chain","instance","_chain","mixin","toJSON","__WEBPACK_EXTERNAL_MODULE__2__","time_format_regex","getCustomRange","pivot","deepCopy","is_valid_time_format","widgets","Mark","WidgetView","initialize","setElement","d3el","el","__super__","x_padding","y_padding","uuid","scale_creation_promise","set_scale_views","listenTo","model","draw","colors","clip_id","tooltip_div","display_el_classes","event_metadata","mouse_over","msg_name","lookup_data","hit_test","legend_clicked","element_clicked","parent_clicked","legend_mouse_over","scales","stopListening","scale_models","scale_promises","create_child_view","resolvePromisesDict","set_positional_scales","initialize_additional_scales","set_ranges","trigger","set_internal_scales","create_listeners","update_visibility","selected_style_updated","unselected_style_updated","on_some_change","draw_legend","elem","x_disp","y_disp","inter_x_disp","inter_y_disp","highlight_axes","unhighlight_axes","invert_range","start_pxl","end_pxl","invert_point","pxl","invert_multi_range","array_pixels","get_colors","selected_style","clear_style","selected_indices","style_updated","unselected_style","sel_indices","unselected_indices","mark_data","new_style","indices","set_default_style","set_style_on_elements","apply_styles","style_arr","all_indices","style_dict","compute_view_padding","show_tooltip","mouse_events","tooltip_view","popper","enableEventListeners","move_tooltip","popper_reference","scheduleUpdate","hide_tooltip","disableEventListeners","refresh_tooltip","tooltip_interactions","is_hover_element","clicked_data","get_data_dict","create_tooltip","tooltip_model","add_to_dom_only","event_dispatcher","event_name","custom_msg_sender","event_listeners","event_data","reset_interactions","reset_click","reset_hover","reset_legend_hover","mouse_move","mouse_out","legend_mouse_out","hovered_data","hit_check","class_name","basemodel","semver_range","MarkModel","BaseModel","_model_name","_model_module","_view_module","_model_module_version","_view_module_version","scales_metadata","preserve_domain","display_legend","labels","apply_clip","selected","enable_hover","tooltip","tooltip_style","opacity","interactions","hover","tooltip_location","update_scales","handle_destroy","dirty","update_data","update_domains","unregister_all_scales","del_domain","model_id","get_key_for_dimension","get_key_for_orientation","orientation","serializers","deserialize","unpack_models","WidgetModel","get_typed_field","param","return_value","val","convert_to_date","set_typed_field","saved_value","return_object","current_type","convert_to_json","get_date_elem","set_date_elem","interaction","BaseSelector","Interaction","height","mark_views_promise","populate_mark_views","selected_changed","marks_changed","handle_custom_messages","fig","mark_ids","mark_model","Promise","mark_views","views","fig_mark_ids","_models","mark_indices","mark_model_id","msg","BaseXSelector","create_scales","update_scale_domain","set_range","xy","initial_range","padded_range","target_range","expand_domain","iter","BaseXYSelector","x_scale","y_scale","update_xscale_domain","set_x_range","update_yscale_domain","set_y_range","mark","Scale","create_event_listeners","model_domain_changed","highlight_axis","unhighlight_axis","compute_and_set_domain","set_domain","old_range","new_range","ScaleModel","_view_name","allow_padding","domains","set_init_state","set_listeners","update_domain","scalemodel","LinearScaleModel","min_range","mid_range","global_min","NEGATIVE_INFINITY","global_max","POSITIVE_INFINITY","reverse_changed","min_max_changed","min_from_data","max_from_data","prev_reverse","reverse_domain","new_width","prev_domain","min_index","prev_min","prev_max","prev_mid","min_width","stabilized","new_min","new_max","data_array","colorbrewer","get_max_index","color_object","cycle_colors","colors_len","return_array","iters","cycle_colors_from_scheme","scheme","num_steps","color_set","color_index","get_linear_scale","get_ordinal_scale","get_linear_scale_range","get_ordinal_scale_range","lasso","point_in_rectangle","is_inside","seg_inter_seg","point_in_lasso","rect_inter_rect","lasso_inter_rect","LinearScale","unpadded_scale","limit","pixel","pixels","pix","radian","sqrt3","tan30","circleSymbol","bqSymbolTypes","arrow","ellipse","rectangle","symbolSize","symbolType","symbolSkew","types","utils","log10","UNITS_ARRAY","Axis","scale_promise","set_scale_promise","offset_promise","get_offset_promise","tick_format","generate_tick_formatter","set_scales_range","append_axis","update_scale","axis_scale","rescale_axis","set_tick_values","tickformat_changed","apply_tick_styling","update_label","update_color","update_grid_lines","update_label_location","update_label_offset","update_display","update_offset","parent_margin_updated","update_offset_scale_domain","g_axisline","get_axis_transform","side","animate","tick_values","useticks","num_ticks","get_ticks_from_array_or_length","numDateTicks","allticks","oom","guess_tick_format","get_tick_transforms","is_vertical","offset_scale","create_axis","get_label_attributes","get_text_styling","return_promise","resolve","scale_x","scale_y","offset_value","highlight","unhighlight","get_basic_transform","process_offset","label_x","label_location","label_offset","calculate_label_offset","text-anchor","grid_type","is_x","animation_duration","tickOffset","redraw_axisline","update_axis_domain","scale_range","max_index","displayed","old","_get_digits","_replace_trailing_zeros","str","e_index","search","get_format_func","prec","fmt_string","new_str","_linear_scale_precision","diff","max_digits","diff_digits","linear_sc_format","date_sc_format","div","log_sc_format","_log_sc_precision","OrdinalScale","outer_padding","abs_diff","pixel_vals","ind","Spectral","3","4","5","6","7","8","9","10","11","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","12","Dark2","Paired","Pastel2","Pastel1","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","viridis","256","plasma","inferno","magma","ScatterBase","base_creation_promise","drag_listener","drag_start","on_drag","drag_ended","hovered_style","unhovered_style","hovered_index","process_interactions","size_scale","opacity_scale","skew_scale","rotation_scale","update_position","color_scale","color_scale_updated","update_default_size","update_default_opacities","update_default_skew","set_drag_behavior","update_selected","update_hovered","hovered_style_updated","unhovered_style_updated","get_element_color","get_element_size","get_element_opacity","default_opacities","get_element_skew","get_element_rotation","x_pixels","y_pixels","pixel_coords","elements","unique_id","elements_added","scatter_hover_handler","draw_elements","add_element","delete_element","reset_selection","scatter_click_handler","legend_click","legend_hover","updated_view","elem_index","accelKey","ctrlKey","metaKey","cancelBubble","stopPropagation","hov_indices","unhovered_indices","legend_el","rect_dim","el_added","draw_legend_elements","max_length","sel_index","selector_changed","point_selector","rect_selector","clearing_style","update_array","x_data","y_data","set_drag_style","dragged_node","reset_drag_style","restrict_x","restrict_y","selected_deleter","mouse_pos","curr_pos","markmodel","ScatterBaseModel","hovered_point","enable_move","enable_delete","update_on_move","update_mark_data","min_len","update_unique_ids","xj","yj","ColorScale","create_d3_scale","update_extrapolation","color_range","linearscalemodel","colorutils","ColorScaleModel","colors_changed","prev_length","n_colors","create_domain","mid_index","markers","bqSymbol","Lines","base_render_promise","dot","update_line_xy","update_style","update_path_style","update_fill","update_labels","update_stroke_width","update_legend_labels","update_curves_subset","update_line_style","update_marker","update_marker_size","get_line_style","stroke_width","fill_color","opacities","fill_opacities","curves","get_fill_color","update_marker_style","path_closure","interpolation","legend_line","legend_path_data","update_multi_range","brush_extent","x_start","x_end","idx_start","idx_end","selector_model","curve_labels","get_labels","legend_data","fill_colors","legend","display_labels","curves_subset","plotarea_height","curves_sel","last_xy","update_dots_xy","new_curves","draw_dots","dots","sub_index","marker_padding","line_padding","marker","marker_size","popperreference","Figure","DOMWidgetView","_get_height_width","suggested_height","suggested_width","max_ratio","min_ratio","width_undefined","height_undefined","min_height","impl_dimensions","x_pad_dict","y_pad_dict","x_padding_arr","y_padding_arr","figure_padding_x","figure_padding_y","update_plotarea_dimensions","PositionReference","placement","plotarea_width","fig_axes","fig_marks","clip_path","title","save_png","save_svg","create_figure_scales","ViewList","add_mark","remove_mark","replace_dummy_nodes","update_marks","update_legend","set_interaction","axis_views","add_axis","update_title","dummy_node","replaceChild","title_style_updated","background_style_updated","change_layout","legend_style_updated","legend_text_updated","x_scale_promise","y_scale_promise","scale_model","scale_padding","fig_padding","scale_id","get_mark_plotarea_height","get_mark_plotarea_width","remove_from_padding_dict","dict","mark_view","cid","update_padding_dict","mark_scales_updated","prev_scale_models","update_paddings","mark_padding_updated","state_change","child_x_scale","child_y_scale","processPhosphorMessage","clientHeight","clientWidth","requestAnimationFrame","legend_location","legend_g","max_label_len","child_count","legend_height","coords","get_legend_coords","disp","y_start","fig_width","fig_height","interaction_view","get_svg","replaceAll","cloneNode","regs","css","sheets","styleSheets","rules","cssRules","rule","selectorText","console","warn","cssText","get_css","defs","firstChild","outerHTML","svg2svg","filename","devicePixelRatio","image","Image","canvas","getContext","drawImage","download","href","toDataURL","src","btoa","encodeURIComponent","ElementReference","elt","configurable","_a","halfwidth","halfheight","global","isBrowser","longerTimeoutBrowsers","timeoutDuration","fn","called","scheduled","functionToCheck","getStyleComputedProperty","element","getParentNode","nodeName","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","getOffsetParent","offsetParent","getRoot","findCommonOffsetParent","element1","element2","Node","DOCUMENT_POSITION_FOLLOWING","setStart","setEnd","commonAncestorContainer","firstElementChild","isOffsetContainer","element1root","getScroll","upperSide","scrollingElement","getBordersSize","styles","sideA","sideB","isIE10","isIE10$1","appVersion","getSize","computedStyle","getWindowSizes","classCallCheck","Constructor","createClass","defineProperties","descriptor","writable","protoProps","staticProps","_extends","getClientRect","scrollTop","scrollLeft","sizes","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getBoundaries","reference","boundariesElement","boundaries","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","computeAutoPlacement","refRect","rects","sortedAreas","_ref","getArea","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","state","getOuterSizes","marginBottom","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","arr","check","runModifiers","modifiers","ends","cur","enabled","isModifierEnabled","modifierName","getSupportedPropertyName","prefixes","upperProp","toCheck","getWindow","setupEventListeners","updateBound","passive","scrollElement","attachToScrollParents","scrollParents","isBody","eventsEnabled","cancelAnimationFrame","removeEventListeners","isNumeric","setStyles","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","basePlacement","useHeight","fragments","frag","divider","splitRegex","ops","op","mergeWithPrevious","toValue","index2","Defaults","removeOnDestroy","onCreate","onUpdate","shiftvariation","_data$offsets","isVertical","shiftOffsets","preventOverflow","primary","escapeWithReference","secondary","keepTogether","opSide","_data$offsets$arrow","arrowElement","sideCapitalized","altSide","arrowElementSize","popperMarginSide","popperBorderSide","sideValue","flip","flipped","originalPlacement","placementOpposite","flipOrder","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","getOppositeVariation","inner","subtractLength","hide","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","prefixedProperty","willChange","invertTop","invertLeft","x-placement","arrowStyles","applyStyle","setAttributes","onLoad","modifierOptions","Popper","_this","isDestroyed","isCreated","jquery","Utils","PopperUtils","__webpack_exports__","content","locals","mediaQuery","alreadyImportedModules","stylesInDom","isOldIE","getHeadElement","getElementsByTagName","singletonElement","singletonCounter","styleElementsInsertedAtTop","addStylesToDom","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","media","sourceMap","insertStyleElement","styleElement","lastStyleElementInsertedAtTop","insertAt","removeStyleElement","createStyleElement","singleton","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","linkElement","rel","createLinkElement","blob","oldSrc","styleSheet","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","loadedModules","loadedModule","target_name","GridHeatMapModel","column","null_color","row_align","column_align","stroke","anchor_style","columns","num_cols","flat_colors","row_num","col_num","column_num","_cell_num","identify_modes","modes","row_scale","column_scale","data_nrow","data_ncol","AxisModel","label","grid_lines","label_color","grid_color","tick_style","tick_rotate","validate_orientation","validate_side","save_changes","ColorAxisModel","HandDraw","cursor","set_lines_view","set_limits","update_line_index","lines_model","mark_index","lines_view","mouse_entry","memory","xindex","line_index","previous_pos","newx","newy","oldx","old_index","nns","new_index","min_x","valid_max","max_x","xy_data","capnfloor","valid_min","Bars","set_scale_orientation","dom_scale","range_scale","dom","rang","dom_offset","range_offset","adjust_offset","update_colors","update_type","realign","update_stroke_and_opacities","bar_click_handler","draw_zero_line","base_value","draw_bars","selected_groups","bars","bar_groups","model_domain","bars_sel","dom_control","rang_control","dom_max","is_stacked","y_ref","group_dom","rect_coords","avail_space","HandDrawModel","OHLC","update_stroke","update_opacities","up_color","down_color","draw_legend_icon","draw_mark_paths","update_selected_colors","current_range","stick","new_sticks","y_index","x_max","dat","offset_in_x_units","data_point","close","headline_top","headline_bottom","to_left_side","scaled_mark_widths","min_x_difference","calculate_mark_width","head_path_candle","tail_path_candle","body_path_candle","head_path_bar","tail_path_bar","body_path_bar","y_offset","x_offset","min_distance","dist","leg","bottom_y_offset","top_y_offset","BarsModel","color_mode","is_y_2d","x_elem","y0_neg","y0_left","y_elem","pos_max","neg_max","apply_color_to_groups","single_bar_d","bar_grp_index","bar_d","bar_index","Hist","bars_selected","calculate_bar_width","bar_width","num_bins","bin_pixels","x_bins","calc_data_indices","reset_colors","calc_bar_indices_from_data_idx","select_color","selected_bins","intervals","reduce_intervals","num_intervals","start_index","end_index","calc_data_indices_from_data_range","start_pixel","end_pixel","bar_indices","OHLCModel","box_fill_color","outlier_fill_color","update_format","print_bad_format","min_x_dist","max_y_height","return_val","substr","HistModel","midpoints","normalized","normalize_data","x_mid","x_data_ind","create_uniform_bins","save_and_update","x_width","it","return_dict","bin_start","bin_end","min_val","max_val","step_size","SelectorModel","marks","OneDSelectorModel","TwoDSelectorModel","FastIntervalSelectorModel","IndexSelectorModel","line_width","BrushIntervalSelectorModel","brushing","BrushSelectorModel","selected_x","selected_y","MultiSelectorModel","_selected","show_names","LassoSelectorModel","Boxplot","update_outlier_fill_color","update_box_fill_color","update_box_width","calculate_mark_max_width","get_box_width","plotWidth","maxWidth","update_idx_selected","selected_stroke","prepareBoxPlots","auto_detect_outliers","plotData","outlierData","displayValue","boxUpper","boxLower","boxMedian","iqr","lowerBound","upperBound","whiskerMax","MAX_VALUE","whiskerMin","MIN_VALUE","plotY","parentClass","boxplot","fillcolor","new_boxplots","xOffset","scaleX","medianY","maxY","minY","outliers","IndexSelector","color_change","initial_click","xpixel","invert_pixel","visibility","ignore_gui_update","scale_changed","ordinalscale","colurutils","OrdinalColorScale","model_ticks_changed","BoxplotModel","box_width","elm","Label","update_text","dragged_size","LabelModel","rotate_angle","font_size","font_unit","drag_size","font_weight","OrdinalScaleModel","domain_changed","ord_domain","sel_utils","BaseBrushSelector","brush_render","brush_start","brush_move","brush_end","set_brush_scale","brushsel","adjust_rectangle","convert_and_save","_update_brush","clear_brush","update_mark_selected","extent_x","extent_y","BrushSelector","empty_selection","x_ordinal","y_ordinal","pixel_extent_x","pixel_extent_y","BrushIntervalSelector","change_color","pixel_extent","add_remove_classes","add_classes","remove_classes","r_class","a_class","MultiSelector","curr_index","create_brush","selecting_brush","labels_change","prev_names","get_label","prev_label","new_brush_g","old_handler","brush_g","hide_names","set_text_location","create_scale","baseselector","LassoSelector","all_vertices","lasso_counter","drag_move","drag_end","keydown","create_new_lasso","current_vertices","lasso_name","lassos_to_delete","PanZoom","mousewheel","scale_views","xscale_views","yscale_views","xdomains","xdiffs","set_scale_attribute","ydomains","ydiffs","delta","xpos","factor","ypos","attribute_name","ColorBar","vertical","set_scale","bar_height","get_topg_transform","redraw_axis","get_colorbar_transform","axis_line_scale","get_label_transform","colorBar","draw_color_bar","set_axisline_domain","colorSpacing","get_color_bar_width","stop-color","stop-opacity","stroke-width","set_axisline_scale_range","rectangles","ColorAxis","PanZoomModel","allow_pan","allow_zoom","snapshot_scales","reset_scales","set_state","scales_states","get_state","Pie","pie_g","inner_radius","outer_arc","update_radii","position_center","update_values","click_handler","slices","pos","mid_angle_location","arc_data","mid_angle","_current","label_trans","polylines","display_values","values_format","PieModel","start_angle","end_angle","DateColorScale","colorscale","DateColorScaleModel","DateScale","scatterbase","Scatter","update_xy_position","update_names","new_colors","len_opac","text_loc","drag_color","original_color","DateScaleModel","LinesModel","labels_visibility","line_style","close_path","color_data","y_length","data_length","FlexLineModel","data_len","width_data","width_scale","ScatterModel","default_skew","default_size","display_names","names_unique","show_labels","unique_ids","FastIntervalSelector","freeze_but_move","freeze_dont_move","dblclick","int_len","vert_factor","interval_size","LogScale","eval","LogScaleModel","SquareMarketMap","sector_data","tree_map","font","text-align","FigureModel","axes","fig_color","title_style","background_style","legend_style","legend_text","preserve_aspect","min_aspect_ratio","max_aspect_ratio","fig_margin","padding_x","padding_y","Map","map_id","geo_scale","remove_map","transformed_g","fill_g","highlight_g","stroke_g","geodata","fill_g_colorfill","validate_color","mouseover_handler","hovered_stroke","hovered_stroke_width","hovered_fill","mouseout_handler","hoverfill","choice","selected_fill","selected_stroke_width","change_stroke_color","change_map_color","change_selected","change_selected_fill","change_selected_stroke","temp","is_object_empty","is_empty","default_color","Tooltip","update_formats","create_table","update_tooltip","tooltip_formats","fmt","tooltip_table","table_rows","TooltipModel","DOMWidgetModel","FlexLine","update_and_draw","g_elements","make_axis_bold","make_axis_non_bold","get_element_width","create_labels","topojson","MapModel","hover_highlight","hovered_styles","stroke_color","selected_styles","map_data","color_data_updated","objects","subunits","update_properties","transformAbsolute","feature$1","topology","absolute","geometryType","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","emptyIndex","dp","fg","gf","meshArcs","geomsByArc","geoms","cartesianTriangleArea","triangle","mergeArcs","polygonsByArc","components","register","ring$$","component","ki","compareArea","mesh","indexesByArc","ij","ik","presimplify","triangleArea","relative","transformRelative","heap","up","down","removed","minAreaHeap","maxArea","factory","GeoScale","set_projection","reset_scale","Mercator","Albers","AlbersUSA","EquiRectangular","Orthographic","Gnomonic","Stereographic","GeoScaleModel","MercatorModel","scale_factor","create_projection","attribute_changed","AlbersModel","AlbersUSAModel","EquiRectangularModel","OrthographicModel","clip_angle","GnomonicModel","StereographicModel","figure","MarketMap","set_top_el_style","num_rows","row_groups","enable_select","set_area_dimensions","fig_map","fig_click","fig_hover","fig_names","freeze_tooltip_loc","update_default_tooltip","create_scale_views","draw_group_names","create_tooltip_widget","column_width","row_height","reset_drawing_controls","prev_x","prev_y","y_direction","x_direction","group_iter","recolor_chart","colors_updated","show_groups","update_selected_stroke","update_hovered_stroke","update_font_style","clear_selected","apply_selected","compute_dimensions_and_draw","draw_map","ref_data","group_data","display_text","num_colors","colors_map","get_color","mapped_data","display","grouped_data","running_sums","color_scale_model","num_items","set_row_limits","tooltip_fields","set_scales","update_map_colors","rect_groups","get_group_transform","end_points","return_arr","get_new_cords","get_end_points","element_count","new_groups","pointer-events","dominant-baseline","get_cell_transform","cell_click_handler","mousemove_handler","create_bounding_path","end_point","min_y","flex-direction","align-content","align-items","justify-content","word-wrap","clientRects","selected_cell","past_border_y","past_border_x","new_x","new_y","row_limits","num_cells","start_col","start_row","current_row","top_row","bottom_row","across","init_x","init_y","rows_remaining","cols_remaining","elem_remaining","calc_end_point_source","elem_filled","calc_end_point_dest","no_cont_cols","leftover_elem","editing_copy","other_prop","curr_elem","dim","max_iter","final_val","filtered_array","min_elem","max_elem","lesser_arr","greater_arr","curr_x","curr_y","GridHeatMap","row_range","col_scale","expand_scale_domain","current_pixels","min_diff","diffs","new_pixel","new_end","new_start","update_opacity","_cell_nums_from_indices","row_index","anchor_cell_index","col_index","cell_num","_filter_cells_by_index","get_element_fill","display_cells","_filter_cells_by_cell_num","cell_numbers","selected_elements","unselected_elements","selected_cell_nums","unsel_cell_nums","anchor_num","anchor_element","col_indices","row_indices","sel_cols","column_pixels","sel_rows","row_pixels","new_domain","row_start_aligned","col_start_aligned","row_plot_data","get_tile_plotting_data","column_plot_data","widths","display_rows","col_nums","col","display_cell_groups","display_format_str","display_format","start_points","pixel_points","is_positive","MarketMapModel","map_width","map_height","cols","map_margin","group_stroke","font_style","tooltip_widget","HeatMap","x_range","draw_canvas","x_plot_data","get_x_plotting_data","y_plot_data","get_y_plotting_data","total_width","total_height","ctx","heights","fillStyle","fillRect","scaled_data","get_x_padding","get_y_padding","HeatMapModel","ToolbarModel","_panning","_panzoom","panzoom","cached_interaction","_create_panzoom_model","widget_manager","new_widget","model_name","model_module","model_module_version","view_name","view_module","view_module_version","x_scales","y_scales","Toolbar","onclick","panzoomicon","_reset","refreshicon","_save","saveicon","GraphModel","update_node_data","node_data","label_display","shape","shape_attrs","new_attrs","get_shape_attrs","xval","yval","update_link_data","link_color_scale","link_color","link_data","link_matrix","data_scale_key_map","Graph","force_layout","link_color_scale_updated","update_charge","update_link_distance","data_updated","get_node_color","directed","link_width","xloc","hover_handler","link_dist","link_arc","link_line","midx","midy","link_slant_line","link_type","link_path_func","last_el","last_image","im","update_image","x_scaled","y_scaled","ImageModel"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\n\n// the following is a regex to match all valid time formats that can be\n// generated with d3 as of 2nd March 2015. If new formats are added to d3\n// those new formats need to be added to the regex\nvar time_format_regex = new RegExp(\"^(((((\\\\*)|(/*)|(-*))(\\\\s*)%([aAbBdeHIjmMLpSUwWyYZ]{1}))+)|((\\\\s*)%([cxX]{1})))$\");\n\nmodule.exports = {\n    getCustomRange: function(array) {\n        var first = array[0];\n        var end = array[array.length - 1];\n        var pivot;\n        if(array[0] > array[1]) {\n            pivot = d3.min(array);\n        } else {\n            pivot = d3.max(array);\n        }\n        return [d3.scale.linear().range([first, pivot]), d3.scale.linear().range([pivot, end])];\n    },\n\n    deepCopy: function (obj) {\n        // This makes a deep copy of JSON-parsable objects\n        // (no cycling or recombining)\n        // Backbone model attributes must be JSON parsable. Hence there is\n        // no need for a fancier logic, and it is surprisingly efficient.\n        return JSON.parse(JSON.stringify(obj));\n    },\n\n    is_valid_time_format: function(format) {\n        return time_format_regex.test(format);\n    }\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\n\nvar Mark = widgets.WidgetView.extend({\n\n    initialize : function() {\n        this.setElement(document.createElementNS(d3.ns.prefix.svg, \"g\"));\n        this.d3el = d3.select(this.el);\n        Mark.__super__.initialize.apply(this, arguments);\n    },\n\n    render: function() {\n        this.x_padding = 0;\n        this.y_padding = 0;\n        this.parent = this.options.parent;\n        this.uuid = widgets.uuid();\n        var scale_creation_promise = this.set_scale_views();\n        var that = this;\n        this.listenTo(this.model, \"scales_updated\", function() {\n            this.set_scale_views().then(_.bind(this.draw, this));\n        }, this);\n\n        this.colors = this.model.get(\"colors\");\n\n        if(this.options.clip_id && this.model.get(\"apply_clip\")) {\n            this.d3el.attr(\"clip-path\", \"url(#\" + this.options.clip_id + \")\");\n        }\n        this.tooltip_div = d3.select(document.createElement(\"div\"))\n            .attr(\"class\", \"mark_tooltip\")\n            .attr(\"id\", \"tooltip_\" + this.uuid)\n            .style(\"display\", \"none\")\n            .style(\"opacity\", 0);\n\n        this.bisect = d3.bisector(function(d) { return d; }).left;\n        this.d3el.style(\"display\", (this.model.get(\"visible\") ? \"inline\" : \"none\"));\n        this.display_el_classes = [];\n        this.event_metadata = {\n            \"mouse_over\": {\n                \"msg_name\": \"hover\",\n                \"lookup_data\": true,\n                \"hit_test\": true,\n            },\n            \"legend_clicked\":  {\n                \"msg_name\": \"legend_click\",\n                \"hit_test\": true,\n            },\n            \"element_clicked\": {\n                \"msg_name\": \"element_click\",\n                \"lookup_data\": true,\n                \"hit_test\": true,\n            },\n            \"parent_clicked\":  {\n                \"msg_name\": \"background_click\",\n                \"hit_test\": false,\n            },\n            \"legend_mouse_over\": {\n                \"msg_name\": \"legend_hover\",\n                \"hit_test\": true\n            },\n        };\n\n        return scale_creation_promise;\n    },\n\n    set_scale_views: function() {\n        // first, if this.scales was already defined, unregister from the\n        // old ones.\n        for (var key in this.scales) {\n            this.stopListening(this.scales[key]);\n        }\n\n        var scale_models = this.model.get(\"scales\");\n        var that = this;\n        var scale_promises = {};\n        _.each(scale_models, function(model, key) {\n            scale_promises[key] = that.create_child_view(model);\n        });\n        return widgets.resolvePromisesDict(scale_promises).then(function(scales) {\n            that.scales = scales;\n            that.set_positional_scales();\n            that.initialize_additional_scales();\n            that.set_ranges();\n            that.trigger(\"mark_scales_updated\");\n        });\n    },\n\n    set_positional_scales: function() {\n        // Positional scales are special in that they trigger a full redraw\n        // when their domain is changed.\n        // This should be overloaded in specific mark implementation.\n    },\n\n    initialize_additional_scales: function() {\n        // This function is for the extra scales that are required for\n        // rendering mark. The scale listeners are set up in this function.\n        // This should be overloaded in the specific mark implementation.\n    },\n\n    set_internal_scales: function() {\n        // Some marks such as Bars need to create additional scales\n        // to draw themselves. In this case, the set_internal_scales\n        // is overloaded.\n    },\n\n    create_listeners: function() {\n        this.listenTo(this.model, \"change:visible\", this.update_visibility, this);\n        this.listenTo(this.model, \"change:selected_style\", this.selected_style_updated, this);\n        this.listenTo(this.model, \"change:unselected_style\", this.unselected_style_updated, this);\n\n        this.parent.on(\"margin_updated\", this.relayout, this);\n        this.model.on_some_change([\"labels\", \"display_legend\"], function() {\n            this.model.trigger(\"redraw_legend\");\n        }, this);\n    },\n\n    remove: function() {\n        this.model.off(null, null, this);\n        this.d3el.transition(\"remove\").duration(0).remove();\n        this.tooltip_div.remove();\n        Mark.__super__.remove.apply(this);\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        elem.selectAll(\".legend\" + this.uuid).remove();\n        elem.append(\"g\")\n          .attr(\"transform\", \"translate(\" + x_disp + \", \" + y_disp + \")\")\n          .attr(\"class\", \"legend\" + this.uuid)\n          .on(\"mouseover\", _.bind(this.highlight_axes, this))\n          .on(\"mouseout\", _.bind(this.unhighlight_axes, this))\n        .append(\"text\")\n          .text(this.model.get(\"labels\")[0]);\n        return [1, 1];\n    },\n\n    highlight_axes: function() {\n        _.each(this.model.get(\"scales\"), function(model) {\n            model.trigger(\"highlight_axis\");\n        });\n    },\n\n    unhighlight_axes: function() {\n        _.each(this.model.get(\"scales\"), function(model) {\n            model.trigger(\"unhighlight_axis\");\n        });\n    },\n\n    relayout: function() {\n        // Called when the figure margins are updated. To be overloaded in\n        // specific mark implementation.\n    },\n\n    invert_range: function(start_pxl, end_pxl) {\n        return [start_pxl, end_pxl];\n    },\n\n    invert_point: function(pxl) {\n        return [pxl];\n    },\n\n    // TODO: is the following function really required?\n    invert_multi_range: function(array_pixels) {\n        return array_pixels;\n    },\n\n    update_visibility: function(model, visible) {\n        this.d3el.style(\"display\", visible ? \"inline\" : \"none\");\n    },\n\n    get_colors: function(index) {\n        // cycles over the list of colors when too many items\n        this.colors = this.model.get(\"colors\");\n        var len = this.colors.length;\n        return this.colors[index % len];\n    },\n\n    // Style related functions\n    selected_style_updated: function(model, style) {\n        this.selected_style = style;\n        this.clear_style(model.previous(\"selected_style\"), this.selected_indices);\n        this.style_updated(style, this.selected_indices);\n    },\n\n    unselected_style_updated: function(model, style) {\n        this.unselected_style = style;\n        var sel_indices = this.selected_indices;\n        var unselected_indices = (sel_indices) ?\n            _.range(this.model.mark_data.length).filter(function(index){\n                return sel_indices.indexOf(index) === -1;\n            }) : [];\n        this.clear_style(model.previous(\"unselected_style\"), unselected_indices);\n        this.style_updated(style, unselected_indices);\n    },\n\n    style_updated: function(new_style, indices) {\n        // reset the style of the elements and apply the new style\n        this.set_default_style(indices);\n        this.set_style_on_elements(new_style, indices);\n    },\n\n    apply_styles: function(style_arr) {\n        if(style_arr === undefined || style_arr == null) {\n            style_arr = [this.selected_style, this.unselected_style];\n        }\n        var all_indices = _.range(this.model.mark_data.length);\n        for(var i = 0; i < style_arr.length; i++) {\n            this.clear_style(style_arr[i]);\n        }\n\n        this.set_default_style(all_indices);\n\n        this.set_style_on_elements(this.selected_style, this.selected_indices);\n        var unselected_indices = (!this.selected_indices) ?\n            [] : _.difference(all_indices, this.selected_indices);\n        this.set_style_on_elements(this.unselected_style, unselected_indices);\n    },\n\n    // Abstract functions which have to be overridden by the specific mark\n    clear_style: function(style_dict, indices) {\n    },\n\n    set_default_style:function(indices) {\n    },\n\n    set_style_on_elements: function(style, indices) {\n    },\n\n    compute_view_padding: function() {\n        //This function sets the x and y view paddings for the mark using\n        //the variables x_padding and y_padding\n    },\n\n    show_tooltip: function(mouse_events) {\n        //this function displays the tooltip at the location of the mouse\n        //event is the d3 event for the data.\n        //mouse_events is a boolean to enable mouse_events or not.\n        //If this property has never been set, it will default to false.\n        if(this.tooltip_view) {\n            var mouse_pos = d3.mouse(this.parent.el);\n            if(mouse_events === undefined || mouse_events === null || (!(mouse_events))) {\n                this.tooltip_div.style(\"pointer-events\", \"none\");\n            } else {\n                this.tooltip_div.style(\"pointer-events\", \"all\");\n            }\n            var transition = this.tooltip_div.style(this.model.get(\"tooltip_style\"))\n                .style(\"display\", null);\n            this.parent.popper.enableEventListeners();\n            this.move_tooltip();\n        }\n    },\n\n    move_tooltip: function(mouse_events) {\n        if(this.tooltip_view) {\n            this.parent.popper_reference.x = d3.event.clientX;\n            this.parent.popper_reference.y = d3.event.clientY;\n            this.parent.popper.scheduleUpdate();\n        }\n    },\n\n    hide_tooltip: function() {\n        //this function hides the tooltip. But the location of the tooltip\n        //is the last location set by a call to show_tooltip.\n        this.parent.popper.disableEventListeners();\n        this.tooltip_div.style(\"pointer-events\", \"none\");\n        this.tooltip_div.style(\"opacity\", 0)\n            .style(\"display\", \"none\");\n    },\n\n    refresh_tooltip: function(tooltip_interactions) {\n        //the argument controls pointer interactions with the tooltip. a\n        //true value enables pointer interactions while a false value\n        //disables them\n        var el = d3.select(d3.event.target);\n        if(this.is_hover_element(el)) {\n            var data = el.data()[0];\n            var clicked_data = this.model.get_data_dict(data, data.index);\n            this.trigger(\"update_tooltip\", clicked_data);\n            this.show_tooltip(tooltip_interactions);\n        }\n    },\n\n    create_tooltip: function() {\n        //create tooltip widget. To be called after mark has been displayed\n        //and whenever the tooltip object changes\n        var tooltip_model = this.model.get(\"tooltip\");\n        var that = this;\n        if(tooltip_model) {\n            var tooltip_creation_promise = this.create_child_view(tooltip_model);\n            tooltip_creation_promise.then(function(view) {\n                if(that.tooltip_view) {\n                    that.tooltip_view.remove();\n                }\n                //remove previous tooltip\n                that.tooltip_view = view;\n                that.tooltip_div.node().appendChild(view.el);\n                view.trigger(\"displayed\", {\"add_to_dom_only\": true});\n            });\n        } else {\n            if(that.tooltip_view) {\n                that.tooltip_view.remove();\n            }\n        }\n    },\n\n    event_dispatcher: function(event_name, data) {\n        //sends a custom mssg to the python side if required\n        this.custom_msg_sender(event_name);\n        if(this.event_listeners[event_name] !== undefined) {\n            _.bind(this.event_listeners[event_name], this, data)();\n        }\n    },\n\n    custom_msg_sender: function(event_name) {\n        var event_data = this.event_metadata[event_name];\n        if(event_data !== undefined) {\n            var data = null;\n            if(event_data.hit_test) {\n                //do a hit test to check valid element\n                var el = d3.select(d3.event.target);\n                if(this.is_hover_element(el)) {\n                    data = el.data()[0];\n                    if(event_data.lookup_data) {\n                        data = this.model.get_data_dict(data, data.index);\n                    }\n                } else {\n                    //do not send mssg if hit test fails\n                    return;\n                }\n            }\n            this.send({event: event_data.msg_name, data: data});\n        }\n    },\n\n    reset_interactions: function() {\n        this.reset_click();\n        this.reset_hover();\n        this.reset_legend_hover();\n        this.event_listeners.legend_clicked = function() {};\n    },\n\n    reset_click: function() {\n        this.event_listeners.element_clicked = function() {};\n        this.event_listeners.parent_clicked = function() {};\n    },\n\n    reset_hover: function() {\n        this.event_listeners.mouse_over = function() {};\n        this.event_listeners.mouse_move = function() {};\n        this.event_listeners.mouse_out = function() {};\n    },\n\n    reset_legend_hover: function() {\n        this.event_listeners.legend_mouse_over = function() {};\n        this.event_listeners.legend_mouse_out = function() {};\n    },\n\n    mouse_over: function() {\n        if(this.model.get(\"enable_hover\")) {\n            var el = d3.select(d3.event.target);\n            if(this.is_hover_element(el)) {\n                var data = el.data()[0];\n                //make tooltip visible\n                var hovered_data = this.model.get_data_dict(data, data.index);\n                this.trigger(\"update_tooltip\", hovered_data);\n                this.show_tooltip();\n                this.send({\n                    event: \"hover\",\n                    point: hovered_data,\n                });\n            }\n        }\n    },\n\n    mouse_out: function() {\n        if(this.model.get(\"enable_hover\")) {\n            var el = d3.select(d3.event.target);\n            if(this.is_hover_element(el)) {\n                var data = el.data()[0];\n                var hovered_data = this.model.get_data_dict(data, data.index);\n                // make tooltip invisible\n                this.hide_tooltip();\n                this.send({\n                    event: \"hover\",\n                    point: hovered_data,\n                });\n            }\n        }\n    },\n\n    mouse_move: function() {\n        if(this.model.get(\"enable_hover\") &&\n            this.is_hover_element(d3.select(d3.event.target))) {\n            this.move_tooltip();\n        }\n    },\n\n    //TODO: Rename function\n    is_hover_element: function(elem) {\n        var hit_check = this.display_el_classes.map(function(class_name) {\n            return elem.classed(class_name);\n        });\n        return (_.compact(hit_check).length > 0);\n    },\n});\n\nmodule.exports = {\n    Mark: Mark\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar MarkModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.BaseModel.prototype.defaults(), {\n            _model_name: \"MarkModel\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n            scales: {},\n            scales_metadata: {},\n            preserve_domain: {},\n            display_legend: true,\n            labels: [],\n            apply_clip: true,\n            visible: true,\n            selected_style: {},\n            unselected_style: {},\n            selected: null,\n            enable_hover: true,\n            tooltip: null,\n            tooltip_style: { opacity: 0.9 },\n            interactions: { hover: \"tooltip\" },\n            tooltip_location: \"mouse\"\n        });\n    },\n\n    // These two attributes are the pixel values which should be appended\n    // to the area of the plot to make sure that the entire mark is visible\n    initialize: function() {\n        MarkModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:scales\", this.update_scales, this);\n        this.once(\"destroy\", this.handle_destroy, this);\n        // `this.dirty` is set to `true` before starting computations that\n        // might lead the state of the model to be temporarily inconsistent.\n        // certain functions of views on that model might check the value\n        // of `this.dirty` before rendering\n        this.dirty = false;\n        this.display_el_classes = [\"mark\"]; //classes on the element which\n        //trigger the tooltip to be displayed when they are hovered over\n        this.update_scales();\n    },\n\n    update_data : function() {\n        // Update_data is typically overloaded in each mark\n        // it triggers the \"data_updated\" event\n        this.update_domains();\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        // update_domains is typically overloaded in each mark to update\n        // the domains related to its scales\n    },\n\n    update_scales: function() {\n        this.unregister_all_scales(this.previous(\"scales\"));\n        this.trigger(\"scales_updated\");\n        this.update_domains();\n    },\n\n    unregister_all_scales: function(scales) {\n        // disassociates the mark with the scale\n        this.dirty = true;\n        for (var key in scales) {\n            scales[key].del_domain([], this.model_id + \"_\" + key);\n        }\n        this.dirty = false;\n        //TODO: Check if the views are being removed\n    },\n\n    handle_destroy: function() {\n        this.unregister_all_scales(this.get(\"scales\"));\n    },\n\n    get_key_for_dimension: function(dimension) {\n        var scales_metadata = this.get(\"scales_metadata\");\n        for (var scale in scales_metadata) {\n            if(scales_metadata[scale].dimension === dimension) {\n                return scale;\n            }\n        }\n        return null;\n    },\n\n    get_key_for_orientation: function(orientation) {\n        var scales_metadata = this.get(\"scales_metadata\");\n        for (var scale in scales_metadata) {\n            if(scales_metadata[scale].orientation === orientation) {\n                return scale;\n            }\n        }\n        return null;\n    }\n\n}, {\n    serializers: _.extend({\n        scales: { deserialize: widgets.unpack_models },\n        tooltip: { deserialize: widgets.unpack_models }\n    }, basemodel.BaseModel.serializers)\n});\n\nmodule.exports = {\n    MarkModel: MarkModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar BaseModel = widgets.WidgetModel.extend({\n\n    defaults: function() {\n        return _.extend(widgets.WidgetModel.prototype.defaults(), {\n            _model_name: \"BaseModel\",\n            _model_module: \"bqplot\",\n            _model_module_version: semver_range\n        });\n    },\n\n    get_typed_field: function(param) {\n        // Function that reads in an array of a field that is typed. It\n        // performs tpe conversions that you may require and returns you\n        // the appropriate array.\n        var value = this.get(param);\n        var return_value = [];\n        var that = this;\n        if(value.hasOwnProperty(\"type\") &&\n           value.hasOwnProperty(\"values\") &&\n           value.values !== null) {\n            if(value.type === \"date\") {\n                return_value = this.get(param).values;\n                if(return_value[0] instanceof Array) {\n                   return_value = return_value.map(function(val) {\n                       return val.map(function(elem) {\n                           return that.convert_to_date(elem);\n                       });\n                   });\n                } else {\n                    return_value = return_value.map(function(val) {\n                        return that.convert_to_date(val);\n                    });\n                }\n            } else {\n                return_value = this.get(param).values;\n            }\n        }\n        return return_value;\n    },\n\n    set_typed_field: function(param, value, options) {\n        // function takes a value which has to be set for a typed field and\n        // performs the conversion needed before sending it across to\n        // Python. This **only** sets the attribute. The caller is\n        // responsible for calling save_changes\n        var saved_value = value;\n        var return_object = {};\n        var that = this;\n        var current_type = this.get(param).type;\n\n        if (saved_value[0] instanceof Array && saved_value[0][0] instanceof Date ||\n            saved_value[0] instanceof Date) {\n            current_type = \"date\";\n        }\n\n        if(saved_value[0] instanceof Array) {\n            if(current_type === \"date\")\n                saved_value = saved_value.map(function(val) {\n                    return val.map(function(elem) {\n                        return that.convert_to_json(elem);\n                    });\n                });\n        } else {\n            if(current_type === \"date\")\n                saved_value = saved_value.map(function(elem) {\n                    return that.convert_to_json(elem);\n                });\n        }\n        // TODO: this is not good. Need to think of something better\n        return_object.type = current_type;\n        return_object.values = saved_value;\n        this.set(param, return_object, options);\n    },\n\n    get_date_elem: function(param) {\n        return this.convert_to_date(this.get(param));\n    },\n\n    set_date_elem: function(param, value) {\n        this.set(param, this.convert_to_json(value));\n    },\n\n    convert_to_date: function(elem) {\n        // Function to convert the string to a date element\n        if(elem === undefined || elem === null) {\n            return null;\n        }\n        return new Date(elem);\n    },\n\n    convert_to_json: function(elem) {\n        // converts the date to a json compliant format\n        if(elem === undefined || elem === null) {\n            return null;\n        } else {\n            if (elem.toJSON === undefined) {\n                return elem;\n            } else {\n                // the format of the string to be sent across is\n                // '%Y-%m-%dT%H:%M:%S.%f'\n                // by default, toJSON returns '%Y-%m-%dT%H:%M:%S.%uZ'\n                // %u is milliseconds. Hence adding 000 to convert it into\n                // microseconds.\n                return elem.toJSON().slice(0, -1) + '000';\n            }\n        }\n    }\n});\n\nmodule.exports = {\n    BaseModel: BaseModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar interaction = require(\"./Interaction\");\n\nvar BaseSelector = interaction.Interaction.extend({\n\n    initialize: function() {\n        this.setElement(document.createElementNS(d3.ns.prefix.svg, \"g\"));\n        this.d3el = d3.select(this.el);\n        interaction.Interaction.__super__.initialize.apply(this, arguments);\n    },\n\n    render: function() {\n        this.parent = this.options.parent;\n        this.width = this.parent.width - this.parent.margin.left - this.parent.margin.right;\n        this.height = this.parent.height - this.parent.margin.top - this.parent.margin.bottom;\n        this.mark_views_promise = this.populate_mark_views();\n    },\n\n    create_listeners: function() {\n        this.parent.on(\"margin_updated\", this.relayout, this);\n        this.listenTo(this.model, \"change:selected\", this.selected_changed);\n        this.listenTo(this.model, \"change:marks\", this.marks_changed);\n        this.listenTo(this.model, \"msg:custom\", this.handle_custom_messages);\n    },\n\n    relayout: function() {\n        this.height = this.parent.height - this.parent.margin.top - this.parent.margin.bottom;\n        this.width = this.parent.width - this.parent.margin.left - this.parent.margin.right;\n    },\n\n    populate_mark_views: function() {\n        var fig = this.parent;\n        var that = this;\n        var mark_ids = this.model.get(\"marks\").map(function(mark_model) {\n            return mark_model.model_id; // Model ids of the marks of the selector\n        });\n        return Promise.all(fig.mark_views.views).then(function(views) {\n            var fig_mark_ids = fig.mark_views._models.map(function(mark_model) {\n                return mark_model.model_id;\n            });  // Model ids of the marks in the figure\n            var mark_indices = mark_ids.map(function(mark_model_id) {\n                return fig_mark_ids.indexOf(mark_model_id); // look up based on model ids\n            });\n            that.mark_views = mark_indices.map(function(elem) {\n                return views[elem]; // return the views, based on the assumption that fig.mark_views is an ordered list\n            });\n        });\n    },\n\n    marks_changed: function() {\n        var that = this;\n        this.populate_mark_views().then(function() {that.selected_changed();});\n    },\n\n    handle_custom_messages: function(msg) {\n        if (msg.type === \"reset\") {\n            this.reset();\n        }\n    },\n\n    reset: function() {\n        //inherited classes should implement this function\n    },\n\n    selected_changed: function() {\n        //inherited classes should implement this function\n    },\n});\n\nvar BaseXSelector = BaseSelector.extend({\n\n    create_scales: function() {\n        if(this.scale) {\n            this.scale.remove();\n        }\n        if(this.model.get(\"scale\")) {\n            var that = this;\n            return this.create_child_view(this.model.get(\"scale\")).then(function(view) {\n                that.scale = view;\n                // The argument is to suppress the update to gui\n                that.update_scale_domain(true);\n                that.set_range([that.scale]);\n                that.scale.on(\"domain_changed\", that.update_scale_domain, that);\n                return view;\n            });\n        }\n    },\n\n    update_scale_domain: function() {\n        // When the domain of the scale is updated, the domain of the scale\n        // for the selector must be expanded to account for the padding.\n        var xy = (this.model.get(\"orientation\") == \"vertical\") ? \"y\" : \"x\"\n        var initial_range = this.parent.padded_range(xy, this.scale.model);\n        var target_range = this.parent.range(xy);\n        this.scale.expand_domain(initial_range, target_range);\n    },\n\n    set_range: function(array) {\n        var xy = (this.model.get(\"orientation\") == \"vertical\") ? \"y\" : \"x\"\n        for(var iter = 0; iter < array.length; iter++) {\n            array[iter].set_range(this.parent.range(xy));\n        }\n    },\n});\n\nvar BaseXYSelector = BaseSelector.extend({\n\n    create_scales: function() {\n        var that = this;\n        if(this.x_scale) {\n            this.x_scale.remove();\n        }\n        if(this.y_scale) {\n            this.y_scale.remove();\n        }\n        var scale_promises = [];\n        if(this.model.get(\"x_scale\")) {\n            scale_promises.push(this.create_child_view(this.model.get(\"x_scale\")).then(function(view) {\n                that.x_scale = view;\n                that.update_xscale_domain();\n                that.set_x_range([that.x_scale]);\n                that.x_scale.on(\"domain_changed\", that.update_xscale_domain, that);\n                return view;\n            }));\n        }\n        if(this.model.get(\"y_scale\")) {\n            scale_promises.push(this.create_child_view(this.model.get(\"y_scale\")).then(function(view) {\n                that.y_scale = view;\n                that.update_yscale_domain();\n                that.set_y_range([that.y_scale]);\n                that.y_scale.on(\"domain_changed\", that.update_yscale_domain, that);\n                return view;\n            }));\n        }\n\n        return Promise.all(scale_promises);\n    },\n\n    set_x_range: function(array) {\n        for(var iter = 0; iter < array.length; iter++) {\n            array[iter].set_range(this.parent.range(\"x\"));\n        }\n    },\n\n    set_y_range: function(array) {\n        for(var iter = 0; iter < array.length; iter++) {\n            array[iter].set_range(this.parent.range(\"y\"));\n        }\n    },\n\n    update_xscale_domain: function() {\n        // When the domain of the scale is updated, the domain of the scale\n        // for the selector must be expanded to account for the padding.\n        var initial_range = this.parent.padded_range(\"x\", this.x_scale.model);\n        var target_range = this.parent.range(\"x\");\n        this.x_scale.expand_domain(initial_range, target_range);\n    },\n\n    update_yscale_domain: function() {\n        // When the domain of the scale is updated, the domain of the scale\n        // for the selector must be expanded to account for the padding.\n        var initial_range = this.parent.padded_range(\"y\", this.y_scale.model);\n        var target_range = this.parent.range(\"y\");\n        this.y_scale.expand_domain(initial_range, target_range);\n    }\n});\n\nmodule.exports = {\n    BaseSelector: BaseSelector,\n    BaseXSelector: BaseXSelector,\n    BaseXYSelector: BaseXYSelector\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\n\nvar Interaction = widgets.WidgetView.extend({\n\n    initialize : function() {\n        this.setElement(document.createElementNS(d3.ns.prefix.svg, \"rect\"));\n        this.d3el = d3.select(this.el);\n        Interaction.__super__.initialize.apply(this, arguments);\n    },\n\n    render: function() {\n        this.parent = this.options.parent;\n\n        // Opaque interation layer\n        this.d3el\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", this.parent.width -\n                           this.parent.margin.left -\n                           this.parent.margin.right)\n            .attr(\"height\", this.parent.height -\n                            this.parent.margin.top -\n                            this.parent.margin.bottom)\n            .attr(\"pointer-events\", \"all\")\n            .attr(\"visibility\", \"hidden\");\n        this.parent.on(\"margin_updated\", this.relayout, this);\n    },\n\n    relayout: function() {\n        // Called when the figure margins are updated.\n        this.d3el\n            .attr(\"width\", this.parent.width -\n                           this.parent.margin.left -\n                           this.parent.margin.right)\n            .attr(\"height\", this.parent.height -\n                            this.parent.margin.top -\n                            this.parent.margin.bottom);\n    },\n\n    remove: function() {\n        _.each(this.mark_views, function(mark) { mark.invert_range(); });\n        this.d3el.remove();\n        Interaction.__super__.remove.apply(this);\n    }\n});\n\nmodule.exports = {\n    Interaction: Interaction\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\n\nvar Scale = widgets.WidgetView.extend({\n\n    render: function() {\n        this.offset = 0;\n    },\n\n    create_event_listeners: function() {\n        this.listenTo(this.model, \"domain_changed\", this.model_domain_changed, this);\n        this.listenTo(this.model, \"highlight_axis\", this.highlight_axis, this);\n        this.listenTo(this.model, \"unhighlight_axis\", this.unhighlight_axis, this);\n    },\n\n    set_range: function(range, padding) {\n        this.scale.range(range);\n    },\n\n    compute_and_set_domain: function(array, id) {\n        this.model.compute_and_set_domain(array, id);\n    },\n\n    set_domain: function(array, id) {\n        this.model.set_domain(array, id);\n    },\n\n    model_domain_changed: function() {\n        this.scale.domain(this.model.domain);\n        this.trigger(\"domain_changed\");\n    },\n\n    highlight_axis: function() {\n        this.trigger(\"highlight_axis\");\n    },\n\n    unhighlight_axis: function() {\n        this.trigger(\"unhighlight_axis\");\n    },\n\n    expand_domain: function(old_range, new_range) {\n        // Base class function. No implementation.\n        // Implementation is particular to the child class\n        // if you have a current range and then a new range and want to\n        // expand the domain to expand to the new range but keep it\n        // consistent with the previous one, this is the function you use.\n    }\n});\n\nmodule.exports = {\n    Scale: Scale\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar ScaleModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.BaseModel.prototype.defaults(), {\n            _model_name: \"ScaleModel\",\n             _view_name: \"Scale\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n            reverse: false,\n            allow_padding: true\n        });\n    },\n\n    initialize: function() {\n        ScaleModel.__super__.initialize.apply(this, arguments);\n        this.domains = {};\n        this.domain = [];\n        this.set_init_state();\n        this.set_listeners();\n    },\n\n    set_init_state: function() {\n        this.type = \"base\";\n    },\n\n    set_listeners: function() {\n        // Function to be implementd by inherited classes.\n    },\n\n    set_domain: function(domain, id) {\n        // Call function only if you have computed the domain yourself. If\n        // you want the scale to compute the domain based on the data for\n        // your scale view, then call compute_and_set_domain\n        this.domains[id] = domain;\n        this.update_domain();\n    },\n\n    del_domain: function(domain, id) {\n        if(this.domains[id] !== undefined) {\n            delete this.domains[id];\n            this.update_domain();\n        }\n    }\n});\n\nmodule.exports = {\n    ScaleModel: ScaleModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar scalemodel = require(\"./ScaleModel\");\n\nvar LinearScaleModel = scalemodel.ScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(scalemodel.ScaleModel.prototype.defaults(), {\n            _model_name: \"LinearScaleModel\",\n            _view_name: \"LinearScale\",\n            min: null,\n            max: null,\n            min_range: 0.6,\n            mid_range: 0.8\n        });\n    },\n\n    initialize: function() {\n        LinearScaleModel.__super__.initialize.apply(this, arguments);\n    },\n\n    set_init_state: function() {\n        this.type = \"linear\";\n        this.global_min = Number.NEGATIVE_INFINITY;\n        this.global_max = Number.POSITIVE_INFINITY;\n    },\n\n    set_listeners: function() {\n        this.on(\"change:reverse\", this.reverse_changed, this);\n        this.reverse_changed();\n        this.on_some_change([\"min\", \"max\"], this.min_max_changed, this);\n        this.min_max_changed();\n        this.on_some_change([\"min_range\", \"mid_range\", \"stabilized\"], this.update_domain, this);\n    },\n\n    min_max_changed: function() {\n        this.min = this.get(\"min\");\n        this.max = this.get(\"max\");\n        this.min_from_data = (this.min === null);\n        this.max_from_data = (this.max === null);\n        this.update_domain();\n    },\n\n    reverse_changed: function(model, value, options) {\n        var prev_reverse = (model === undefined) ? false : model.previous(\"reverse\");\n        this.reverse = this.get(\"reverse\");\n\n        // the domain should be reversed only if the previous value of reverse\n        // is different from the current value. During init, domain should be\n        // reversed only if reverse is set to True.\n        var reverse_domain = (prev_reverse + this.reverse) % 2;\n        if(this.domain.length > 0 && reverse_domain === 1) {\n            this.domain.reverse();\n            this.trigger(\"domain_changed\", this.domain);\n        }\n    },\n\n    update_domain: function() {\n        var that = this;\n        var min = (!this.min_from_data) ?\n            this.min : d3.min(_.map(this.domains, function(d) {\n                return d.length > 0 ? d[0] : that.global_max;\n            }));\n        var max = (!this.max_from_data) ?\n            this.max : d3.max(_.map(this.domains, function(d) {\n                return d.length > 1 ? d[1] : that.global_min;\n            }));\n        var mid = (min + max) * 0.5,\n            new_width = (max - min) * 0.5 / this.get(\"mid_range\");\n            prev_domain = this.domain,\n            min_index = (this.reverse) ? 1 : 0,\n            prev_min = prev_domain[min_index],\n            prev_max = prev_domain[1 - min_index],\n            prev_mid = (prev_max + prev_min) * 0.5,\n            min_width = (prev_max - prev_min) * 0.5 * this.get(\"min_range\");\n\n        var stabilized = this.get(\"stabilized\");\n\n        // If the scale is stabilized, only update if the new min/max is without\n        // a certain range, else update as soon as the new min/max is different.\n        var update_domain = stabilized ?\n            (!(min >= prev_min) || !(min <= prev_mid-min_width) ||\n             !(max <= prev_max) || !(max >= prev_mid+min_width)) :\n            (min !== prev_min || max !== prev_max);\n\n        if (update_domain) {\n            var new_min = stabilized ? mid - new_width : min,\n                new_max = stabilized ? mid + new_width : max;\n            this.domain = (this.reverse) ? [new_max, new_min] : [new_min, new_max];\n            this.trigger(\"domain_changed\", this.domain);\n        }\n    },\n\n    compute_and_set_domain: function(data_array, id) {\n        // Takes an array and calculates the domain for the particular\n        // view. If you have the domain already calculated on your side,\n        // call set_domain function.\n        if(data_array.length === 0) {\n           this.set_domain([], id);\n           return;\n        }\n        var data = data_array[0] instanceof Array ?\n            data_array : [data_array];\n        var min = d3.min(data.map(function(d) { return d3.min(d); }));\n        var max = d3.max(data.map(function(d) { return d3.max(d); }));\n        this.set_domain([min, max], id);\n    }\n});\n\nmodule.exports = {\n    LinearScaleModel: LinearScaleModel,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar colorbrewer = require(\"./colorbrewer\");\nvar utils = require(\"./utils\");\n\nvar default_scheme = 'RdYlGn'\n\nvar cycle_colors = function(colors, count) {\n    var colors_len = colors.length;\n    if(colors_len > count) {\n        return colors.slice(0, count);\n    } else {\n        var return_array = [];\n        var iters = Math.floor(count / colors_len);\n        for(;iters > 0; iters--) {\n            return_array = return_array.concat(colors);\n        }\n        return return_array.concat(colors.slice(0, count % colors_len));\n    }\n};\n\nvar cycle_colors_from_scheme = function(scheme, num_steps) {\n    scheme = (scheme in colorbrewer) ? scheme : default_scheme;\n    var color_set = colorbrewer[scheme];\n\n    // Indices of colorbrewer objects are strings\n    var color_index = num_steps.toString();\n\n    if (num_steps === 2) {\n        return [color_set[3][\"0\"], color_set[3][\"2\"]];\n    } else if (color_index in color_set) {\n        return color_set[color_index];\n    } else {\n        var color_index = get_max_index(color_set).toString();\n        return this.cycle_colors(color_set[color_index], num_steps);\n    }\n};\n\nvar get_linear_scale = function(scheme) {\n    scheme = ((scheme in colorbrewer) && !(colorbrewer[scheme][\"type\"] === \"qual\")) ?\n                  scheme : default_scheme;\n    var color_set = colorbrewer[scheme];\n    var color_index = get_max_index(color_set).toString();\n\n    var colors = color_set[color_index];\n    var scale = d3.scale.linear().range(colors);\n    return scale;\n};\n\nvar get_ordinal_scale = function(scheme, num_steps) {\n    var scale = d3.scale.ordinal();\n    scale.range(this.cycle_colors_from_scheme(scheme, num_steps));\n    return scale;\n};\n\nvar get_linear_scale_range = function(scheme) {\n    return this.get_linear_scale(scheme).range();\n};\n\nvar get_ordinal_scale_range = function(scheme, num_steps) {\n    return this.get_ordinal_scale(scheme, num_steps).range();\n};\n\n// Returns the maximum number of colors available in the colorbrewer object\nvar get_max_index = function(color_object) {\n    return d3.max(Object.keys(color_object).map(Number));\n};\n\nmodule.exports = {\n    cycle_colors: cycle_colors,\n    cycle_colors_from_scheme: cycle_colors_from_scheme,\n    get_linear_scale: get_linear_scale,\n    get_ordinal_scale: get_ordinal_scale,\n    get_linear_scale_range: get_linear_scale_range,\n    get_ordinal_scale_range: get_ordinal_scale_range,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* This module contains elementary geometric functions to determine whether\n * shapes are contained within selectors.\n */\n\nvar lasso = require(\"./lasso_test\");\n\nfunction point_in_rectangle(point, x, y) {\n    // Checks whether `point` is within the rectangle of coordinates\n    // (x0, y0) (x1, y0) (x1, y1) (x0, y1)\n    // If one of x or y is undefined, treat them as [-inf, inf]\n    \n    if (x.length == 0 && y.length == 0) { return false; }\n\n    var is_inside = true;\n    x.sort(function(a, b){return a-b});\n    y.sort(function(a, b){return a-b});\n\n    if (x.length != 0) {\n        is_inside = is_inside && x[0] <= point[0] && point[0] <= x[1];\n    }\n    if (y.length != 0) {\n        is_inside = is_inside && y[0] <= point[1] && point[1] <= y[1];\n    } \n    return is_inside;\n}\n\nfunction rect_inter_rect(x0, y0, x1, y1) {\n    // Checks whether two rectangles intersect\n    return seg_inter_seg(x0, x1) && seg_inter_seg(y0, y1);\n}\n\nfunction lasso_inter_rect(x, y, vertices) {\n    // checks whether the lasso intersects the rectangle of coordinates\n    // (x0, y0) (x1, y0) (x1, y1) (x0, y1)\n\n    for (var i = 0; i < vertices.length; i++) {\n        if (point_in_rectangle(vertices[i], x, y)) { return true; }\n    }\n    return false;\n}\n\nfunction seg_inter_seg(p, q) {\n    // Checks whether the 1d segments [p0, p1] and [q0, q1] intersect\n    // If one of the segments is empty, treat it as [-inf, inf]\n    if (p.length == 0 || q.length == 0) {\n        return (p.length != 0 || q.length != 0);\n    }\n    p.sort(function(a, b){return a-b});\n    q.sort(function(a, b){return a-b});\n    return ((p[0] < q[0] != p[0] < q[1]) || (p[1] < q[0] != p[1] < q[1]) ||\n            (q[0] < p[0] != q[0] < p[1]) || (q[1] < p[0] != q[1] < p[1]));\n}\n\nmodule.exports = {\n    point_in_lasso: lasso.point_in_lasso,\n    point_in_rectangle: point_in_rectangle,\n    rect_inter_rect: rect_inter_rect,\n    lasso_inter_rect: lasso_inter_rect,\n}","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar scale = require(\"./Scale\");\n\nvar LinearScale = scale.Scale.extend({\n\n    render: function() {\n        this.scale = d3.scale.linear();\n        if(this.model.domain.length > 0)\n            this.scale.domain(this.model.domain);\n        this.offset = 0;\n        this.create_event_listeners();\n    },\n\n    expand_domain: function(old_range, new_range) {\n        // If you have a current range and then a new range and want to\n        // expand the domain to expand to the new range but keep it\n        // consistent with the previous one, this is the function you use.\n\n        // The following code is required to make a copy of the actual\n        // state of the scale. Referring to the model domain and then\n        // setting the range to be the old range in case it is not.\n        var unpadded_scale = this.scale.copy();\n\n        // To handle the case for a clamped scale for which we have to\n        // expand the domain, the copy should be unclamped.\n        unpadded_scale.clamp(false);\n        unpadded_scale.domain(this.model.domain);\n        unpadded_scale.range(old_range);\n        this.scale.domain(new_range.map(function(limit) {\n            return unpadded_scale.invert(limit);\n        }));\n    },\n\n    invert: function(pixel) {\n        return this.scale.invert(pixel);\n    },\n\n    invert_range: function(pixels) {\n        //Pixels is a non-decreasing array of pixel values\n        var that = this;\n        return pixels.map(function(pix) { return that.invert(pix); });\n    }\n});\n\nmodule.exports = {\n    LinearScale: LinearScale\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\n\nvar pi = Math.PI,\n    radian = pi / 180,\n    sqrt3 = Math.sqrt(3),\n    tan30 = Math.tan(pi / 6);\n\nvar circleSymbol = function(size) {\n    var r = Math.sqrt(size / pi);\n    return \"M0,\" + r +\n        \"A\" + r + \",\" + r + \" 0 1,1 0,\" + (-r) +\n        \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r +\n        \"Z\";\n};\n\nvar bqSymbolTypes = d3.map({\n    \"circle\": circleSymbol,\n    \"cross\": function(size,e) {\n        var r = Math.sqrt(size / 5) / 2;\n        return \"M\" + -3 * r + \",\" + -r +\n            \"H\" + -r +\n            \"V\" + -3 * r +\n            \"H\" + r +\n            \"V\" + -r +\n            \"H\" + 3 * r +\n            \"V\" + r +\n            \"H\" + r +\n            \"V\" + 3 * r +\n            \"H\" + -r +\n            \"V\" + r +\n            \"H\" + -3 * r +\n            \"Z\";\n    },\n    \"diamond\": function(size, s) {\n        var ry = Math.sqrt(size / (2 * tan30)),\n            rx = ry * tan30;\n        return \"M0,\" + -ry +\n            \"L\" + rx + \",0\" +\n            \" 0,\" + ry +\n            \" \" + -rx + \",0\" +\n            \"Z\";\n    },\n    \"square\": function(size, s) {\n        var r = Math.sqrt(size) / 2;\n        return \"M\" + -r + \",\" + -r +\n            \"L\" + r + \",\" + -r +\n            \" \" + r + \",\" + r +\n            \" \" + -r + \",\" + r +\n            \"Z\";\n    },\n    \"triangle-down\": function(size, s) {\n        var rx = Math.sqrt(size / sqrt3),\n            ry = rx * sqrt3 / 2;\n        return \"M0,\" + ry +\n            \"L\" + rx +\",\" + -ry +\n            \" \" + -rx + \",\" + -ry +\n            \"Z\";\n    },\n    \"triangle-up\": function(size, s) {\n        var rx = Math.sqrt(size / sqrt3),\n            ry = rx * sqrt3 / 2;\n        return \"M0,\" + -ry +\n            \"L\" + rx +\",\" + ry +\n            \" \" + -rx + \",\" + ry +\n            \"Z\";\n    },\n    \"arrow\": function(size, skew) {\n        var angle = 60 + (5 - 60) * skew,\n            s = Math.tan(angle * radian),\n            ry = Math.sqrt(size / s),\n            rx = ry * s / 2;\n        return \"M0,\" + -ry +\n            \"L\" + rx +\",\" + ry +\n            \" \" + -rx + \",\" + ry +\n            \"Z\";\n    },\n    \"ellipse\": function(size, skew) {\n        var s = Math.pow(10, skew),\n            rx = Math.sqrt(size / (pi * s)),\n            ry = rx * s;\n        return \"M0,\" + ry +\n            \"A\" + rx + \",\" + ry + \" 0 1,1 0,\" + (-ry) +\n            \"A\" + rx + \",\" + ry + \" 0 1,1 0,\" + ry +\n            \"Z\";\n    },\n    \"rectangle\": function(size, skew) {\n        var s = Math.pow(10, skew),\n            rx = Math.sqrt(size / s) / 2,\n            ry = rx * s;\n        return \"M\" + -rx + \",\" + -ry +\n            \"L\" + rx + \",\" + -ry +\n            \" \" + rx + \",\" + ry +\n            \" \" + -rx + \",\" + ry +\n            \"Z\";\n    },\n});\n\nfunction symbolSize() {\n    return 64;\n}\n\nfunction symbolType() {\n    return \"circle\";\n}\n\nfunction symbolSkew() {\n    return 0.5;\n}\n\nvar bqSymbol = function() {\n    var type = symbolType,\n        size = symbolSize;\n        skew = symbolSkew;\n\n    function symbol(d,i) {\n        return (bqSymbolTypes.get(type.call(this,d,i)) || circleSymbol)\n            (size.call(this,d,i), skew.call(this, d, i));\n    }\n\n    symbol.type = function(x) {\n        if (!arguments.length) return type;\n        type = d3.functor(x);\n        return symbol;\n    };\n\n    // size of symbol in square pixels\n    symbol.size = function(x) {\n        if (!arguments.length) return size;\n        size = d3.functor(x);\n        return symbol;\n    };\n\n    // skew of symbol, in [0, 1]\n    symbol.skew = function(x) {\n        if (!arguments.length) return skew;\n        skew = d3.functor(x);\n        return symbol;\n    };\n\n    return symbol;\n};\n\nmodule.exports = {\n    symbol: bqSymbol,\n    types: bqSymbolTypes.keys()\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\n\n// Polyfill for Math.log10 in IE11\nMath.log10 = Math.log10 || function (x) {\n    return Math.log(x) / Math.LN10;\n};\n\nvar DATESCALE_WIDTH_THRESHOLD = 500;\nvar UNITS_ARRAY = [\"em\", \"ex\", \"px\"];\n\nvar Axis = widgets.WidgetView.extend({\n\n    initialize : function() {\n        this.setElement(document.createElementNS(d3.ns.prefix.svg, \"g\"));\n        this.d3el = d3.select(this.el);\n        Axis.__super__.initialize.apply(this, arguments);\n    },\n\n    render: function() {\n        this.d3el.style(\"display\", this.model.get(\"visible\") ? \"inline\" : \"none\");\n        this.parent = this.options.parent;\n        this.margin = this.parent.margin;\n        this.height = this.parent.height - (this.margin.top + this.margin.bottom);\n        this.width = this.parent.width - (this.margin.left + this.margin.right);\n\n        var scale_promise = this.set_scale_promise(this.model.get(\"scale\"));\n        var offset_promise = this.get_offset_promise();\n\n        var that = this;\n        Promise.all([scale_promise, offset_promise]).then(function() {\n            that.create_listeners();\n            that.tick_format = that.generate_tick_formatter();\n            that.set_scales_range();\n            that.append_axis();\n        });\n    },\n\n    create_listeners: function() {\n        // Creates all event listeners\n\n        this.listenTo(this.model, \"change:scale\", function(model, value) {\n            this.update_scale(model.previous(\"scale\"), value);\n            // TODO: rescale_axis does too many things. Decompose\n            this.axis.scale(this.axis_scale.scale); // TODO: this is in redraw_axisline\n            this.rescale_axis();\n        }, this);\n\n        // Tick attributes\n        this.listenTo(this.model, \"change:tick_values\", this.set_tick_values, this);\n        this.listenTo(this.model, \"change:tick_format\", this.tickformat_changed, this);\n        this.listenTo(this.model, \"change:num_ticks\", this.set_tick_values, this);\n        this.listenTo(this.model, \"change:tick_rotate\", this.apply_tick_styling, this);\n        this.listenTo(this.model, \"change:tick_style\", this.apply_tick_styling, this);\n\n        // Label attributes\n        this.model.on_some_change([\"label\", \"label_color\"], this.update_label, this);\n\n        // Axis attributes\n        this.listenTo(this.model, \"change:color\", this.update_color, this);\n        this.model.on_some_change([\"grid_color\", \"grid_lines\"], this.update_grid_lines, this);\n        this.listenTo(this.model, \"change:label_location\", this.update_label_location, this);\n        this.listenTo(this.model, \"change:label_offset\", this.update_label_offset, this);\n        this.listenTo(this.model, \"change:visible\", this.update_visibility, this);\n        this.model.on_some_change([\"side\", \"orientation\"], this.update_display, this);\n        this.listenTo(this.model, \"change:offset\", this.update_offset, this);\n        this.parent.on(\"margin_updated\", this.parent_margin_updated, this);\n    },\n\n    update_offset: function() {\n        var offset_creation_promise = this.get_offset_promise();\n        var that = this;\n        offset_creation_promise.then(function() {\n            that.set_scales_range();\n            that.update_offset_scale_domain();\n            that.g_axisline.attr(\"transform\", that.get_axis_transform());\n            that.update_grid_lines();\n        });\n    },\n\n    update_display: function() {\n        var side = this.model.get(\"side\");\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n\n        if(is_vertical) {\n            this.axis.orient(side === \"right\" ? \"right\" : \"left\");\n        } else {\n            this.axis.orient(side === \"top\" ? \"top\" : \"bottom\");\n        }\n        this.rescale_axis();\n    },\n\n    set_tick_values: function(animate) {\n        // Sets specific tick values from \"tick_values\" parameter\n\n        var tick_values = this.model.get_typed_field(\"tick_values\");\n        var useticks = [];\n        var num_ticks = this.model.get(\"num_ticks\");\n\n        if (tick_values !== undefined && tick_values !== null && tick_values.length > 0) {\n            this.axis.tickValues(this.get_ticks_from_array_or_length(tick_values));\n        } else if (num_ticks !== undefined && num_ticks !== null) {\n            this.axis.tickValues(this.get_ticks_from_array_or_length());\n        } else {\n            if (this.axis_scale.model.type === \"ordinal\") {\n                this.axis.tickValues(this.axis_scale.scale.domain());\n            } else if (this.axis_scale.model.type === \"date\") {\n                // Reduce number of suggested ticks if figure width is below the\n                // threshold. Note: \"undefined\" will result in the D3 default\n                // setting\n                var numDateTicks = (this.width < DATESCALE_WIDTH_THRESHOLD) ? \n                                        5 : \n                                        undefined;\n                this.axis.tickValues(this.axis_scale.scale.ticks(numDateTicks));\n            } else if (this.axis_scale.model.type === \"log\") {\n                var i, r;\n                var allticks = this.axis_scale.scale.ticks();\n                var oom = Math.abs(Math.log10(this.axis_scale.scale.domain()[1] / this.axis_scale.scale.domain()[0]));\n                if (oom < 2) {\n                    this.axis.tickValues(allticks);\n                } else if (oom < 7) {\n                    useticks = [];\n                    for (i = 0; i < allticks.length; i++) {\n                        r = Math.abs(Math.log10(allticks[i]) % 1);\n                        if ((Math.abs(r) < 0.001) ||\n                            (Math.abs(r-1) < 0.001) ||\n                            (Math.abs(r-0.30103) < 0.001) ||\n                            (Math.abs(r-0.69897) < 0.001)) {\n                            useticks.push(allticks[i]);\n                        }\n                    }\n                    this.axis.tickValues(useticks);\n                } else {\n                    useticks = [];\n                    var s = Math.round(oom / 10);\n                    for (i = 0; i < allticks.length; i++) {\n                        r = Math.abs(Math.log10(allticks[i]) % s);\n                        if ((Math.abs(r) < 0.001) || (Math.abs(r-s) < 0.001)) {\n                            useticks.push(allticks[i]);\n                        }\n                    }\n                    this.axis.tickValues(useticks);\n                }\n            } else {\n                this.axis.tickValues(this.axis_scale.scale.ticks());\n            }\n        }\n        if(this.model.get(\"tick_format\") === null ||\n            this.model.get(\"tick_format\") === undefined) {\n                if(this.axis_scale.type !== \"ordinal\") {\n                    this.tick_format = this.guess_tick_format(this.axis.tickValues());\n                }\n        }\n        this.axis.tickFormat(this.tick_format);\n\n\n        if(this.g_axisline) {\n             this.g_axisline\n                .transition(\"set_tick_values\")\n                .duration(animate === true ? this.parent.model.get(\"animation_duration\") : 0)\n                .call(this.axis);\n\n            this.apply_tick_styling();\n        }\n    },\n\n    tickformat_changed: function() {\n        this.tick_format = this.generate_tick_formatter();\n        this.axis.tickFormat(this.tick_format);\n        if(this.g_axisline) {\n            this.g_axisline.call(this.axis);\n        }\n        this.apply_tick_styling();\n    },\n\n    apply_tick_styling: function () {\n        // Applies current tick styling to all displayed ticks\n\n        this.g_axisline.selectAll(\".tick text\")\n                .style(this.model.get(\"tick_style\"))\n                .attr(\"transform\", this.get_tick_transforms());\n    },\n\n    get_tick_transforms: function() {\n        // parses object and returns a string that can be passed to a D3 as a \n        // set of options\n        // Note: Currently, only the `tick_rotate` attribute uses .transform()\n\n        var rotation = this.model.get(\"tick_rotate\");\n        return `rotate(${rotation})`;\n    },\n\n    update_scales: function() {\n        // Updates the domains of both scales\n\n        this.update_scale_domain();\n        this.update_offset_scale_domain();\n    },\n\n    update_scale_domain: function() {\n        // Sets the scale domain (Range of input values)\n\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n\n        var initial_range = (is_vertical) ?\n            this.parent.padded_range(\"y\", this.axis_scale.model) : \n            this.parent.padded_range(\"x\", this.axis_scale.model);\n\n        var target_range = (is_vertical) ?\n            this.parent.range(\"y\") : this.parent.range(\"x\");\n\n        this.axis_scale.expand_domain(initial_range, target_range);\n        this.axis.scale(this.axis_scale.scale);\n    },\n\n    update_offset_scale_domain: function() {\n        // Sets the domain (range of input values) of the offset scale \n\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n\n        if (this.offset_scale) {\n            var initial_range = (!is_vertical) ?\n                this.parent.padded_range(\"y\", this.offset_scale.model) :\n                this.parent.padded_range(\"x\", this.offset_scale.model);\n\n            var target_range = (!is_vertical) ?\n                this.parent.range(\"y\") :\n                this.parent.range(\"x\");\n\n            this.offset_scale.expand_domain(initial_range, target_range);\n        }\n    },\n\n    generate_tick_formatter: function() {\n        if(this.axis_scale.model.type === \"date\" ||\n           this.axis_scale.model.type === \"date_color_linear\") {\n            if(this.model.get(\"tick_format\")) {\n                return d3.time.format(this.model.get(\"tick_format\"));\n            } else {\n                return this.guess_tick_format();\n            }\n        } else if (this.axis_scale.model.type === \"ordinal\") {\n            var tick_format = this.model.get(\"tick_format\");\n            if(tick_format) {\n                //TODO: This may not be the best way to do this. We can\n                //check the instance of the elements in the domain and\n                //apply the format depending on that.\n                if(utils.is_valid_time_format(tick_format)) {\n                    return d3.time.format(tick_format);\n                } else {\n                    return d3.format(tick_format);\n                }\n            }\n            return function(d) { return d; };\n        } else {\n            // linear or log scale\n            if(this.model.get(\"tick_format\")) {\n                return d3.format(this.model.get(\"tick_format\"));\n            }\n            return this.guess_tick_format();\n        }\n    },\n\n    set_scales_range: function() {\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n\n        this.axis_scale.set_range((is_vertical) ?\n            [this.height, 0] : [0, this.width]);\n        if(this.offset_scale) {\n            this.offset_scale.set_range((is_vertical) ?\n                [0, this.width] : [this.height, 0]);\n        }\n    },\n\n    create_axis: function() {\n        // Creates the initial D3 axis and sets it on this.axis\n\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n        var side = this.model.get(\"side\");\n\n        if (is_vertical) {\n            this.axis = d3.svg.axis().scale(this.axis_scale.scale)\n                .orient(side === \"right\" ? \"right\" : \"left\");\n        } else {\n            this.axis = d3.svg.axis().scale(this.axis_scale.scale)\n                .orient(side === \"top\" ? \"top\" : \"bottom\");\n        }\n    },\n\n    append_axis: function() {\n        this.create_axis();\n        this.update_scales();\n\n        // Create initial SVG element\n        this.g_axisline = this.d3el.append(\"g\")\n            .attr(\"class\", \"axis\")\n            .attr(\"transform\", this.get_axis_transform())\n            .call(this.axis);\n\n        // Create element for axis label\n        this.g_axisline.append(\"text\")\n            .attr(\"class\", \"axislabel\")\n            .attr(this.get_label_attributes())\n            .style(this.get_text_styling())\n            .text(this.model.get(\"label\"));\n\n        // Apply custom settings\n        this.set_tick_values();\n        this.update_grid_lines();\n        this.update_color();\n        this.apply_tick_styling();\n        this.update_label();\n    },\n\n    get_offset_promise: function() {\n        /*\n         * The offset may require the creation of a Scale, which is async\n         * Hence, get_offset_promise returns a promise.\n         */\n        var that = this;\n        var return_promise = Promise.resolve();\n        var offset = this.model.get(\"offset\");\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n\n        if (offset.value !== undefined && offset.value !== null) {\n            //If scale is undefined but, the value is defined, then we have\n            //to\n            if(offset.scale === undefined) {\n                this.offset_scale = (is_vertical) ?\n                    this.parent.scale_x : this.parent.scale_y;\n            } else {\n                return_promise = this.create_child_view(offset.scale)\n                    .then(function(view) {\n                        that.offset_scale = view;\n                        if(that.offset_scale.model.type !== \"ordinal\") {\n                            that.offset_scale.scale.clamp(true);\n                        }\n                        that.offset_scale.on(\"domain_changed\", function() {\n                            this.update_offset_scale_domain();\n                            this.g_axisline.attr(\"transform\", this.get_axis_transform());\n                            this.update_grid_lines();\n                        }, that);\n                    });\n            }\n            this.offset_value = offset.value;\n        } else {\n            //required if the offset has been changed from a valid value\n            //to null\n            this.offset_scale = this.offset_value = undefined;\n        }\n        return return_promise;\n    },\n\n    highlight: function() {\n        this.g_axisline.classed(\"axisbold\", true);\n    },\n\n    unhighlight: function() {\n        this.g_axisline.classed(\"axisbold\", false);\n    },\n\n    get_basic_transform: function() {\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n        var side = this.model.get(\"side\");\n\n        if (is_vertical){\n            return (side === \"right\") ? this.width : 0;\n        } else {\n            return (side === \"top\") ? 0 : this.height;\n        }\n    },\n\n    get_axis_transform: function() {\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n        if(is_vertical){\n            return \"translate(\" + this.process_offset() + \", 0)\";\n        } else {\n            return \"translate(0, \" + this.process_offset() + \")\";\n        }\n    },\n\n    process_offset: function() {\n        if(this.offset_scale === undefined || this.offset_scale === null) {\n            return this.get_basic_transform();\n        } else {\n            var value = this.offset_scale.scale(this.offset_value);\n            //The null check is required for two reasons. Value may be null\n            //or the scale is ordinal which does not include the value in\n            //its domain.\n            value = (value === undefined) ? this.get_basic_transform()\n                                          : value;\n            return this.offset_scale.offset + value;\n        }\n    },\n\n    get_label_attributes: function() {\n        // Returns an object based on values of \"label_location\" and \"label_offset\"\n\n        var label_x = 0;\n        var label_location = this.model.get(\"label_location\");\n        var label_offset = this.calculate_label_offset();\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n        var side = this.model.get(\"side\");\n\n         if (is_vertical){\n            if (label_location === \"start\") {\n                label_x = -(this.height);\n            } else if (label_location === \"middle\") {\n                label_x = -(this.height) / 2;\n            }\n            if(side === \"right\") {\n                return {\n                    transform: \"rotate(-90)\",\n                    x: label_x,\n                    y: label_offset,\n                    dy: \"1ex\",\n                    dx: \"0em\"\n                };\n            } else {\n                return {\n                     transform: \"rotate(-90)\",\n                     x: label_x,\n                     y: label_offset,\n                     dy: \"0em\", dx: \"0em\"\n                };\n            }\n        } else {\n            if(label_location === \"middle\") {\n                label_x = this.width / 2;\n            } else if (label_location === \"end\") {\n                label_x = this.width;\n            }\n            if(side === \"top\") {\n                return {\n                    x: label_x,\n                    y: label_offset ,\n                    dy: \"0.75ex\",\n                    dx: \"0em\", transform: \"\"\n                };\n            } else {\n                return {\n                    x: label_x,\n                    y: label_offset,\n                    dy: \"0.25ex\",\n                    dx: \"0em\", transform: \"\"\n                };\n            }\n        }\n    },\n\n    get_text_styling: function() {\n        // This function returns the text styling based on the attributes\n        // of the axis. As of now, only the text-anchor attribute is set.\n        // More can be added :)\n        var label_location = this.model.get(\"label_location\");\n        if(label_location === \"start\")\n            return {\"text-anchor\" : \"start\"};\n        else if(label_location === \"end\")\n            return {\"text-anchor\" : \"end\"};\n        else\n            return {\"text-anchor\" : \"middle\"};\n    },\n\n    update_label: function() {\n        this.g_axisline.select(\"text.axislabel\")\n            .text(this.model.get(\"label\"));\n        this.d3el.selectAll(\".axislabel\").selectAll(\"text\");\n        if(this.model.get(\"label_color\") !== \"\" &&\n           this.model.get(\"label_color\") !== null) {\n            this.g_axisline.select(\"text.axislabel\")\n              .style(\"fill\", this.model.get(\"label_color\"));\n            this.d3el.selectAll(\".axislabel\").selectAll(\"text\")\n              .style(\"fill\", this.model.get(\"label_color\"));\n        }\n    },\n\n    update_label_location: function() {\n        this.g_axisline.select(\"text.axislabel\")\n            .attr(this.get_label_attributes())\n            .style(this.get_text_styling());\n    },\n\n    update_label_offset: function(model, offset) {\n        this.label_offset = this.calculate_label_offset();\n        this.g_axisline.select(\"text.axislabel\")\n          .attr(\"y\", this.label_offset);\n    },\n\n    calculate_label_offset: function() {\n        // If the label offset is not defined, depending on the orientation\n        // of the axis, an offset is set.\n\n        var label_offset = this.model.get(\"label_offset\");\n        var is_vertical = this.model.get(\"orientation\") === \"vertical\";\n        var side = this.model.get(\"side\");\n\n        if (!label_offset) {\n            if (!is_vertical) {\n                label_offset = \"2em\";\n            } else {\n                label_offset = \"4ex\";\n            }\n        }\n        // Label_offset is a signed distance from the axis line. Positive\n        // is away from the figure and negative is towards the figure. The\n        // notion of away and towards is different for left/right and\n        // top/bottom axis.\n        var index = -1;\n        for (var i = 0; (i < UNITS_ARRAY.length && index === -1); i++) {\n            index = label_offset.indexOf(UNITS_ARRAY[i]);\n        }\n\n        if (index === -1) {\n            return label_offset;\n        }\n\n        if (side === \"top\" || side === \"left\") {\n            var num = -1 * parseInt(label_offset.substring(0, index));\n            label_offset = num + label_offset.substring(index);\n        }\n        return label_offset;\n    },\n\n    update_grid_lines: function(animate) {\n        var grid_type = this.model.get(\"grid_lines\");\n        var side = this.model.get(\"side\");\n        var orientation = this.model.get(\"orientation\");\n        var is_x = orientation !== \"vertical\";\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n        var tickSize = orientation === \"vertical\" ? -this.width : -this.height;\n        var tickOffset = 0;\n\n        //apply offsets if applicable\n        if (this.offset_scale) {\n            var offset = this.offset_scale.scale(this.offset_value);\n\n            if (side === \"bottom\" || side == \"right\") {\n                tickSize = -offset;\n                tickOffset = is_x ? this.height - offset : this.width - offset;\n            } else {\n                tickSize += offset;\n                tickOffset = -offset;\n            }\n        }\n\n        if (grid_type !== \"none\") {\n            this.axis.innerTickSize(tickSize).outerTickSize(6);\n        } else {\n            this.axis.tickSize(6);\n        }\n\n        this.g_axisline\n            .selectAll(\".tick\")\n            .classed(\"short\", grid_type === \"none\");\n\n        this.g_axisline\n            .transition(\"update_grid_lines\").duration(animation_duration)\n            .call(this.axis)\n            .selectAll(\".tick line\")\n            .attr(is_x ? \"y1\" : \"x1\",\n                  (this.offset_scale && grid_type !== \"none\") ? tickOffset : null)\n            .style(\"stroke-dasharray\", grid_type === \"dashed\" ? (\"5, 5\") : null);\n\n        this.apply_tick_styling();\n\n        if (this.model.get(\"grid_color\")) {\n            this.g_axisline\n                .selectAll(\".tick line\")\n                .style(\"stroke\", this.model.get(\"grid_color\"));\n        }\n    },\n\n    update_color: function() {\n        if (this.model.get(\"color\")) {\n            this.d3el.selectAll(\".tick\")\n                .selectAll(\"text\")\n                .style(\"fill\", this.model.get(\"color\"));\n            this.d3el.selectAll(\".domain\")\n                .style(\"stroke\", this.model.get(\"color\"));\n        }\n    },\n\n    redraw_axisline: function() {\n        // TODO: This call might not be necessary\n        // TODO: Doesn't do what it states.\n        // Has to redraw from a clean slate\n        this.update_scales();\n\n        //animate axis and grid lines on domain changes\n        var animate = true;\n        this.set_tick_values(animate);\n        this.update_grid_lines(animate);\n    },\n\n    rescale_axis: function() {\n        //function to be called when the range of the axis has been updated\n        //or the axis has to be repositioned.\n        this.set_scales_range();\n        //The following calls to update domains are made as the domain\n        //of the axis scale needs to be recalculated as the expansion due\n        //to the padding depends on the size of the canvas because of the\n        //presence of fixed pixel padding for the bounding box.\n        this.update_axis_domain();\n        this.update_scales();\n        this.g_axisline.attr(\"transform\", this.get_axis_transform());\n        this.g_axisline.call(this.axis);\n        this.g_axisline.select(\"text.axislabel\")\n            .attr(this.get_label_attributes())\n            .style(this.get_text_styling());\n        // TODO: what follows is currently part of redraw_axisline\n        this.set_tick_values();\n        this.update_grid_lines();\n        this.apply_tick_styling();\n    },\n\n    update_axis_domain: function() {\n        var initial_range = (this.vertical) ?\n            this.parent.padded_range(\"y\", this.axis_scale.model) : this.parent.padded_range(\"x\", this.axis_scale.model);\n        var target_range = (this.vertical) ?\n            this.parent.range(\"y\") : this.parent.range(\"x\");\n        this.axis_scale.expand_domain(initial_range, target_range);\n        this.axis.scale(this.axis_scale.scale);\n    },\n\n    parent_margin_updated: function() {\n        // sets the new dimensions of the g element for the axis.\n        this.margin = this.parent.margin;\n        this.width = this.parent.width - this.margin.left - this.margin.right;\n        this.height = this.parent.height - this.margin.top - this.margin.bottom;\n        this.rescale_axis();\n    },\n\n    update_visibility: function(model, visible) {\n        this.d3el.style(\"display\", visible ? \"inline\" : \"none\");\n    },\n\n    get_ticks_from_array_or_length: function(data_array) {\n        // This function is to be called when the ticks are passed explicitly\n        // or the number of ticks to be drawn.\n        // Have to do different things based on the type of the scale.\n        // If an array is passed, then just scale and return equally spaced\n        // points in the array. This is the way it is done for ordinal\n        // scales.\n        var step, max;\n        var num_ticks = this.model.get(\"num_ticks\");\n\n        if(this.axis_scale.model.type === \"ordinal\") {\n            data_array = this.axis_scale.scale.domain();\n        }\n        if(num_ticks !== undefined && num_ticks !== null && num_ticks < 2) {\n            return [];\n        }\n        if(data_array) {\n            if(num_ticks == undefined || num_ticks == null || data_array.length <= num_ticks) {\n                return data_array;\n            } else {\n               step = Math.floor(data_array.length / (num_ticks - 1));\n               var indices = _.range(0, data_array.length, step);\n               return indices.map(function(index) {\n                   return data_array[index];\n               });\n            }\n        }\n        var scale_range = this.axis_scale.scale.domain();\n        var max_index = (this.axis_scale.scale.domain().length - 1);\n        step = (scale_range[max_index] - scale_range[0]) / (num_ticks - 1);\n        if(this.axis_scale.model.type === \"date\" ||\n           this.axis_scale.model.type === \"date_color_linear\") {\n        //For date scale, the dates have to be converted into milliseconds\n        //since epoch time and then back.\n            scale_range[0] = scale_range[0].getTime();\n            scale_range[max_index] = scale_range[max_index].getTime();\n            max = (scale_range[max_index] + (step * 0.5));\n            var range_in_times = _.range(scale_range[0], max, step);\n            return range_in_times.map(function(elem) {\n                return new Date(elem);\n            });\n        } else {\n            max = (scale_range[max_index] + (step * 0.5));\n            return _.range(scale_range[0], max, step);\n        }\n    },\n\n    set_scale_promise: function(model) {\n        // Sets the child scale\n        var that = this;\n        if (this.axis_scale) { this.axis_scale.remove(); }\n        return this.create_child_view(model).then(function(view) {\n            // Trigger the displayed event of the child view.\n            that.displayed.then(function() {\n                view.trigger(\"displayed\");\n            });\n            that.axis_scale = view;\n            that.axis_scale.on(\"domain_changed\", that.redraw_axisline, that);\n            that.axis_scale.on(\"highlight_axis\", that.highlight, that);\n            that.axis_scale.on(\"unhighlight_axis\", that.unhighlight, that);\n        });\n    },\n\n    update_scale: function(old, scale) {\n        // Called when the child scale changes\n        this.axis_scale.off();\n        this.set_scale_promise(scale);\n    },\n\n    _get_digits: function(number) {\n        return (number === 0) ? 1 : (Math.floor(Math.log10(Math.abs(number))) + 1);\n    },\n\n    _replace_trailing_zeros: function(str) {\n        //regex to replace the trailing\n        //zeros after the decimal point.\n        //Handles the case of exponentially formatted string\n        //TODO: Should be done in a single regex\n        var e_index = str.search(\"e\");\n        if(e_index != -1) {\n            return str.substring(0, e_index).replace(/(\\.[0-9]*?)0+$/gi, \"$1\").replace(/\\.$/, \"\") +\n                   str.substring(e_index);\n        } else {\n            return str.replace(/(\\.[0-9]*?)0+$/gi, \"$1\").replace(/\\.$/, \"\");\n        }\n    },\n\n    get_format_func: function(prec) {\n        if(prec === 0) {\n        // format this as an integer\n            return function(number) { return d3.format(\"d\")(Math.round(number)); };\n        }\n        //if it is -1, then it is a generic format\n        var fmt_string = (prec == -1) ? \"\" : (\".\" + (prec));\n        var that = this;\n        return function(number) {\n            var str = d3.format(fmt_string + \"g\")(number);\n            var reg_str = str.replace(/-|\\.|e/gi, \"\");\n            if(reg_str.length < 6) {\n                return that._replace_trailing_zeros(str);\n            } else {\n                //if length is more than 6, format it exponentially\n                if(fmt_string === \"\") {\n                    //if fmt_string is \"\", then the number o/p can be\n                    //arbitrarily large\n                    var new_str = d3.format(fmt_string + \"e\")(number);\n                    if(new_str.length >= 7) {\n                        //in the case of a round off error, setting the max\n                        //limit to be 6\n                         new_str = d3.format(\".6e\")(number);\n                    }\n                    return that._replace_trailing_zeros(new_str);\n                } else {\n                    //Format with the precision required\n                    return that._replace_trailing_zeros(d3.format(fmt_string + \"e\")(number));\n                }\n            }\n        };\n    },\n\n    _linear_scale_precision: function(ticks) {\n        ticks = (ticks === undefined || ticks === null) ? this.axis_scale.scale.ticks() : ticks;\n        var diff = Math.abs(ticks[1] - ticks[0]);\n        var max = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        var max_digits = this._get_digits(max);\n        // number of digits in the max\n        var diff_digits = this._get_digits(diff);\n        // number of digits in the min\n\n        var precision = Math.abs(max_digits - diff_digits);\n        // difference in the number of digits. The number of digits we have\n        // to display is the diff above + 1.\n        var limit = 6;\n        // limit is a choice of the max number of digits that are\n        // represented\n        if(max_digits >= 0 && diff_digits > 0) {\n            if(max_digits <= 6) {\n            // format the number as an integer\n                return 0;\n            } else  {\n            // precision plus 1 is returned here as they are the number of\n            // digits to be displayed. Capped at 6\n                return Math.min(precision, 6) + 1;\n            }\n        }\n        else if(diff_digits <= 0) {\n            // return math.abs(diff_digits) + max_digits + 1. Capped at 6.\n            return Math.min((Math.abs(diff_digits) + max_digits), 6) + 1;\n        }\n    },\n\n    linear_sc_format: function(ticks) {\n        return this.get_format_func(this._linear_scale_precision(ticks));\n    },\n\n    date_sc_format: function(ticks) {\n        // assumes that scale is a linear date scale\n        ticks = (ticks === undefined || ticks === null) ? this.axis_scale.scale.ticks() : ticks;\n        // diff is the difference between ticks in milliseconds\n        var diff = Math.abs(ticks[1] - ticks[0]);\n        var div = 1000;\n\n        if(Math.floor(diff / div) === 0) {\n            //diff is less than a second\n            return [[\".%L\", function(d) { return d.getMilliseconds(); }],\n            [\":%S\", function(d) { return d.getSeconds(); }],\n            [\"%I:%M\", function(d) { return true; }]];\n        } else if (Math.floor(diff / (div *= 60)) === 0) {\n            //diff is less than a minute\n             return [[\":%S\", function(d) { return d.getSeconds(); }],\n             [\"%I:%M\", function(d) { return true; }]];\n        } else if (Math.floor(diff / (div *= 60)) === 0) {\n            // diff is less than an hour\n            return [[\"%I:%M\", function(d) { return d.getMinutes(); }],\n            [\"%I %p\", function(d) { return true; }]];\n        } else if (Math.floor(diff / (div *= 24)) === 0) {\n            //diff is less than a day\n             return [[\"%I %p\", function(d) { return d.getHours(); }],\n             [\"%b %d\", function(d) { return true; }]];\n        } else if (Math.floor(diff / (div *= 27)) === 0) {\n            //diff is less than a month\n            return [[\"%b %d\", function(d) { return d.getDate() !== 1; }],\n                    [\"%b %Y\", function(d) { return true; }]];\n        } else if (Math.floor(diff / (div *= 12)) === 0) {\n            //diff is less than a year\n            return [[\"%b %d\", function(d) { return d.getDate() !== 1; }],\n                    [\"%b %Y\", function() { return true;}]];\n        } else {\n            //diff is more than a year\n            return  [[\"%b %d\", function(d) { return d.getDate() !== 1; }],\n                     [\"%b %Y\", function(d) { return d.getMonth();}],\n                     [\"%Y\", function() { return true; }]];\n        }\n    },\n\n    log_sc_format: function(ticks) {\n        return this.get_format_func(this._log_sc_precision(ticks));\n    },\n\n    _log_sc_precision: function(ticks) {\n        ticks = (ticks === undefined || ticks === null) ? this.axis_scale.scale.ticks() : ticks;\n        var ratio = Math.abs(Math.log10(ticks[1] / ticks[0]));\n\n        if(ratio >= 0.3010) {\n            //format them as they are with the max_length of 6\n            return -1;\n        } else {\n            //return a default of 3 digits of precision\n            return 3;\n        }\n    },\n\n    guess_tick_format: function(ticks) {\n        if(this.axis_scale.model.type == \"linear\" ||\n           this.axis_scale.model.type == \"color_linear\") {\n            return this.linear_sc_format(ticks);\n        } else if (this.axis_scale.model.type == \"date\" ||\n                   this.axis_scale.model.type == \"date_color_linear\") {\n            return d3.time.format.multi(this.date_sc_format(ticks));\n        } else if (this.axis_scale.model.type == \"log\") {\n            return this.log_sc_format(ticks);\n        }\n    }\n});\n\n\nmodule.exports = {\n    Axis: Axis\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar scale = require(\"./Scale\");\n\nvar OrdinalScale = scale.Scale.extend({\n\n    render: function() {\n        this.scale = d3.scale.ordinal();\n        this.scale.domain(this.model.domain);\n        this.offset = 0;\n        this.create_event_listeners();\n    },\n\n    set_range: function(range, padding) {\n       padding = (padding === undefined) ? 0 : padding;\n       this.scale.rangeBands(range, padding, padding / 2.0);\n       this.offset = (this.scale.domain().length === 0) ? 0 : this.scale.rangeBand() / 2.0;\n    },\n\n    expand_domain: function(old_range, new_range) {\n        // If you have a current range and then a new range and want to\n        // expand the domain to expand to the new range but keep it\n        // consistent with the previous one, this is the function you use.\n\n        // I am trying to expand the ordinal scale by setting an\n        // appropriate value for the outer padding of the ordinal scale so\n        // that the starting point of each of the bins match. once that\n        // happens, the labels are placed at the center of the bins\n\n        var unpadded_scale = this.scale.copy();\n        unpadded_scale.rangeBands(old_range);\n        var outer_padding = (unpadded_scale.range().length > 0) ?\n            Math.abs((new_range[1] - old_range[1]) / unpadded_scale.rangeBand()) : 0;\n        this.scale.rangeBands(new_range, 0.0, outer_padding);\n    },\n\n    invert: function(pixel) {\n        // returns the element in the domain which is closest to pixel\n        // value passed. If the pixel is outside the range of the scale,\n        var that = this;\n        var domain = this.scale.domain();\n        var pixel_vals = domain.map(function(d) { \n            return that.scale(d) + that.scale.rangeBand() / 2;\n        });\n        var abs_diff = pixel_vals.map(function(d) {\n            return Math.abs(pixel - d);\n        });\n        return domain[abs_diff.indexOf(d3.min(abs_diff))];\n    },\n\n    invert_range: function(pixels) {\n        //return all the indices between a range\n        //pixels should be a non-decreasing two element array\n        var that = this;\n        var domain = this.scale.domain();\n        var pixel_vals = domain.map(function(d) {\n            return that.scale(d) + that.scale.rangeBand() / 2;\n        });\n        var indices = _.range(pixel_vals.length);\n        var filtered_ind = indices.filter(function(ind) { \n            return (pixel_vals[ind] >= pixels[0] &&\n                    pixel_vals[ind] <= pixels[1]);\n        });\n        return filtered_ind.map(function(ind) { return domain[ind]; });\n    }\n});\n\nmodule.exports = {\n    OrdinalScale: OrdinalScale\n};\n","/* Apache-Style Software License for ColorBrewer software and ColorBrewer Color\n * Schemes\n * \n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The Pennsylvania State\n * University.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions as source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n * \n * 2. The end-user documentation included with the redistribution, if any, must\n * include the following acknowledgment: \"This product includes color\n * specifications and designs developed by Cynthia Brewer\n * (http://colorbrewer.org/).\" Alternately, this acknowledgment may appear in the\n * software itself, if and wherever such third-party acknowledgments normally\n * appear.\n * \n * 4. The name \"ColorBrewer\" must not be used to endorse or promote products\n * derived from this software without prior written permission. For written\n * permission, please contact Cynthia Brewer at cbrewer@psu.edu.\n * \n * 5. Products derived from this software may not be called \"ColorBrewer\", nor\n * may \"ColorBrewer\" appear in their name, without prior written permission of\n * Cynthia Brewer.\n */\n\n// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\nvar colorbrewer = { \n\"Spectral\":  {\"3\": [\"rgb(252,141,89)\", \"rgb(255,255,191)\", \"rgb(153,213,148)\"], \"4\": [\"rgb(215,25,28)\", \"rgb(253,174,97)\", \"rgb(171,221,164)\", \"rgb(43,131,186)\"], \"5\": [\"rgb(215,25,28)\", \"rgb(253,174,97)\", \"rgb(255,255,191)\", \"rgb(171,221,164)\", \"rgb(43,131,186)\"], \"6\": [\"rgb(213,62,79)\", \"rgb(252,141,89)\", \"rgb(254,224,139)\", \"rgb(230,245,152)\", \"rgb(153,213,148)\", \"rgb(50,136,189)\"], \"7\": [\"rgb(213,62,79)\", \"rgb(252,141,89)\", \"rgb(254,224,139)\", \"rgb(255,255,191)\", \"rgb(230,245,152)\", \"rgb(153,213,148)\", \"rgb(50,136,189)\"], \"8\": [\"rgb(213,62,79)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(230,245,152)\", \"rgb(171,221,164)\", \"rgb(102,194,165)\", \"rgb(50,136,189)\"], \"9\": [\"rgb(213,62,79)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(255,255,191)\", \"rgb(230,245,152)\", \"rgb(171,221,164)\", \"rgb(102,194,165)\", \"rgb(50,136,189)\"], \"10\": [\"rgb(158,1,66)\", \"rgb(213,62,79)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(230,245,152)\", \"rgb(171,221,164)\", \"rgb(102,194,165)\", \"rgb(50,136,189)\", \"rgb(94,79,162)\"], \"11\": [\"rgb(158,1,66)\", \"rgb(213,62,79)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(255,255,191)\", \"rgb(230,245,152)\", \"rgb(171,221,164)\", \"rgb(102,194,165)\", \"rgb(50,136,189)\", \"rgb(94,79,162)\"], \"type\": \"div\"} ,\n\"RdYlGn\":  {\"3\": [\"rgb(252,141,89)\", \"rgb(255,255,191)\", \"rgb(145,207,96)\"], \"4\": [\"rgb(215,25,28)\", \"rgb(253,174,97)\", \"rgb(166,217,106)\", \"rgb(26,150,65)\"], \"5\": [\"rgb(215,25,28)\", \"rgb(253,174,97)\", \"rgb(255,255,191)\", \"rgb(166,217,106)\", \"rgb(26,150,65)\"], \"6\": [\"rgb(215,48,39)\", \"rgb(252,141,89)\", \"rgb(254,224,139)\", \"rgb(217,239,139)\", \"rgb(145,207,96)\", \"rgb(26,152,80)\"], \"7\": [\"rgb(215,48,39)\", \"rgb(252,141,89)\", \"rgb(254,224,139)\", \"rgb(255,255,191)\", \"rgb(217,239,139)\", \"rgb(145,207,96)\", \"rgb(26,152,80)\"], \"8\": [\"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(217,239,139)\", \"rgb(166,217,106)\", \"rgb(102,189,99)\", \"rgb(26,152,80)\"], \"9\": [\"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(255,255,191)\", \"rgb(217,239,139)\", \"rgb(166,217,106)\", \"rgb(102,189,99)\", \"rgb(26,152,80)\"], \"10\": [\"rgb(165,0,38)\", \"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(217,239,139)\", \"rgb(166,217,106)\", \"rgb(102,189,99)\", \"rgb(26,152,80)\", \"rgb(0,104,55)\"], \"11\": [\"rgb(165,0,38)\", \"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,139)\", \"rgb(255,255,191)\", \"rgb(217,239,139)\", \"rgb(166,217,106)\", \"rgb(102,189,99)\", \"rgb(26,152,80)\", \"rgb(0,104,55)\"], \"type\": \"div\"} ,\n\"RdBu\":  {\"3\": [\"rgb(239,138,98)\", \"rgb(247,247,247)\", \"rgb(103,169,207)\"], \"4\": [\"rgb(202,0,32)\", \"rgb(244,165,130)\", \"rgb(146,197,222)\", \"rgb(5,113,176)\"], \"5\": [\"rgb(202,0,32)\", \"rgb(244,165,130)\", \"rgb(247,247,247)\", \"rgb(146,197,222)\", \"rgb(5,113,176)\"], \"6\": [\"rgb(178,24,43)\", \"rgb(239,138,98)\", \"rgb(253,219,199)\", \"rgb(209,229,240)\", \"rgb(103,169,207)\", \"rgb(33,102,172)\"], \"7\": [\"rgb(178,24,43)\", \"rgb(239,138,98)\", \"rgb(253,219,199)\", \"rgb(247,247,247)\", \"rgb(209,229,240)\", \"rgb(103,169,207)\", \"rgb(33,102,172)\"], \"8\": [\"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(209,229,240)\", \"rgb(146,197,222)\", \"rgb(67,147,195)\", \"rgb(33,102,172)\"], \"9\": [\"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(247,247,247)\", \"rgb(209,229,240)\", \"rgb(146,197,222)\", \"rgb(67,147,195)\", \"rgb(33,102,172)\"], \"10\": [\"rgb(103,0,31)\", \"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(209,229,240)\", \"rgb(146,197,222)\", \"rgb(67,147,195)\", \"rgb(33,102,172)\", \"rgb(5,48,97)\"], \"11\": [\"rgb(103,0,31)\", \"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(247,247,247)\", \"rgb(209,229,240)\", \"rgb(146,197,222)\", \"rgb(67,147,195)\", \"rgb(33,102,172)\", \"rgb(5,48,97)\"], \"type\": \"div\"} ,\n\"PiYG\":  {\"3\": [\"rgb(233,163,201)\", \"rgb(247,247,247)\", \"rgb(161,215,106)\"], \"4\": [\"rgb(208,28,139)\", \"rgb(241,182,218)\", \"rgb(184,225,134)\", \"rgb(77,172,38)\"], \"5\": [\"rgb(208,28,139)\", \"rgb(241,182,218)\", \"rgb(247,247,247)\", \"rgb(184,225,134)\", \"rgb(77,172,38)\"], \"6\": [\"rgb(197,27,125)\", \"rgb(233,163,201)\", \"rgb(253,224,239)\", \"rgb(230,245,208)\", \"rgb(161,215,106)\", \"rgb(77,146,33)\"], \"7\": [\"rgb(197,27,125)\", \"rgb(233,163,201)\", \"rgb(253,224,239)\", \"rgb(247,247,247)\", \"rgb(230,245,208)\", \"rgb(161,215,106)\", \"rgb(77,146,33)\"], \"8\": [\"rgb(197,27,125)\", \"rgb(222,119,174)\", \"rgb(241,182,218)\", \"rgb(253,224,239)\", \"rgb(230,245,208)\", \"rgb(184,225,134)\", \"rgb(127,188,65)\", \"rgb(77,146,33)\"], \"9\": [\"rgb(197,27,125)\", \"rgb(222,119,174)\", \"rgb(241,182,218)\", \"rgb(253,224,239)\", \"rgb(247,247,247)\", \"rgb(230,245,208)\", \"rgb(184,225,134)\", \"rgb(127,188,65)\", \"rgb(77,146,33)\"], \"10\": [\"rgb(142,1,82)\", \"rgb(197,27,125)\", \"rgb(222,119,174)\", \"rgb(241,182,218)\", \"rgb(253,224,239)\", \"rgb(230,245,208)\", \"rgb(184,225,134)\", \"rgb(127,188,65)\", \"rgb(77,146,33)\", \"rgb(39,100,25)\"], \"11\": [\"rgb(142,1,82)\", \"rgb(197,27,125)\", \"rgb(222,119,174)\", \"rgb(241,182,218)\", \"rgb(253,224,239)\", \"rgb(247,247,247)\", \"rgb(230,245,208)\", \"rgb(184,225,134)\", \"rgb(127,188,65)\", \"rgb(77,146,33)\", \"rgb(39,100,25)\"], \"type\": \"div\"} ,\n\"PRGn\":  {\"3\": [\"rgb(175,141,195)\", \"rgb(247,247,247)\", \"rgb(127,191,123)\"], \"4\": [\"rgb(123,50,148)\", \"rgb(194,165,207)\", \"rgb(166,219,160)\", \"rgb(0,136,55)\"], \"5\": [\"rgb(123,50,148)\", \"rgb(194,165,207)\", \"rgb(247,247,247)\", \"rgb(166,219,160)\", \"rgb(0,136,55)\"], \"6\": [\"rgb(118,42,131)\", \"rgb(175,141,195)\", \"rgb(231,212,232)\", \"rgb(217,240,211)\", \"rgb(127,191,123)\", \"rgb(27,120,55)\"], \"7\": [\"rgb(118,42,131)\", \"rgb(175,141,195)\", \"rgb(231,212,232)\", \"rgb(247,247,247)\", \"rgb(217,240,211)\", \"rgb(127,191,123)\", \"rgb(27,120,55)\"], \"8\": [\"rgb(118,42,131)\", \"rgb(153,112,171)\", \"rgb(194,165,207)\", \"rgb(231,212,232)\", \"rgb(217,240,211)\", \"rgb(166,219,160)\", \"rgb(90,174,97)\", \"rgb(27,120,55)\"], \"9\": [\"rgb(118,42,131)\", \"rgb(153,112,171)\", \"rgb(194,165,207)\", \"rgb(231,212,232)\", \"rgb(247,247,247)\", \"rgb(217,240,211)\", \"rgb(166,219,160)\", \"rgb(90,174,97)\", \"rgb(27,120,55)\"], \"10\": [\"rgb(64,0,75)\", \"rgb(118,42,131)\", \"rgb(153,112,171)\", \"rgb(194,165,207)\", \"rgb(231,212,232)\", \"rgb(217,240,211)\", \"rgb(166,219,160)\", \"rgb(90,174,97)\", \"rgb(27,120,55)\", \"rgb(0,68,27)\"], \"11\": [\"rgb(64,0,75)\", \"rgb(118,42,131)\", \"rgb(153,112,171)\", \"rgb(194,165,207)\", \"rgb(231,212,232)\", \"rgb(247,247,247)\", \"rgb(217,240,211)\", \"rgb(166,219,160)\", \"rgb(90,174,97)\", \"rgb(27,120,55)\", \"rgb(0,68,27)\"], \"type\": \"div\"} ,\n\"RdYlBu\":  {\"3\": [\"rgb(252,141,89)\", \"rgb(255,255,191)\", \"rgb(145,191,219)\"], \"4\": [\"rgb(215,25,28)\", \"rgb(253,174,97)\", \"rgb(171,217,233)\", \"rgb(44,123,182)\"], \"5\": [\"rgb(215,25,28)\", \"rgb(253,174,97)\", \"rgb(255,255,191)\", \"rgb(171,217,233)\", \"rgb(44,123,182)\"], \"6\": [\"rgb(215,48,39)\", \"rgb(252,141,89)\", \"rgb(254,224,144)\", \"rgb(224,243,248)\", \"rgb(145,191,219)\", \"rgb(69,117,180)\"], \"7\": [\"rgb(215,48,39)\", \"rgb(252,141,89)\", \"rgb(254,224,144)\", \"rgb(255,255,191)\", \"rgb(224,243,248)\", \"rgb(145,191,219)\", \"rgb(69,117,180)\"], \"8\": [\"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,144)\", \"rgb(224,243,248)\", \"rgb(171,217,233)\", \"rgb(116,173,209)\", \"rgb(69,117,180)\"], \"9\": [\"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,144)\", \"rgb(255,255,191)\", \"rgb(224,243,248)\", \"rgb(171,217,233)\", \"rgb(116,173,209)\", \"rgb(69,117,180)\"], \"10\": [\"rgb(165,0,38)\", \"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,144)\", \"rgb(224,243,248)\", \"rgb(171,217,233)\", \"rgb(116,173,209)\", \"rgb(69,117,180)\", \"rgb(49,54,149)\"], \"11\": [\"rgb(165,0,38)\", \"rgb(215,48,39)\", \"rgb(244,109,67)\", \"rgb(253,174,97)\", \"rgb(254,224,144)\", \"rgb(255,255,191)\", \"rgb(224,243,248)\", \"rgb(171,217,233)\", \"rgb(116,173,209)\", \"rgb(69,117,180)\", \"rgb(49,54,149)\"], \"type\": \"div\"} ,\n\"BrBG\":  {\"3\": [\"rgb(216,179,101)\", \"rgb(245,245,245)\", \"rgb(90,180,172)\"], \"4\": [\"rgb(166,97,26)\", \"rgb(223,194,125)\", \"rgb(128,205,193)\", \"rgb(1,133,113)\"], \"5\": [\"rgb(166,97,26)\", \"rgb(223,194,125)\", \"rgb(245,245,245)\", \"rgb(128,205,193)\", \"rgb(1,133,113)\"], \"6\": [\"rgb(140,81,10)\", \"rgb(216,179,101)\", \"rgb(246,232,195)\", \"rgb(199,234,229)\", \"rgb(90,180,172)\", \"rgb(1,102,94)\"], \"7\": [\"rgb(140,81,10)\", \"rgb(216,179,101)\", \"rgb(246,232,195)\", \"rgb(245,245,245)\", \"rgb(199,234,229)\", \"rgb(90,180,172)\", \"rgb(1,102,94)\"], \"8\": [\"rgb(140,81,10)\", \"rgb(191,129,45)\", \"rgb(223,194,125)\", \"rgb(246,232,195)\", \"rgb(199,234,229)\", \"rgb(128,205,193)\", \"rgb(53,151,143)\", \"rgb(1,102,94)\"], \"9\": [\"rgb(140,81,10)\", \"rgb(191,129,45)\", \"rgb(223,194,125)\", \"rgb(246,232,195)\", \"rgb(245,245,245)\", \"rgb(199,234,229)\", \"rgb(128,205,193)\", \"rgb(53,151,143)\", \"rgb(1,102,94)\"], \"10\": [\"rgb(84,48,5)\", \"rgb(140,81,10)\", \"rgb(191,129,45)\", \"rgb(223,194,125)\", \"rgb(246,232,195)\", \"rgb(199,234,229)\", \"rgb(128,205,193)\", \"rgb(53,151,143)\", \"rgb(1,102,94)\", \"rgb(0,60,48)\"], \"11\": [\"rgb(84,48,5)\", \"rgb(140,81,10)\", \"rgb(191,129,45)\", \"rgb(223,194,125)\", \"rgb(246,232,195)\", \"rgb(245,245,245)\", \"rgb(199,234,229)\", \"rgb(128,205,193)\", \"rgb(53,151,143)\", \"rgb(1,102,94)\", \"rgb(0,60,48)\"], \"type\": \"div\"} ,\n\"RdGy\":  {\"3\": [\"rgb(239,138,98)\", \"rgb(255,255,255)\", \"rgb(153,153,153)\"], \"4\": [\"rgb(202,0,32)\", \"rgb(244,165,130)\", \"rgb(186,186,186)\", \"rgb(64,64,64)\"], \"5\": [\"rgb(202,0,32)\", \"rgb(244,165,130)\", \"rgb(255,255,255)\", \"rgb(186,186,186)\", \"rgb(64,64,64)\"], \"6\": [\"rgb(178,24,43)\", \"rgb(239,138,98)\", \"rgb(253,219,199)\", \"rgb(224,224,224)\", \"rgb(153,153,153)\", \"rgb(77,77,77)\"], \"7\": [\"rgb(178,24,43)\", \"rgb(239,138,98)\", \"rgb(253,219,199)\", \"rgb(255,255,255)\", \"rgb(224,224,224)\", \"rgb(153,153,153)\", \"rgb(77,77,77)\"], \"8\": [\"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(224,224,224)\", \"rgb(186,186,186)\", \"rgb(135,135,135)\", \"rgb(77,77,77)\"], \"9\": [\"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(255,255,255)\", \"rgb(224,224,224)\", \"rgb(186,186,186)\", \"rgb(135,135,135)\", \"rgb(77,77,77)\"], \"10\": [\"rgb(103,0,31)\", \"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(224,224,224)\", \"rgb(186,186,186)\", \"rgb(135,135,135)\", \"rgb(77,77,77)\", \"rgb(26,26,26)\"], \"11\": [\"rgb(103,0,31)\", \"rgb(178,24,43)\", \"rgb(214,96,77)\", \"rgb(244,165,130)\", \"rgb(253,219,199)\", \"rgb(255,255,255)\", \"rgb(224,224,224)\", \"rgb(186,186,186)\", \"rgb(135,135,135)\", \"rgb(77,77,77)\", \"rgb(26,26,26)\"], \"type\": \"div\"} ,\n\"PuOr\":  {\"3\": [\"rgb(241,163,64)\", \"rgb(247,247,247)\", \"rgb(153,142,195)\"], \"4\": [\"rgb(230,97,1)\", \"rgb(253,184,99)\", \"rgb(178,171,210)\", \"rgb(94,60,153)\"], \"5\": [\"rgb(230,97,1)\", \"rgb(253,184,99)\", \"rgb(247,247,247)\", \"rgb(178,171,210)\", \"rgb(94,60,153)\"], \"6\": [\"rgb(179,88,6)\", \"rgb(241,163,64)\", \"rgb(254,224,182)\", \"rgb(216,218,235)\", \"rgb(153,142,195)\", \"rgb(84,39,136)\"], \"7\": [\"rgb(179,88,6)\", \"rgb(241,163,64)\", \"rgb(254,224,182)\", \"rgb(247,247,247)\", \"rgb(216,218,235)\", \"rgb(153,142,195)\", \"rgb(84,39,136)\"], \"8\": [\"rgb(179,88,6)\", \"rgb(224,130,20)\", \"rgb(253,184,99)\", \"rgb(254,224,182)\", \"rgb(216,218,235)\", \"rgb(178,171,210)\", \"rgb(128,115,172)\", \"rgb(84,39,136)\"], \"9\": [\"rgb(179,88,6)\", \"rgb(224,130,20)\", \"rgb(253,184,99)\", \"rgb(254,224,182)\", \"rgb(247,247,247)\", \"rgb(216,218,235)\", \"rgb(178,171,210)\", \"rgb(128,115,172)\", \"rgb(84,39,136)\"], \"10\": [\"rgb(127,59,8)\", \"rgb(179,88,6)\", \"rgb(224,130,20)\", \"rgb(253,184,99)\", \"rgb(254,224,182)\", \"rgb(216,218,235)\", \"rgb(178,171,210)\", \"rgb(128,115,172)\", \"rgb(84,39,136)\", \"rgb(45,0,75)\"], \"11\": [\"rgb(127,59,8)\", \"rgb(179,88,6)\", \"rgb(224,130,20)\", \"rgb(253,184,99)\", \"rgb(254,224,182)\", \"rgb(247,247,247)\", \"rgb(216,218,235)\", \"rgb(178,171,210)\", \"rgb(128,115,172)\", \"rgb(84,39,136)\", \"rgb(45,0,75)\"], \"type\": \"div\"} ,\n\n\"Set2\":  {\"3\": [\"rgb(102,194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\"], \"4\": [\"rgb(102,194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\", \"rgb(231,138,195)\"], \"5\": [\"rgb(102,194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\", \"rgb(231,138,195)\", \"rgb(166,216,84)\"], \"6\": [\"rgb(102,194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\", \"rgb(231,138,195)\", \"rgb(166,216,84)\", \"rgb(255,217,47)\"], \"7\": [\"rgb(102,194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\", \"rgb(231,138,195)\", \"rgb(166,216,84)\", \"rgb(255,217,47)\", \"rgb(229,196,148)\"], \"8\": [\"rgb(102,194,165)\", \"rgb(252,141,98)\", \"rgb(141,160,203)\", \"rgb(231,138,195)\", \"rgb(166,216,84)\", \"rgb(255,217,47)\", \"rgb(229,196,148)\", \"rgb(179,179,179)\"], \"type\": \"qual\"} ,\n\"Accent\":  {\"3\": [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\"], \"4\": [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\", \"rgb(255,255,153)\"], \"5\": [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\", \"rgb(255,255,153)\", \"rgb(56,108,176)\"], \"6\": [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\", \"rgb(255,255,153)\", \"rgb(56,108,176)\", \"rgb(240,2,127)\"], \"7\": [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\", \"rgb(255,255,153)\", \"rgb(56,108,176)\", \"rgb(240,2,127)\", \"rgb(191,91,23)\"], \"8\": [\"rgb(127,201,127)\", \"rgb(190,174,212)\", \"rgb(253,192,134)\", \"rgb(255,255,153)\", \"rgb(56,108,176)\", \"rgb(240,2,127)\", \"rgb(191,91,23)\", \"rgb(102,102,102)\"], \"type\": \"qual\"} ,\n\"Set1\":  {\"3\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\"], \"4\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(152,78,163)\"], \"5\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(152,78,163)\", \"rgb(255,127,0)\"], \"6\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(152,78,163)\", \"rgb(255,127,0)\", \"rgb(255,255,51)\"], \"7\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(152,78,163)\", \"rgb(255,127,0)\", \"rgb(255,255,51)\", \"rgb(166,86,40)\"], \"8\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(152,78,163)\", \"rgb(255,127,0)\", \"rgb(255,255,51)\", \"rgb(166,86,40)\", \"rgb(247,129,191)\"], \"9\": [\"rgb(228,26,28)\", \"rgb(55,126,184)\", \"rgb(77,175,74)\", \"rgb(152,78,163)\", \"rgb(255,127,0)\", \"rgb(255,255,51)\", \"rgb(166,86,40)\", \"rgb(247,129,191)\", \"rgb(153,153,153)\"], \"type\": \"qual\"} ,\n\"Set3\":  {\"3\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\"], \"4\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\"], \"5\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\"], \"6\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\"], \"7\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\"], \"8\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\", \"rgb(252,205,229)\"], \"9\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\", \"rgb(252,205,229)\", \"rgb(217,217,217)\"], \"10\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\", \"rgb(252,205,229)\", \"rgb(217,217,217)\", \"rgb(188,128,189)\"], \"11\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\", \"rgb(252,205,229)\", \"rgb(217,217,217)\", \"rgb(188,128,189)\", \"rgb(204,235,197)\"], \"12\": [\"rgb(141,211,199)\", \"rgb(255,255,179)\", \"rgb(190,186,218)\", \"rgb(251,128,114)\", \"rgb(128,177,211)\", \"rgb(253,180,98)\", \"rgb(179,222,105)\", \"rgb(252,205,229)\", \"rgb(217,217,217)\", \"rgb(188,128,189)\", \"rgb(204,235,197)\", \"rgb(255,237,111)\"], \"type\": \"qual\"} ,\n\"Dark2\":  {\"3\": [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\"], \"4\": [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\", \"rgb(231,41,138)\"], \"5\": [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\", \"rgb(231,41,138)\", \"rgb(102,166,30)\"], \"6\": [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\", \"rgb(231,41,138)\", \"rgb(102,166,30)\", \"rgb(230,171,2)\"], \"7\": [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\", \"rgb(231,41,138)\", \"rgb(102,166,30)\", \"rgb(230,171,2)\", \"rgb(166,118,29)\"], \"8\": [\"rgb(27,158,119)\", \"rgb(217,95,2)\", \"rgb(117,112,179)\", \"rgb(231,41,138)\", \"rgb(102,166,30)\", \"rgb(230,171,2)\", \"rgb(166,118,29)\", \"rgb(102,102,102)\"], \"type\": \"qual\"} ,\n\"Paired\":  {\"3\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\"], \"4\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\"], \"5\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\"], \"6\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\"], \"7\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\", \"rgb(253,191,111)\"], \"8\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\", \"rgb(253,191,111)\", \"rgb(255,127,0)\"], \"9\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\", \"rgb(253,191,111)\", \"rgb(255,127,0)\", \"rgb(202,178,214)\"], \"10\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\", \"rgb(253,191,111)\", \"rgb(255,127,0)\", \"rgb(202,178,214)\", \"rgb(106,61,154)\"], \"11\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\", \"rgb(253,191,111)\", \"rgb(255,127,0)\", \"rgb(202,178,214)\", \"rgb(106,61,154)\", \"rgb(255,255,153)\"], \"12\": [\"rgb(166,206,227)\", \"rgb(31,120,180)\", \"rgb(178,223,138)\", \"rgb(51,160,44)\", \"rgb(251,154,153)\", \"rgb(227,26,28)\", \"rgb(253,191,111)\", \"rgb(255,127,0)\", \"rgb(202,178,214)\", \"rgb(106,61,154)\", \"rgb(255,255,153)\", \"rgb(177,89,40)\"], \"type\": \"qual\"} ,\n\"Pastel2\":  {\"3\": [\"rgb(179,226,205)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\"], \"4\": [\"rgb(179,226,205)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\", \"rgb(244,202,228)\"], \"5\": [\"rgb(179,226,205)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\", \"rgb(244,202,228)\", \"rgb(230,245,201)\"], \"6\": [\"rgb(179,226,205)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\", \"rgb(244,202,228)\", \"rgb(230,245,201)\", \"rgb(255,242,174)\"], \"7\": [\"rgb(179,226,205)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\", \"rgb(244,202,228)\", \"rgb(230,245,201)\", \"rgb(255,242,174)\", \"rgb(241,226,204)\"], \"8\": [\"rgb(179,226,205)\", \"rgb(253,205,172)\", \"rgb(203,213,232)\", \"rgb(244,202,228)\", \"rgb(230,245,201)\", \"rgb(255,242,174)\", \"rgb(241,226,204)\", \"rgb(204,204,204)\"], \"type\": \"qual\"} ,\n\"Pastel1\":  {\"3\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\"], \"4\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\"], \"5\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\", \"rgb(254,217,166)\"], \"6\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\", \"rgb(254,217,166)\", \"rgb(255,255,204)\"], \"7\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\", \"rgb(254,217,166)\", \"rgb(255,255,204)\", \"rgb(229,216,189)\"], \"8\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\", \"rgb(254,217,166)\", \"rgb(255,255,204)\", \"rgb(229,216,189)\", \"rgb(253,218,236)\"], \"9\": [\"rgb(251,180,174)\", \"rgb(179,205,227)\", \"rgb(204,235,197)\", \"rgb(222,203,228)\", \"rgb(254,217,166)\", \"rgb(255,255,204)\", \"rgb(229,216,189)\", \"rgb(253,218,236)\", \"rgb(242,242,242)\"], \"type\": \"qual\"} ,\n\n\"OrRd\":  {\"3\": [\"rgb(254,232,200)\", \"rgb(253,187,132)\", \"rgb(227,74,51)\"], \"4\": [\"rgb(254,240,217)\", \"rgb(253,204,138)\", \"rgb(252,141,89)\", \"rgb(215,48,31)\"], \"5\": [\"rgb(254,240,217)\", \"rgb(253,204,138)\", \"rgb(252,141,89)\", \"rgb(227,74,51)\", \"rgb(179,0,0)\"], \"6\": [\"rgb(254,240,217)\", \"rgb(253,212,158)\", \"rgb(253,187,132)\", \"rgb(252,141,89)\", \"rgb(227,74,51)\", \"rgb(179,0,0)\"], \"7\": [\"rgb(254,240,217)\", \"rgb(253,212,158)\", \"rgb(253,187,132)\", \"rgb(252,141,89)\", \"rgb(239,101,72)\", \"rgb(215,48,31)\", \"rgb(153,0,0)\"], \"8\": [\"rgb(255,247,236)\", \"rgb(254,232,200)\", \"rgb(253,212,158)\", \"rgb(253,187,132)\", \"rgb(252,141,89)\", \"rgb(239,101,72)\", \"rgb(215,48,31)\", \"rgb(153,0,0)\"], \"9\": [\"rgb(255,247,236)\", \"rgb(254,232,200)\", \"rgb(253,212,158)\", \"rgb(253,187,132)\", \"rgb(252,141,89)\", \"rgb(239,101,72)\", \"rgb(215,48,31)\", \"rgb(179,0,0)\", \"rgb(127,0,0)\"], \"type\": \"seq\"} ,\n\"PuBu\":  {\"3\": [\"rgb(236,231,242)\", \"rgb(166,189,219)\", \"rgb(43,140,190)\"], \"4\": [\"rgb(241,238,246)\", \"rgb(189,201,225)\", \"rgb(116,169,207)\", \"rgb(5,112,176)\"], \"5\": [\"rgb(241,238,246)\", \"rgb(189,201,225)\", \"rgb(116,169,207)\", \"rgb(43,140,190)\", \"rgb(4,90,141)\"], \"6\": [\"rgb(241,238,246)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(116,169,207)\", \"rgb(43,140,190)\", \"rgb(4,90,141)\"], \"7\": [\"rgb(241,238,246)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(116,169,207)\", \"rgb(54,144,192)\", \"rgb(5,112,176)\", \"rgb(3,78,123)\"], \"8\": [\"rgb(255,247,251)\", \"rgb(236,231,242)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(116,169,207)\", \"rgb(54,144,192)\", \"rgb(5,112,176)\", \"rgb(3,78,123)\"], \"9\": [\"rgb(255,247,251)\", \"rgb(236,231,242)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(116,169,207)\", \"rgb(54,144,192)\", \"rgb(5,112,176)\", \"rgb(4,90,141)\", \"rgb(2,56,88)\"], \"type\": \"seq\"} ,\n\"BuPu\":  {\"3\": [\"rgb(224,236,244)\", \"rgb(158,188,218)\", \"rgb(136,86,167)\"], \"4\": [\"rgb(237,248,251)\", \"rgb(179,205,227)\", \"rgb(140,150,198)\", \"rgb(136,65,157)\"], \"5\": [\"rgb(237,248,251)\", \"rgb(179,205,227)\", \"rgb(140,150,198)\", \"rgb(136,86,167)\", \"rgb(129,15,124)\"], \"6\": [\"rgb(237,248,251)\", \"rgb(191,211,230)\", \"rgb(158,188,218)\", \"rgb(140,150,198)\", \"rgb(136,86,167)\", \"rgb(129,15,124)\"], \"7\": [\"rgb(237,248,251)\", \"rgb(191,211,230)\", \"rgb(158,188,218)\", \"rgb(140,150,198)\", \"rgb(140,107,177)\", \"rgb(136,65,157)\", \"rgb(110,1,107)\"], \"8\": [\"rgb(247,252,253)\", \"rgb(224,236,244)\", \"rgb(191,211,230)\", \"rgb(158,188,218)\", \"rgb(140,150,198)\", \"rgb(140,107,177)\", \"rgb(136,65,157)\", \"rgb(110,1,107)\"], \"9\": [\"rgb(247,252,253)\", \"rgb(224,236,244)\", \"rgb(191,211,230)\", \"rgb(158,188,218)\", \"rgb(140,150,198)\", \"rgb(140,107,177)\", \"rgb(136,65,157)\", \"rgb(129,15,124)\", \"rgb(77,0,75)\"], \"type\": \"seq\"} ,\n\"Oranges\":  {\"3\": [\"rgb(254,230,206)\", \"rgb(253,174,107)\", \"rgb(230,85,13)\"], \"4\": [\"rgb(254,237,222)\", \"rgb(253,190,133)\", \"rgb(253,141,60)\", \"rgb(217,71,1)\"], \"5\": [\"rgb(254,237,222)\", \"rgb(253,190,133)\", \"rgb(253,141,60)\", \"rgb(230,85,13)\", \"rgb(166,54,3)\"], \"6\": [\"rgb(254,237,222)\", \"rgb(253,208,162)\", \"rgb(253,174,107)\", \"rgb(253,141,60)\", \"rgb(230,85,13)\", \"rgb(166,54,3)\"], \"7\": [\"rgb(254,237,222)\", \"rgb(253,208,162)\", \"rgb(253,174,107)\", \"rgb(253,141,60)\", \"rgb(241,105,19)\", \"rgb(217,72,1)\", \"rgb(140,45,4)\"], \"8\": [\"rgb(255,245,235)\", \"rgb(254,230,206)\", \"rgb(253,208,162)\", \"rgb(253,174,107)\", \"rgb(253,141,60)\", \"rgb(241,105,19)\", \"rgb(217,72,1)\", \"rgb(140,45,4)\"], \"9\": [\"rgb(255,245,235)\", \"rgb(254,230,206)\", \"rgb(253,208,162)\", \"rgb(253,174,107)\", \"rgb(253,141,60)\", \"rgb(241,105,19)\", \"rgb(217,72,1)\", \"rgb(166,54,3)\", \"rgb(127,39,4)\"], \"type\": \"seq\"} ,\n\"BuGn\":  {\"3\": [\"rgb(229,245,249)\", \"rgb(153,216,201)\", \"rgb(44,162,95)\"], \"4\": [\"rgb(237,248,251)\", \"rgb(178,226,226)\", \"rgb(102,194,164)\", \"rgb(35,139,69)\"], \"5\": [\"rgb(237,248,251)\", \"rgb(178,226,226)\", \"rgb(102,194,164)\", \"rgb(44,162,95)\", \"rgb(0,109,44)\"], \"6\": [\"rgb(237,248,251)\", \"rgb(204,236,230)\", \"rgb(153,216,201)\", \"rgb(102,194,164)\", \"rgb(44,162,95)\", \"rgb(0,109,44)\"], \"7\": [\"rgb(237,248,251)\", \"rgb(204,236,230)\", \"rgb(153,216,201)\", \"rgb(102,194,164)\", \"rgb(65,174,118)\", \"rgb(35,139,69)\", \"rgb(0,88,36)\"], \"8\": [\"rgb(247,252,253)\", \"rgb(229,245,249)\", \"rgb(204,236,230)\", \"rgb(153,216,201)\", \"rgb(102,194,164)\", \"rgb(65,174,118)\", \"rgb(35,139,69)\", \"rgb(0,88,36)\"], \"9\": [\"rgb(247,252,253)\", \"rgb(229,245,249)\", \"rgb(204,236,230)\", \"rgb(153,216,201)\", \"rgb(102,194,164)\", \"rgb(65,174,118)\", \"rgb(35,139,69)\", \"rgb(0,109,44)\", \"rgb(0,68,27)\"], \"type\": \"seq\"} ,\n\"YlOrBr\":  {\"3\": [\"rgb(255,247,188)\", \"rgb(254,196,79)\", \"rgb(217,95,14)\"], \"4\": [\"rgb(255,255,212)\", \"rgb(254,217,142)\", \"rgb(254,153,41)\", \"rgb(204,76,2)\"], \"5\": [\"rgb(255,255,212)\", \"rgb(254,217,142)\", \"rgb(254,153,41)\", \"rgb(217,95,14)\", \"rgb(153,52,4)\"], \"6\": [\"rgb(255,255,212)\", \"rgb(254,227,145)\", \"rgb(254,196,79)\", \"rgb(254,153,41)\", \"rgb(217,95,14)\", \"rgb(153,52,4)\"], \"7\": [\"rgb(255,255,212)\", \"rgb(254,227,145)\", \"rgb(254,196,79)\", \"rgb(254,153,41)\", \"rgb(236,112,20)\", \"rgb(204,76,2)\", \"rgb(140,45,4)\"], \"8\": [\"rgb(255,255,229)\", \"rgb(255,247,188)\", \"rgb(254,227,145)\", \"rgb(254,196,79)\", \"rgb(254,153,41)\", \"rgb(236,112,20)\", \"rgb(204,76,2)\", \"rgb(140,45,4)\"], \"9\": [\"rgb(255,255,229)\", \"rgb(255,247,188)\", \"rgb(254,227,145)\", \"rgb(254,196,79)\", \"rgb(254,153,41)\", \"rgb(236,112,20)\", \"rgb(204,76,2)\", \"rgb(153,52,4)\", \"rgb(102,37,6)\"], \"type\": \"seq\"} ,\n\"YlGn\":  {\"3\": [\"rgb(247,252,185)\", \"rgb(173,221,142)\", \"rgb(49,163,84)\"], \"4\": [\"rgb(255,255,204)\", \"rgb(194,230,153)\", \"rgb(120,198,121)\", \"rgb(35,132,67)\"], \"5\": [\"rgb(255,255,204)\", \"rgb(194,230,153)\", \"rgb(120,198,121)\", \"rgb(49,163,84)\", \"rgb(0,104,55)\"], \"6\": [\"rgb(255,255,204)\", \"rgb(217,240,163)\", \"rgb(173,221,142)\", \"rgb(120,198,121)\", \"rgb(49,163,84)\", \"rgb(0,104,55)\"], \"7\": [\"rgb(255,255,204)\", \"rgb(217,240,163)\", \"rgb(173,221,142)\", \"rgb(120,198,121)\", \"rgb(65,171,93)\", \"rgb(35,132,67)\", \"rgb(0,90,50)\"], \"8\": [\"rgb(255,255,229)\", \"rgb(247,252,185)\", \"rgb(217,240,163)\", \"rgb(173,221,142)\", \"rgb(120,198,121)\", \"rgb(65,171,93)\", \"rgb(35,132,67)\", \"rgb(0,90,50)\"], \"9\": [\"rgb(255,255,229)\", \"rgb(247,252,185)\", \"rgb(217,240,163)\", \"rgb(173,221,142)\", \"rgb(120,198,121)\", \"rgb(65,171,93)\", \"rgb(35,132,67)\", \"rgb(0,104,55)\", \"rgb(0,69,41)\"], \"type\": \"seq\"} ,\n\"Reds\":  {\"3\": [\"rgb(254,224,210)\", \"rgb(252,146,114)\", \"rgb(222,45,38)\"], \"4\": [\"rgb(254,229,217)\", \"rgb(252,174,145)\", \"rgb(251,106,74)\", \"rgb(203,24,29)\"], \"5\": [\"rgb(254,229,217)\", \"rgb(252,174,145)\", \"rgb(251,106,74)\", \"rgb(222,45,38)\", \"rgb(165,15,21)\"], \"6\": [\"rgb(254,229,217)\", \"rgb(252,187,161)\", \"rgb(252,146,114)\", \"rgb(251,106,74)\", \"rgb(222,45,38)\", \"rgb(165,15,21)\"], \"7\": [\"rgb(254,229,217)\", \"rgb(252,187,161)\", \"rgb(252,146,114)\", \"rgb(251,106,74)\", \"rgb(239,59,44)\", \"rgb(203,24,29)\", \"rgb(153,0,13)\"], \"8\": [\"rgb(255,245,240)\", \"rgb(254,224,210)\", \"rgb(252,187,161)\", \"rgb(252,146,114)\", \"rgb(251,106,74)\", \"rgb(239,59,44)\", \"rgb(203,24,29)\", \"rgb(153,0,13)\"], \"9\": [\"rgb(255,245,240)\", \"rgb(254,224,210)\", \"rgb(252,187,161)\", \"rgb(252,146,114)\", \"rgb(251,106,74)\", \"rgb(239,59,44)\", \"rgb(203,24,29)\", \"rgb(165,15,21)\", \"rgb(103,0,13)\"], \"type\": \"seq\"} ,\n\"RdPu\":  {\"3\": [\"rgb(253,224,221)\", \"rgb(250,159,181)\", \"rgb(197,27,138)\"], \"4\": [\"rgb(254,235,226)\", \"rgb(251,180,185)\", \"rgb(247,104,161)\", \"rgb(174,1,126)\"], \"5\": [\"rgb(254,235,226)\", \"rgb(251,180,185)\", \"rgb(247,104,161)\", \"rgb(197,27,138)\", \"rgb(122,1,119)\"], \"6\": [\"rgb(254,235,226)\", \"rgb(252,197,192)\", \"rgb(250,159,181)\", \"rgb(247,104,161)\", \"rgb(197,27,138)\", \"rgb(122,1,119)\"], \"7\": [\"rgb(254,235,226)\", \"rgb(252,197,192)\", \"rgb(250,159,181)\", \"rgb(247,104,161)\", \"rgb(221,52,151)\", \"rgb(174,1,126)\", \"rgb(122,1,119)\"], \"8\": [\"rgb(255,247,243)\", \"rgb(253,224,221)\", \"rgb(252,197,192)\", \"rgb(250,159,181)\", \"rgb(247,104,161)\", \"rgb(221,52,151)\", \"rgb(174,1,126)\", \"rgb(122,1,119)\"], \"9\": [\"rgb(255,247,243)\", \"rgb(253,224,221)\", \"rgb(252,197,192)\", \"rgb(250,159,181)\", \"rgb(247,104,161)\", \"rgb(221,52,151)\", \"rgb(174,1,126)\", \"rgb(122,1,119)\", \"rgb(73,0,106)\"], \"type\": \"seq\"} ,\n\"Greens\":  {\"3\": [\"rgb(229,245,224)\", \"rgb(161,217,155)\", \"rgb(49,163,84)\"], \"4\": [\"rgb(237,248,233)\", \"rgb(186,228,179)\", \"rgb(116,196,118)\", \"rgb(35,139,69)\"], \"5\": [\"rgb(237,248,233)\", \"rgb(186,228,179)\", \"rgb(116,196,118)\", \"rgb(49,163,84)\", \"rgb(0,109,44)\"], \"6\": [\"rgb(237,248,233)\", \"rgb(199,233,192)\", \"rgb(161,217,155)\", \"rgb(116,196,118)\", \"rgb(49,163,84)\", \"rgb(0,109,44)\"], \"7\": [\"rgb(237,248,233)\", \"rgb(199,233,192)\", \"rgb(161,217,155)\", \"rgb(116,196,118)\", \"rgb(65,171,93)\", \"rgb(35,139,69)\", \"rgb(0,90,50)\"], \"8\": [\"rgb(247,252,245)\", \"rgb(229,245,224)\", \"rgb(199,233,192)\", \"rgb(161,217,155)\", \"rgb(116,196,118)\", \"rgb(65,171,93)\", \"rgb(35,139,69)\", \"rgb(0,90,50)\"], \"9\": [\"rgb(247,252,245)\", \"rgb(229,245,224)\", \"rgb(199,233,192)\", \"rgb(161,217,155)\", \"rgb(116,196,118)\", \"rgb(65,171,93)\", \"rgb(35,139,69)\", \"rgb(0,109,44)\", \"rgb(0,68,27)\"], \"type\": \"seq\"} ,\n\"YlGnBu\":  {\"3\": [\"rgb(237,248,177)\", \"rgb(127,205,187)\", \"rgb(44,127,184)\"], \"4\": [\"rgb(255,255,204)\", \"rgb(161,218,180)\", \"rgb(65,182,196)\", \"rgb(34,94,168)\"], \"5\": [\"rgb(255,255,204)\", \"rgb(161,218,180)\", \"rgb(65,182,196)\", \"rgb(44,127,184)\", \"rgb(37,52,148)\"], \"6\": [\"rgb(255,255,204)\", \"rgb(199,233,180)\", \"rgb(127,205,187)\", \"rgb(65,182,196)\", \"rgb(44,127,184)\", \"rgb(37,52,148)\"], \"7\": [\"rgb(255,255,204)\", \"rgb(199,233,180)\", \"rgb(127,205,187)\", \"rgb(65,182,196)\", \"rgb(29,145,192)\", \"rgb(34,94,168)\", \"rgb(12,44,132)\"], \"8\": [\"rgb(255,255,217)\", \"rgb(237,248,177)\", \"rgb(199,233,180)\", \"rgb(127,205,187)\", \"rgb(65,182,196)\", \"rgb(29,145,192)\", \"rgb(34,94,168)\", \"rgb(12,44,132)\"], \"9\": [\"rgb(255,255,217)\", \"rgb(237,248,177)\", \"rgb(199,233,180)\", \"rgb(127,205,187)\", \"rgb(65,182,196)\", \"rgb(29,145,192)\", \"rgb(34,94,168)\", \"rgb(37,52,148)\", \"rgb(8,29,88)\"], \"type\": \"seq\"} ,\n\"Purples\":  {\"3\": [\"rgb(239,237,245)\", \"rgb(188,189,220)\", \"rgb(117,107,177)\"], \"4\": [\"rgb(242,240,247)\", \"rgb(203,201,226)\", \"rgb(158,154,200)\", \"rgb(106,81,163)\"], \"5\": [\"rgb(242,240,247)\", \"rgb(203,201,226)\", \"rgb(158,154,200)\", \"rgb(117,107,177)\", \"rgb(84,39,143)\"], \"6\": [\"rgb(242,240,247)\", \"rgb(218,218,235)\", \"rgb(188,189,220)\", \"rgb(158,154,200)\", \"rgb(117,107,177)\", \"rgb(84,39,143)\"], \"7\": [\"rgb(242,240,247)\", \"rgb(218,218,235)\", \"rgb(188,189,220)\", \"rgb(158,154,200)\", \"rgb(128,125,186)\", \"rgb(106,81,163)\", \"rgb(74,20,134)\"], \"8\": [\"rgb(252,251,253)\", \"rgb(239,237,245)\", \"rgb(218,218,235)\", \"rgb(188,189,220)\", \"rgb(158,154,200)\", \"rgb(128,125,186)\", \"rgb(106,81,163)\", \"rgb(74,20,134)\"], \"9\": [\"rgb(252,251,253)\", \"rgb(239,237,245)\", \"rgb(218,218,235)\", \"rgb(188,189,220)\", \"rgb(158,154,200)\", \"rgb(128,125,186)\", \"rgb(106,81,163)\", \"rgb(84,39,143)\", \"rgb(63,0,125)\"], \"type\": \"seq\"} ,\n\"GnBu\":  {\"3\": [\"rgb(224,243,219)\", \"rgb(168,221,181)\", \"rgb(67,162,202)\"], \"4\": [\"rgb(240,249,232)\", \"rgb(186,228,188)\", \"rgb(123,204,196)\", \"rgb(43,140,190)\"], \"5\": [\"rgb(240,249,232)\", \"rgb(186,228,188)\", \"rgb(123,204,196)\", \"rgb(67,162,202)\", \"rgb(8,104,172)\"], \"6\": [\"rgb(240,249,232)\", \"rgb(204,235,197)\", \"rgb(168,221,181)\", \"rgb(123,204,196)\", \"rgb(67,162,202)\", \"rgb(8,104,172)\"], \"7\": [\"rgb(240,249,232)\", \"rgb(204,235,197)\", \"rgb(168,221,181)\", \"rgb(123,204,196)\", \"rgb(78,179,211)\", \"rgb(43,140,190)\", \"rgb(8,88,158)\"], \"8\": [\"rgb(247,252,240)\", \"rgb(224,243,219)\", \"rgb(204,235,197)\", \"rgb(168,221,181)\", \"rgb(123,204,196)\", \"rgb(78,179,211)\", \"rgb(43,140,190)\", \"rgb(8,88,158)\"], \"9\": [\"rgb(247,252,240)\", \"rgb(224,243,219)\", \"rgb(204,235,197)\", \"rgb(168,221,181)\", \"rgb(123,204,196)\", \"rgb(78,179,211)\", \"rgb(43,140,190)\", \"rgb(8,104,172)\", \"rgb(8,64,129)\"], \"type\": \"seq\"} ,\n\"Greys\":  {\"3\": [\"rgb(240,240,240)\", \"rgb(189,189,189)\", \"rgb(99,99,99)\"], \"4\": [\"rgb(247,247,247)\", \"rgb(204,204,204)\", \"rgb(150,150,150)\", \"rgb(82,82,82)\"], \"5\": [\"rgb(247,247,247)\", \"rgb(204,204,204)\", \"rgb(150,150,150)\", \"rgb(99,99,99)\", \"rgb(37,37,37)\"], \"6\": [\"rgb(247,247,247)\", \"rgb(217,217,217)\", \"rgb(189,189,189)\", \"rgb(150,150,150)\", \"rgb(99,99,99)\", \"rgb(37,37,37)\"], \"7\": [\"rgb(247,247,247)\", \"rgb(217,217,217)\", \"rgb(189,189,189)\", \"rgb(150,150,150)\", \"rgb(115,115,115)\", \"rgb(82,82,82)\", \"rgb(37,37,37)\"], \"8\": [\"rgb(255,255,255)\", \"rgb(240,240,240)\", \"rgb(217,217,217)\", \"rgb(189,189,189)\", \"rgb(150,150,150)\", \"rgb(115,115,115)\", \"rgb(82,82,82)\", \"rgb(37,37,37)\"], \"9\": [\"rgb(255,255,255)\", \"rgb(240,240,240)\", \"rgb(217,217,217)\", \"rgb(189,189,189)\", \"rgb(150,150,150)\", \"rgb(115,115,115)\", \"rgb(82,82,82)\", \"rgb(37,37,37)\", \"rgb(0,0,0)\"], \"type\": \"seq\"} ,\n\"YlOrRd\":  {\"3\": [\"rgb(255,237,160)\", \"rgb(254,178,76)\", \"rgb(240,59,32)\"], \"4\": [\"rgb(255,255,178)\", \"rgb(254,204,92)\", \"rgb(253,141,60)\", \"rgb(227,26,28)\"], \"5\": [\"rgb(255,255,178)\", \"rgb(254,204,92)\", \"rgb(253,141,60)\", \"rgb(240,59,32)\", \"rgb(189,0,38)\"], \"6\": [\"rgb(255,255,178)\", \"rgb(254,217,118)\", \"rgb(254,178,76)\", \"rgb(253,141,60)\", \"rgb(240,59,32)\", \"rgb(189,0,38)\"], \"7\": [\"rgb(255,255,178)\", \"rgb(254,217,118)\", \"rgb(254,178,76)\", \"rgb(253,141,60)\", \"rgb(252,78,42)\", \"rgb(227,26,28)\", \"rgb(177,0,38)\"], \"8\": [\"rgb(255,255,204)\", \"rgb(255,237,160)\", \"rgb(254,217,118)\", \"rgb(254,178,76)\", \"rgb(253,141,60)\", \"rgb(252,78,42)\", \"rgb(227,26,28)\", \"rgb(177,0,38)\"], \"type\": \"seq\"} ,\n\"PuRd\":  {\"3\": [\"rgb(231,225,239)\", \"rgb(201,148,199)\", \"rgb(221,28,119)\"], \"4\": [\"rgb(241,238,246)\", \"rgb(215,181,216)\", \"rgb(223,101,176)\", \"rgb(206,18,86)\"], \"5\": [\"rgb(241,238,246)\", \"rgb(215,181,216)\", \"rgb(223,101,176)\", \"rgb(221,28,119)\", \"rgb(152,0,67)\"], \"6\": [\"rgb(241,238,246)\", \"rgb(212,185,218)\", \"rgb(201,148,199)\", \"rgb(223,101,176)\", \"rgb(221,28,119)\", \"rgb(152,0,67)\"], \"7\": [\"rgb(241,238,246)\", \"rgb(212,185,218)\", \"rgb(201,148,199)\", \"rgb(223,101,176)\", \"rgb(231,41,138)\", \"rgb(206,18,86)\", \"rgb(145,0,63)\"], \"8\": [\"rgb(247,244,249)\", \"rgb(231,225,239)\", \"rgb(212,185,218)\", \"rgb(201,148,199)\", \"rgb(223,101,176)\", \"rgb(231,41,138)\", \"rgb(206,18,86)\", \"rgb(145,0,63)\"], \"9\": [\"rgb(247,244,249)\", \"rgb(231,225,239)\", \"rgb(212,185,218)\", \"rgb(201,148,199)\", \"rgb(223,101,176)\", \"rgb(231,41,138)\", \"rgb(206,18,86)\", \"rgb(152,0,67)\", \"rgb(103,0,31)\"], \"type\": \"seq\"} ,\n\"Blues\":  {\"3\": [\"rgb(222,235,247)\", \"rgb(158,202,225)\", \"rgb(49,130,189)\"], \"4\": [\"rgb(239,243,255)\", \"rgb(189,215,231)\", \"rgb(107,174,214)\", \"rgb(33,113,181)\"], \"5\": [\"rgb(239,243,255)\", \"rgb(189,215,231)\", \"rgb(107,174,214)\", \"rgb(49,130,189)\", \"rgb(8,81,156)\"], \"6\": [\"rgb(239,243,255)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(49,130,189)\", \"rgb(8,81,156)\"], \"7\": [\"rgb(239,243,255)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\", \"rgb(33,113,181)\", \"rgb(8,69,148)\"], \"8\": [\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\", \"rgb(33,113,181)\", \"rgb(8,69,148)\"], \"9\": [\"rgb(247,251,255)\", \"rgb(222,235,247)\", \"rgb(198,219,239)\", \"rgb(158,202,225)\", \"rgb(107,174,214)\", \"rgb(66,146,198)\", \"rgb(33,113,181)\", \"rgb(8,81,156)\", \"rgb(8,48,107)\"], \"type\": \"seq\"} ,\n\"PuBuGn\":  {\"3\": [\"rgb(236,226,240)\", \"rgb(166,189,219)\", \"rgb(28,144,153)\"], \"4\": [\"rgb(246,239,247)\", \"rgb(189,201,225)\", \"rgb(103,169,207)\", \"rgb(2,129,138)\"], \"5\": [\"rgb(246,239,247)\", \"rgb(189,201,225)\", \"rgb(103,169,207)\", \"rgb(28,144,153)\", \"rgb(1,108,89)\"], \"6\": [\"rgb(246,239,247)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(103,169,207)\", \"rgb(28,144,153)\", \"rgb(1,108,89)\"], \"7\": [\"rgb(246,239,247)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(103,169,207)\", \"rgb(54,144,192)\", \"rgb(2,129,138)\", \"rgb(1,100,80)\"], \"8\": [\"rgb(255,247,251)\", \"rgb(236,226,240)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(103,169,207)\", \"rgb(54,144,192)\", \"rgb(2,129,138)\", \"rgb(1,100,80)\"], \"9\": [\"rgb(255,247,251)\", \"rgb(236,226,240)\", \"rgb(208,209,230)\", \"rgb(166,189,219)\", \"rgb(103,169,207)\", \"rgb(54,144,192)\", \"rgb(2,129,138)\", \"rgb(1,108,89)\", \"rgb(1,70,54)\"], \"type\": \"seq\"} ,\n\n\"viridis\": {\"256\": [\"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"], \"type\": \"seq\"},\n\"plasma\": {\"256\": [\"#0d0887\",\"#100788\",\"#130789\",\"#16078a\",\"#19068c\",\"#1b068d\",\"#1d068e\",\"#20068f\",\"#220690\",\"#240691\",\"#260591\",\"#280592\",\"#2a0593\",\"#2c0594\",\"#2e0595\",\"#2f0596\",\"#310597\",\"#330597\",\"#350498\",\"#370499\",\"#38049a\",\"#3a049a\",\"#3c049b\",\"#3e049c\",\"#3f049c\",\"#41049d\",\"#43039e\",\"#44039e\",\"#46039f\",\"#48039f\",\"#4903a0\",\"#4b03a1\",\"#4c02a1\",\"#4e02a2\",\"#5002a2\",\"#5102a3\",\"#5302a3\",\"#5502a4\",\"#5601a4\",\"#5801a4\",\"#5901a5\",\"#5b01a5\",\"#5c01a6\",\"#5e01a6\",\"#6001a6\",\"#6100a7\",\"#6300a7\",\"#6400a7\",\"#6600a7\",\"#6700a8\",\"#6900a8\",\"#6a00a8\",\"#6c00a8\",\"#6e00a8\",\"#6f00a8\",\"#7100a8\",\"#7201a8\",\"#7401a8\",\"#7501a8\",\"#7701a8\",\"#7801a8\",\"#7a02a8\",\"#7b02a8\",\"#7d03a8\",\"#7e03a8\",\"#8004a8\",\"#8104a7\",\"#8305a7\",\"#8405a7\",\"#8606a6\",\"#8707a6\",\"#8808a6\",\"#8a09a5\",\"#8b0aa5\",\"#8d0ba5\",\"#8e0ca4\",\"#8f0da4\",\"#910ea3\",\"#920fa3\",\"#9410a2\",\"#9511a1\",\"#9613a1\",\"#9814a0\",\"#99159f\",\"#9a169f\",\"#9c179e\",\"#9d189d\",\"#9e199d\",\"#a01a9c\",\"#a11b9b\",\"#a21d9a\",\"#a31e9a\",\"#a51f99\",\"#a62098\",\"#a72197\",\"#a82296\",\"#aa2395\",\"#ab2494\",\"#ac2694\",\"#ad2793\",\"#ae2892\",\"#b02991\",\"#b12a90\",\"#b22b8f\",\"#b32c8e\",\"#b42e8d\",\"#b52f8c\",\"#b6308b\",\"#b7318a\",\"#b83289\",\"#ba3388\",\"#bb3488\",\"#bc3587\",\"#bd3786\",\"#be3885\",\"#bf3984\",\"#c03a83\",\"#c13b82\",\"#c23c81\",\"#c33d80\",\"#c43e7f\",\"#c5407e\",\"#c6417d\",\"#c7427c\",\"#c8437b\",\"#c9447a\",\"#ca457a\",\"#cb4679\",\"#cc4778\",\"#cc4977\",\"#cd4a76\",\"#ce4b75\",\"#cf4c74\",\"#d04d73\",\"#d14e72\",\"#d24f71\",\"#d35171\",\"#d45270\",\"#d5536f\",\"#d5546e\",\"#d6556d\",\"#d7566c\",\"#d8576b\",\"#d9586a\",\"#da5a6a\",\"#da5b69\",\"#db5c68\",\"#dc5d67\",\"#dd5e66\",\"#de5f65\",\"#de6164\",\"#df6263\",\"#e06363\",\"#e16462\",\"#e26561\",\"#e26660\",\"#e3685f\",\"#e4695e\",\"#e56a5d\",\"#e56b5d\",\"#e66c5c\",\"#e76e5b\",\"#e76f5a\",\"#e87059\",\"#e97158\",\"#e97257\",\"#ea7457\",\"#eb7556\",\"#eb7655\",\"#ec7754\",\"#ed7953\",\"#ed7a52\",\"#ee7b51\",\"#ef7c51\",\"#ef7e50\",\"#f07f4f\",\"#f0804e\",\"#f1814d\",\"#f1834c\",\"#f2844b\",\"#f3854b\",\"#f3874a\",\"#f48849\",\"#f48948\",\"#f58b47\",\"#f58c46\",\"#f68d45\",\"#f68f44\",\"#f79044\",\"#f79143\",\"#f79342\",\"#f89441\",\"#f89540\",\"#f9973f\",\"#f9983e\",\"#f99a3e\",\"#fa9b3d\",\"#fa9c3c\",\"#fa9e3b\",\"#fb9f3a\",\"#fba139\",\"#fba238\",\"#fca338\",\"#fca537\",\"#fca636\",\"#fca835\",\"#fca934\",\"#fdab33\",\"#fdac33\",\"#fdae32\",\"#fdaf31\",\"#fdb130\",\"#fdb22f\",\"#fdb42f\",\"#fdb52e\",\"#feb72d\",\"#feb82c\",\"#feba2c\",\"#febb2b\",\"#febd2a\",\"#febe2a\",\"#fec029\",\"#fdc229\",\"#fdc328\",\"#fdc527\",\"#fdc627\",\"#fdc827\",\"#fdca26\",\"#fdcb26\",\"#fccd25\",\"#fcce25\",\"#fcd025\",\"#fcd225\",\"#fbd324\",\"#fbd524\",\"#fbd724\",\"#fad824\",\"#fada24\",\"#f9dc24\",\"#f9dd25\",\"#f8df25\",\"#f8e125\",\"#f7e225\",\"#f7e425\",\"#f6e626\",\"#f6e826\",\"#f5e926\",\"#f5eb27\",\"#f4ed27\",\"#f3ee27\",\"#f3f027\",\"#f2f227\",\"#f1f426\",\"#f1f525\",\"#f0f724\",\"#f0f921\"], \"type\": \"seq\"},\n\"inferno\": {\"256\": [\"#000004\",\"#010005\",\"#010106\",\"#010108\",\"#02010a\",\"#02020c\",\"#02020e\",\"#030210\",\"#040312\",\"#040314\",\"#050417\",\"#060419\",\"#07051b\",\"#08051d\",\"#09061f\",\"#0a0722\",\"#0b0724\",\"#0c0826\",\"#0d0829\",\"#0e092b\",\"#10092d\",\"#110a30\",\"#120a32\",\"#140b34\",\"#150b37\",\"#160b39\",\"#180c3c\",\"#190c3e\",\"#1b0c41\",\"#1c0c43\",\"#1e0c45\",\"#1f0c48\",\"#210c4a\",\"#230c4c\",\"#240c4f\",\"#260c51\",\"#280b53\",\"#290b55\",\"#2b0b57\",\"#2d0b59\",\"#2f0a5b\",\"#310a5c\",\"#320a5e\",\"#340a5f\",\"#360961\",\"#380962\",\"#390963\",\"#3b0964\",\"#3d0965\",\"#3e0966\",\"#400a67\",\"#420a68\",\"#440a68\",\"#450a69\",\"#470b6a\",\"#490b6a\",\"#4a0c6b\",\"#4c0c6b\",\"#4d0d6c\",\"#4f0d6c\",\"#510e6c\",\"#520e6d\",\"#540f6d\",\"#550f6d\",\"#57106e\",\"#59106e\",\"#5a116e\",\"#5c126e\",\"#5d126e\",\"#5f136e\",\"#61136e\",\"#62146e\",\"#64156e\",\"#65156e\",\"#67166e\",\"#69166e\",\"#6a176e\",\"#6c186e\",\"#6d186e\",\"#6f196e\",\"#71196e\",\"#721a6e\",\"#741a6e\",\"#751b6e\",\"#771c6d\",\"#781c6d\",\"#7a1d6d\",\"#7c1d6d\",\"#7d1e6d\",\"#7f1e6c\",\"#801f6c\",\"#82206c\",\"#84206b\",\"#85216b\",\"#87216b\",\"#88226a\",\"#8a226a\",\"#8c2369\",\"#8d2369\",\"#8f2469\",\"#902568\",\"#922568\",\"#932667\",\"#952667\",\"#972766\",\"#982766\",\"#9a2865\",\"#9b2964\",\"#9d2964\",\"#9f2a63\",\"#a02a63\",\"#a22b62\",\"#a32c61\",\"#a52c60\",\"#a62d60\",\"#a82e5f\",\"#a92e5e\",\"#ab2f5e\",\"#ad305d\",\"#ae305c\",\"#b0315b\",\"#b1325a\",\"#b3325a\",\"#b43359\",\"#b63458\",\"#b73557\",\"#b93556\",\"#ba3655\",\"#bc3754\",\"#bd3853\",\"#bf3952\",\"#c03a51\",\"#c13a50\",\"#c33b4f\",\"#c43c4e\",\"#c63d4d\",\"#c73e4c\",\"#c83f4b\",\"#ca404a\",\"#cb4149\",\"#cc4248\",\"#ce4347\",\"#cf4446\",\"#d04545\",\"#d24644\",\"#d34743\",\"#d44842\",\"#d54a41\",\"#d74b3f\",\"#d84c3e\",\"#d94d3d\",\"#da4e3c\",\"#db503b\",\"#dd513a\",\"#de5238\",\"#df5337\",\"#e05536\",\"#e15635\",\"#e25734\",\"#e35933\",\"#e45a31\",\"#e55c30\",\"#e65d2f\",\"#e75e2e\",\"#e8602d\",\"#e9612b\",\"#ea632a\",\"#eb6429\",\"#eb6628\",\"#ec6726\",\"#ed6925\",\"#ee6a24\",\"#ef6c23\",\"#ef6e21\",\"#f06f20\",\"#f1711f\",\"#f1731d\",\"#f2741c\",\"#f3761b\",\"#f37819\",\"#f47918\",\"#f57b17\",\"#f57d15\",\"#f67e14\",\"#f68013\",\"#f78212\",\"#f78410\",\"#f8850f\",\"#f8870e\",\"#f8890c\",\"#f98b0b\",\"#f98c0a\",\"#f98e09\",\"#fa9008\",\"#fa9207\",\"#fa9407\",\"#fb9606\",\"#fb9706\",\"#fb9906\",\"#fb9b06\",\"#fb9d07\",\"#fc9f07\",\"#fca108\",\"#fca309\",\"#fca50a\",\"#fca60c\",\"#fca80d\",\"#fcaa0f\",\"#fcac11\",\"#fcae12\",\"#fcb014\",\"#fcb216\",\"#fcb418\",\"#fbb61a\",\"#fbb81d\",\"#fbba1f\",\"#fbbc21\",\"#fbbe23\",\"#fac026\",\"#fac228\",\"#fac42a\",\"#fac62d\",\"#f9c72f\",\"#f9c932\",\"#f9cb35\",\"#f8cd37\",\"#f8cf3a\",\"#f7d13d\",\"#f7d340\",\"#f6d543\",\"#f6d746\",\"#f5d949\",\"#f5db4c\",\"#f4dd4f\",\"#f4df53\",\"#f4e156\",\"#f3e35a\",\"#f3e55d\",\"#f2e661\",\"#f2e865\",\"#f2ea69\",\"#f1ec6d\",\"#f1ed71\",\"#f1ef75\",\"#f1f179\",\"#f2f27d\",\"#f2f482\",\"#f3f586\",\"#f3f68a\",\"#f4f88e\",\"#f5f992\",\"#f6fa96\",\"#f8fb9a\",\"#f9fc9d\",\"#fafda1\",\"#fcffa4\"], \"type\": \"seq\"},\n\"magma\": {\"256\": [\"#000004\",\"#010005\",\"#010106\",\"#010108\",\"#020109\",\"#02020b\",\"#02020d\",\"#03030f\",\"#030312\",\"#040414\",\"#050416\",\"#060518\",\"#06051a\",\"#07061c\",\"#08071e\",\"#090720\",\"#0a0822\",\"#0b0924\",\"#0c0926\",\"#0d0a29\",\"#0e0b2b\",\"#100b2d\",\"#110c2f\",\"#120d31\",\"#130d34\",\"#140e36\",\"#150e38\",\"#160f3b\",\"#180f3d\",\"#19103f\",\"#1a1042\",\"#1c1044\",\"#1d1147\",\"#1e1149\",\"#20114b\",\"#21114e\",\"#221150\",\"#241253\",\"#251255\",\"#271258\",\"#29115a\",\"#2a115c\",\"#2c115f\",\"#2d1161\",\"#2f1163\",\"#311165\",\"#331067\",\"#341069\",\"#36106b\",\"#38106c\",\"#390f6e\",\"#3b0f70\",\"#3d0f71\",\"#3f0f72\",\"#400f74\",\"#420f75\",\"#440f76\",\"#451077\",\"#471078\",\"#491078\",\"#4a1079\",\"#4c117a\",\"#4e117b\",\"#4f127b\",\"#51127c\",\"#52137c\",\"#54137d\",\"#56147d\",\"#57157e\",\"#59157e\",\"#5a167e\",\"#5c167f\",\"#5d177f\",\"#5f187f\",\"#601880\",\"#621980\",\"#641a80\",\"#651a80\",\"#671b80\",\"#681c81\",\"#6a1c81\",\"#6b1d81\",\"#6d1d81\",\"#6e1e81\",\"#701f81\",\"#721f81\",\"#732081\",\"#752181\",\"#762181\",\"#782281\",\"#792282\",\"#7b2382\",\"#7c2382\",\"#7e2482\",\"#802582\",\"#812581\",\"#832681\",\"#842681\",\"#862781\",\"#882781\",\"#892881\",\"#8b2981\",\"#8c2981\",\"#8e2a81\",\"#902a81\",\"#912b81\",\"#932b80\",\"#942c80\",\"#962c80\",\"#982d80\",\"#992d80\",\"#9b2e7f\",\"#9c2e7f\",\"#9e2f7f\",\"#a02f7f\",\"#a1307e\",\"#a3307e\",\"#a5317e\",\"#a6317d\",\"#a8327d\",\"#aa337d\",\"#ab337c\",\"#ad347c\",\"#ae347b\",\"#b0357b\",\"#b2357b\",\"#b3367a\",\"#b5367a\",\"#b73779\",\"#b83779\",\"#ba3878\",\"#bc3978\",\"#bd3977\",\"#bf3a77\",\"#c03a76\",\"#c23b75\",\"#c43c75\",\"#c53c74\",\"#c73d73\",\"#c83e73\",\"#ca3e72\",\"#cc3f71\",\"#cd4071\",\"#cf4070\",\"#d0416f\",\"#d2426f\",\"#d3436e\",\"#d5446d\",\"#d6456c\",\"#d8456c\",\"#d9466b\",\"#db476a\",\"#dc4869\",\"#de4968\",\"#df4a68\",\"#e04c67\",\"#e24d66\",\"#e34e65\",\"#e44f64\",\"#e55064\",\"#e75263\",\"#e85362\",\"#e95462\",\"#ea5661\",\"#eb5760\",\"#ec5860\",\"#ed5a5f\",\"#ee5b5e\",\"#ef5d5e\",\"#f05f5e\",\"#f1605d\",\"#f2625d\",\"#f2645c\",\"#f3655c\",\"#f4675c\",\"#f4695c\",\"#f56b5c\",\"#f66c5c\",\"#f66e5c\",\"#f7705c\",\"#f7725c\",\"#f8745c\",\"#f8765c\",\"#f9785d\",\"#f9795d\",\"#f97b5d\",\"#fa7d5e\",\"#fa7f5e\",\"#fa815f\",\"#fb835f\",\"#fb8560\",\"#fb8761\",\"#fc8961\",\"#fc8a62\",\"#fc8c63\",\"#fc8e64\",\"#fc9065\",\"#fd9266\",\"#fd9467\",\"#fd9668\",\"#fd9869\",\"#fd9a6a\",\"#fd9b6b\",\"#fe9d6c\",\"#fe9f6d\",\"#fea16e\",\"#fea36f\",\"#fea571\",\"#fea772\",\"#fea973\",\"#feaa74\",\"#feac76\",\"#feae77\",\"#feb078\",\"#feb27a\",\"#feb47b\",\"#feb67c\",\"#feb77e\",\"#feb97f\",\"#febb81\",\"#febd82\",\"#febf84\",\"#fec185\",\"#fec287\",\"#fec488\",\"#fec68a\",\"#fec88c\",\"#feca8d\",\"#fecc8f\",\"#fecd90\",\"#fecf92\",\"#fed194\",\"#fed395\",\"#fed597\",\"#fed799\",\"#fed89a\",\"#fdda9c\",\"#fddc9e\",\"#fddea0\",\"#fde0a1\",\"#fde2a3\",\"#fde3a5\",\"#fde5a7\",\"#fde7a9\",\"#fde9aa\",\"#fdebac\",\"#fcecae\",\"#fceeb0\",\"#fcf0b2\",\"#fcf2b4\",\"#fcf4b6\",\"#fcf6b8\",\"#fcf7b9\",\"#fcf9bb\",\"#fcfbbd\",\"#fcfdbf\"], \"type\": \"seq\"},\n};\n\nvar matplotlib = {\n\"viridis\": {\"256\": [\"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"], \"type\": \"seq\"},\n};\n\nmodule.exports = colorbrewer;\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\nvar mark = require(\"./Mark\");\n\nvar ScatterBase = mark.Mark.extend({\n\n    render: function() {\n        var base_creation_promise = ScatterBase.__super__.render.apply(this);\n\n        var that = this;\n        this.drag_listener = d3.behavior.drag()\n          .on(\"dragstart\", function(d, i) { return that.drag_start(d, i, this); })\n          .on(\"drag\", function(d, i) { return that.on_drag(d, i, this); })\n          .on(\"dragend\", function(d, i) { return that.drag_ended(d, i, this); });\n\n        this.selected_style = this.model.get(\"selected_style\");\n        this.unselected_style = this.model.get(\"unselected_style\");\n        this.selected_indices = this.model.get(\"selected\");\n\n        this.hovered_style = this.model.get(\"hovered_style\");\n        this.unhovered_style = this.model.get(\"unhovered_style\");\n        this.hovered_index = (!this.model.get(\"hovered_point\")) ? null: [this.model.get(\"hovered_point\")];\n\n        this.display_el_classes = [\"dot\", \"legendtext\"]; //FIXME\n        this.event_metadata = {\n            \"mouse_over\": {\n                \"msg_name\": \"hover\",\n                \"lookup_data\": false,\n                \"hit_test\": true\n            },\n            \"legend_clicked\":  {\n                \"msg_name\": \"legend_click\",\n                \"hit_test\": true\n            },\n            \"element_clicked\": {\n                \"msg_name\": \"element_click\",\n                \"lookup_data\": false,\n                \"hit_test\": true\n            },\n            \"parent_clicked\": {\n                \"msg_name\": \"background_click\",\n                \"hit_test\": false\n            }\n        };\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        return base_creation_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        });\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y,\n            size_scale = this.scales.size,\n            opacity_scale = this.scales.opacity,\n            skew_scale = this.scales.skew,\n            rotation_scale = this.scales.rotation;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n        if(size_scale) {\n            size_scale.set_range([0, this.model.get(\"default_size\")]);\n        }\n        if(opacity_scale) {\n            opacity_scale.set_range([0.2, 1]);\n        }\n        if(skew_scale) {\n            skew_scale.set_range([0, 1]);\n        }\n        if(rotation_scale) {\n            rotation_scale.set_range([0, 180]);\n        }\n    },\n\n    set_positional_scales: function() {\n        this.x_scale = this.scales.x;\n        this.y_scale = this.scales.y;\n        // If no scale for \"x\" or \"y\" is specified, figure scales are used.\n        if(!this.x_scale) {\n            this.x_scale = this.parent.scale_x;\n        }\n        if(!this.y_scale) {\n            this.y_scale = this.parent.scale_y;\n        }\n        this.listenTo(this.x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                var animate = true;\n                this.update_position(animate); }\n        });\n        this.listenTo(this.y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                var animate = true;\n                this.update_position(animate); }\n        });\n    },\n\n    initialize_additional_scales: function() {\n        // function to create the additional scales and create the\n        // listeners for the additional scales\n        var color_scale = this.scales.color,\n            size_scale = this.scales.size,\n            opacity_scale = this.scales.opacity,\n            skew_scale = this.scales.skew,\n            rotation_scale = this.scales.rotation;\n        // the following handlers are for changes in data that does not\n        // impact the position of the elements\n        if (color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                var animate = true;\n                this.color_scale_updated(animate);\n            });\n            color_scale.on(\"color_scale_range_changed\",\n                            this.color_scale_updated, this);\n        }\n        if (size_scale) {\n            this.listenTo(size_scale, \"domain_changed\", function() {\n                var animate = true;\n                this.update_default_size(animate);\n            });\n        }\n        if (opacity_scale) {\n            this.listenTo(opacity_scale, \"domain_changed\", function() {\n                var animate = true;\n                this.update_default_opacities(animate);\n            });\n        }\n        if (skew_scale) {\n            this.listenTo(skew_scale, \"domain_changed\", function() {\n                var animate = true;\n                this.update_default_skew(animate);\n            });\n        }\n        if (rotation_scale) {\n            this.listenTo(rotation_scale, \"domain_changed\", function() {\n                var animate = true;\n                this.update_position(animate);\n            });\n        }\n    },\n\n    create_listeners: function() {\n        ScatterBase.__super__.create_listeners.apply(this);\n        this.d3el.on(\"mouseover\", _.bind(function() {\n              this.event_dispatcher(\"mouse_over\");\n          }, this))\n          .on(\"mousemove\", _.bind(function() {\n              this.event_dispatcher(\"mouse_move\");\n          }, this))\n          .on(\"mouseout\", _.bind(function() {\n              this.event_dispatcher(\"mouse_out\");\n          }, this));\n\n        this.listenTo(this.model, \"data_updated\", function() {\n            //animate dots on data update\n            var animate = true;\n            this.draw(animate);\n        }, this);\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n        this.listenTo(this.model, \"change:enable_hover\", function() { this.hide_tooltip(); }, this);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.model, \"change:enable_move\", this.set_drag_behavior);\n        this.listenTo(this.model, \"change:selected\", this.update_selected);\n        this.listenTo(this.model, \"change:hovered_point\", this.update_hovered);\n        this.listenTo(this.model, \"change:hovered_style\", this.hovered_style_updated, this);\n        this.listenTo(this.model, \"change:unhovered_style\", this.unhovered_style_updated, this);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n    },\n\n    // The following three functions are convenience functions to get\n    // the fill color / opacity / size of an element given the data.\n    // In fact they are more than convenience functions as they limit the\n    // points of entry to that logic which makes it easier to manage and to\n    // keep consistent across different places where we use it.\n    get_element_color: function(data, index) {\n        var color_scale = this.scales.color;\n        var colors = this.model.get(\"colors\");\n        var len = colors.length;\n        if(color_scale && data.color !== undefined && data.color !== null) {\n            return color_scale.scale(data.color);\n        }\n        return colors[index % len];\n    },\n\n    get_element_size: function(data) {\n        var size_scale = this.scales.size;\n        if(size_scale && data.size !== undefined) {\n            return size_scale.scale(data.size);\n        }\n        return this.model.get(\"default_size\");\n    },\n\n    get_element_opacity: function(data, index) {\n        var opacity_scale = this.scales.opacity;\n        var default_opacities = this.model.get(\"default_opacities\");\n        var len = default_opacities.length;\n        if(opacity_scale && data.opacity !== undefined) {\n            return opacity_scale.scale(data.opacity);\n        }\n        return default_opacities[index % len];\n    },\n\n    get_element_skew: function(data) {\n        var skew_scale = this.scales.skew;\n        if(skew_scale && data.skew !== undefined) {\n            return skew_scale.scale(data.skew);\n        }\n        return this.model.get(\"default_skew\");\n    },\n\n    get_element_rotation: function(d) {\n        var rotation_scale = this.scales.rotation;\n        return (!rotation_scale || !d.rotation) ? \"\" :\n            \"rotate(\" + rotation_scale.scale(d.rotation) + \")\";\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.update_position();\n    },\n\n    update_position: function(animate) {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        var that = this;\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n        this.d3el.selectAll(\".object_grp\").transition(\"update_position\")\n            .duration(animation_duration)\n            .attr(\"transform\", function(d) {\n                return \"translate(\" + (x_scale.scale(d.x) + x_scale.offset) +\n                                \",\" + (y_scale.scale(d.y) + y_scale.offset) + \")\" +\n                       that.get_element_rotation(d);\n            });\n        this.x_pixels = this.model.mark_data.map(function(el) { return x_scale.scale(el.x) + x_scale.offset; });\n        this.y_pixels = this.model.mark_data.map(function(el) { return y_scale.scale(el.y) + y_scale.offset; });\n        this.pixel_coords = this.model.mark_data.map(function(el) {\n                return [x_scale.scale(el.x) + x_scale.offset,\n                        y_scale.scale(el.y) + y_scale.offset];\n            });\n    },\n\n    draw: function(animate) {\n        this.set_ranges();\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        var that = this,\n            fill = this.model.get(\"fill\");\n\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n        var elements = this.d3el.selectAll(\".object_grp\")\n            .data(this.model.mark_data, function(d) { return d.unique_id; });\n\n        var elements_added = elements.enter().append(\"g\")\n            .attr(\"class\", \"object_grp\")\n\n        this.update_position(animate);\n\n        this.set_drag_behavior();\n        elements.on(\"click\", _.bind(function(d, i) {\n            this.event_dispatcher(\"element_clicked\",\n\t\t\t      {\"data\": d, \"index\": i});\n        }, this));\n\t    elements.on(\"mouseover\", _.bind(function(d, i) {\n\t\t    this.scatter_hover_handler({\"data\": d, \"index\": i});\n\t    }, this));\n\t    elements.on(\"mouseout\", _.bind(function() {\n\t\t    this.reset_hover();\n\t    }, this));\n\n        this.draw_elements(animate, elements_added)\n\n        // Removed the transition on exit as it was causing issues.\n        // Elements are not removed until the transition is complete and\n        // hence the setting styles function doesn't behave as intended.\n        // The only way to call the function after all of the elements are\n        // removed is round-about and doesn't look very nice visually.\n        elements.exit().remove();\n    },\n\n    draw_elements: function(animate, elements_added) {},\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        } else {\n            if(interactions.click !== undefined &&\n               interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click === \"add\") {\n                    this.event_listeners.parent_clicked = this.add_element;\n                    this.event_listeners.element_clicked = function() {};\n                } else if (interactions.click === \"delete\") {\n                    this.event_listeners.parent_clicked = function() {};\n                    this.event_listeners.element_clicked = this.delete_element;\n                } else if (interactions.click == 'select') {\n   \t\t            this.event_listeners.parent_clicked = this.reset_selection;\n\t\t            this.event_listeners.element_clicked = this.scatter_click_handler;\n\t            }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n            if(interactions.legend_click !== undefined &&\n              interactions.legend_click !== null) {\n                if(interactions.legend_click === \"tooltip\") {\n                    this.event_listeners.legend_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                }\n            } else {\n                this.event_listeners.legend_clicked = function() {};\n            }\n            if(interactions.legend_hover !== undefined &&\n              interactions.legend_hover !== null) {\n                if(interactions.legend_hover === \"highlight_axes\") {\n                    this.event_listeners.legend_mouse_over = _.bind(this.highlight_axes, this);\n                    this.event_listeners.legend_mouse_out = _.bind(this.unhighlight_axes, this);\n                }\n            } else {\n                this.reset_legend_hover();\n            }\n        }\n    },\n\n\treset_hover: function() {\n\t    this.model.set(\"hovered_point\", null);\n\t    this.hovered_index = null;\n\t    this.touch();\n\t},\n\n\tscatter_hover_handler: function(args) {\n\t    var data = args.data;\n        var index = args.index;\n\n        this.model.set(\"hovered_point\",\n                       index, {updated_view: this});\n\t    this.touch();\n    },\n\n    reset_selection: function() {\n        this.model.set(\"selected\", null);\n        this.selected_indices = null;\n        this.touch();\n    },\n\n    scatter_click_handler: function(args) {\n        var data = args.data;\n        var index = args.index;\n        var that = this;\n        var idx = this.model.get(\"selected\");\n        var selected = idx ? utils.deepCopy(idx) : [];\n        // index of bar i. Checking if it is already present in the list.\n        var elem_index = selected.indexOf(index);\n        // Replacement for \"Accel\" modifier.\n        var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n\n        if(elem_index > -1 && accelKey) {\n            // if the index is already selected and if accel key is\n            // pressed, remove the element from the list\n            selected.splice(elem_index, 1);\n        } else {\n            if(accelKey) {\n                //If accel is pressed and the bar is not already selcted\n                //add the bar to the list of selected bars.\n                selected.push(index);\n            }\n            // updating the array containing the bar indexes selected\n            // and updating the style\n            else {\n                //if accel is not pressed, then clear the selected ones\n                //and set the current element to the selected\n                selected = [];\n                selected.push(index);\n            }\n        }\n        this.model.set(\"selected\",\n                       ((selected.length === 0) ? null : selected),\n                       {updated_view: this});\n        this.touch();\n        if(!d3.event) {\n            d3.event = window.event;\n        }\n        var e = d3.event;\n        if(e.cancelBubble !== undefined) { // IE\n            e.cancelBubble = true;\n        }\n        if(e.stopPropagation) {\n            e.stopPropagation();\n        }\n        e.preventDefault();\n\t},\n\n    // Hovered Style related functions\n    hovered_style_updated: function(model, style) {\n        this.hovered_style = style;\n        this.clear_style(model.previous(\"hovered_style\"), this.hovered_index);\n        this.style_updated(style, this.hovered_index);\n    },\n\n    unhovered_style_updated: function(model, style) {\n        this.unhovered_style = style;\n        var hov_indices = this.hovered_index;\n        var unhovered_indices = (hov_indices) ?\n            _.range(this.model.mark_data.length).filter(function(index){\n                return hov_indices.indexOf(index) === -1;\n            }) : [];\n        this.clear_style(model.previous(\"unhovered_style\"), unhovered_indices);\n        this.style_updated(style, unhovered_indices);\n    },\n\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        this.legend_el = elem.selectAll(\".legend\" + this.uuid)\n          .data([this.model.mark_data[0]]);\n        var colors = this.model.get(\"colors\"),\n            len = colors.length;\n\n        var that = this;\n        var rect_dim = inter_y_disp * 0.8;\n        var el_added = this.legend_el.enter()\n          .append(\"g\")\n            .attr(\"class\", \"legend\" + this.uuid)\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp)  + \")\";\n            })\n            .on(\"mouseover\", _.bind(function() {\n               this.event_dispatcher(\"legend_mouse_over\");\n            }, this))\n            .on(\"mouseout\", _.bind(function() {\n               this.event_dispatcher(\"legend_mouse_out\");\n            }, this))\n            .on(\"click\", _.bind(function() {\n                this.event_dispatcher(\"legend_clicked\");\n            }, this));\n\n        this.draw_legend_elements(el_added, rect_dim)\n\n        this.legend_el.append(\"text\")\n          .attr(\"class\",\"legendtext\")\n          .attr(\"x\", rect_dim * 1.2)\n          .attr(\"y\", rect_dim / 2)\n          .attr(\"dy\", \"0.35em\")\n          .text(function(d, i) {\n              return that.model.get(\"labels\")[i];\n          })\n          .style(\"fill\", function(d, i) {\n              return colors[i % len];\n          });\n\n        var max_length = d3.max(this.model.get(\"labels\"), function(d) {\n            return d.length;\n        });\n\n        this.legend_el.exit().remove();\n        return [1, max_length];\n    },\n\n    draw_legend_elements: function(elements_added, rect_dim) {},\n\n    invert_point: function(pixel) {\n        if(pixel === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return;\n        }\n\n        var x_scale = this.scales.x;\n        var abs_diff = this.x_pixels.map(function(elem) { return Math.abs(elem - pixel); });\n        var sel_index = abs_diff.indexOf(d3.min(abs_diff));\n\n        this.model.set(\"selected\", [sel_index]);\n        this.touch();\n    },\n\n    selector_changed: function(point_selector, rect_selector) {\n        if(point_selector === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return [];\n        }\n        var pixels = this.pixel_coords;\n        var indices = _.range(pixels.length);\n        var selected = _.filter(indices, function(index) {\n            return point_selector(pixels[index]);\n        });\n        this.model.set(\"selected\", selected);\n        this.touch();\n    },\n\n    update_selected: function(model, value) {\n        this.selected_indices = value;\n        this.apply_styles();\n    },\n\n    update_hovered: function(model, value) {\n        this.hovered_index = value === null ? value : [value];\n        this.apply_styles();\n    },\n\n    apply_styles: function(style_arr) {\n        if(style_arr === undefined || style_arr == null) {\n            style_arr = [this.selected_style, this.unselected_style,\n                         this.hovered_style, this.unhovered_style];\n        }\n        ScatterBase.__super__.apply_styles.apply(this, [style_arr]);\n\n        var all_indices = _.range(this.model.mark_data.length);\n\n        this.set_style_on_elements(this.hovered_style, this.hovered_index);\n        var unhovered_indices = (!this.hovered_index) ?\n            [] : _.difference(all_indices, this.hovered_index);\n        this.set_style_on_elements(this.unhovered_style, unhovered_indices);\n    },\n\n    clear_style: function(style_dict, indices) {\n        // Function to clear the style of a dict on some or all the elements of the\n        // chart.If indices is null, clears the style on all elements. If\n        // not, clears on only the elements whose indices are mathcing.\n        //\n        // This function is not used right now. But it can be used if we\n        // decide to accommodate more properties than those set by default.\n        // Because those have to cleared specifically.\n        var elements = this.d3el.selectAll(\".element\");\n        if(indices) {\n            elements = elements.filter(function(d, index) {\n                return indices.indexOf(index) !== -1;\n            });\n        }\n        var clearing_style = {};\n        for(var key in style_dict) {\n            clearing_style[key] = null;\n        }\n        elements.style(clearing_style);\n    },\n\n    set_style_on_elements: function(style, indices) {\n        // If the index array is undefined or of length=0, exit the\n        // function without doing anything\n        if(!indices || indices.length === 0) {\n            return;\n        }\n        // Also, return if the style object itself is blank\n        if(Object.keys(style).length === 0) {\n            return;\n        }\n        var elements = this.d3el.selectAll(\".element\");\n        elements = elements.filter(function(data, index) {\n            return indices.indexOf(index) !== -1;\n        });\n        elements.style(style);\n    },\n\n    compute_view_padding: function() {\n        //This function computes the padding along the x and y directions.\n        //The value is in pixels.\n        var x_padding = Math.sqrt(this.model.get(\"default_size\")) / 2 + 1.0;\n\n        if(x_padding !== this.x_padding || x_padding !== this.y_padding) {\n            this.x_padding = x_padding;\n            this.y_padding = x_padding;\n            this.trigger(\"mark_padding_updated\");\n        }\n    },\n\n    update_array: function(d, i) {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n\n        if (!this.model.get(\"restrict_y\")){\n            var x_data = [];\n            this.model.get_typed_field(\"x\").forEach(function(elem) {\n                x_data.push(elem);\n            });\n            x_data[i] = x_scale.scale.invert(d[0]);\n            this.model.set_typed_field(\"x\", x_data);\n        }\n        if (!this.model.get(\"restrict_x\")){\n            var y_data = [];\n            this.model.get_typed_field(\"y\").forEach(function(elem) {\n                y_data.push(elem);\n            });\n            y_data[i] = y_scale.scale.invert(d[1]);\n            this.model.set_typed_field(\"y\", y_data);\n        }\n        this.touch();\n    },\n\n    set_drag_behavior: function() {\n        var elements = this.d3el.selectAll(\".object_grp\");\n        if (this.model.get(\"enable_move\")) {\n            elements.call(this.drag_listener);\n        } else {\n            elements.on(\".drag\", null);\n        }\n    },\n\n    set_drag_style: function(d, i, dragged_node) {},\n\n    reset_drag_style: function(d, i, dragged_node) {},\n\n    drag_start: function(d, i, dragged_node) {\n        // d[0] and d[1] will contain the previous position (in pixels)\n        // of the dragged point, for the length of the drag event\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        d[0] = x_scale.scale(d.x) + x_scale.offset;\n        d[1] = y_scale.scale(d.y) + y_scale.offset;\n\n        this.set_drag_style(d, i, dragged_node)\n\n        this.send({\n            event: \"drag_start\",\n            point: {x : d.x, y: d.y},\n            index: i\n        });\n    },\n\n    on_drag: function(d, i, dragged_node) {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        // If restrict_x is true, then the move is restricted only to the X\n        // direction.\n        var restrict_x = this.model.get(\"restrict_x\"),\n            restrict_y = this.model.get(\"restrict_y\");\n        if (restrict_x && restrict_y) { return; }\n        if (!restrict_y) { d[0] = d3.event.x; }\n        if (!restrict_x) { d[1] = d3.event.y; }\n\n        d3.select(dragged_node)\n          .attr(\"transform\", function() {\n              return \"translate(\" + d[0] + \",\" + d[1] + \")\";\n          });\n        this.send({\n            event: \"drag\",\n            origin: {x: d.x, y: d.y},\n\t        point: {\n                x: x_scale.invert(d[0]),\n                y: y_scale.invert(d[1])\n            },\n            index: i\n        });\n        if(this.model.get(\"update_on_move\")) {\n            // saving on move if flag is set\n            this.update_array(d, i);\n        }\n    },\n\n    drag_ended: function(d, i, dragged_node) {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n\n        this.reset_drag_style(d, i, dragged_node);\n        this.update_array(d, i);\n        this.send({\n            event: \"drag_end\",\n            point: {\n                x: x_scale.invert(d[0]),\n                y: y_scale.invert(d[1])\n            },\n            index: i\n        });\n    },\n\n    selected_deleter: function() {\n        d3.event.stopPropagation();\n        return;\n    },\n\n    add_element: function() {\n        var mouse_pos = d3.mouse(this.el);\n        var curr_pos = [mouse_pos[0], mouse_pos[1]];\n\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        //add the new point to data\n        var x_data = [];\n        this.model.get_typed_field(\"x\").forEach(function(d) {\n            x_data.push(d);\n        });\n        var y_data = [];\n        this.model.get_typed_field(\"y\").forEach(function(d) {\n            y_data.push(d);\n        });\n        x_data.push(x_scale.scale.invert(curr_pos[0]));\n        y_data.push(y_scale.scale.invert(curr_pos[1]));\n        this.model.set_typed_field(\"x\", x_data);\n        this.model.set_typed_field(\"y\", y_data);\n        this.touch();\n        // adding the point and saving the model automatically triggers a\n        // draw which adds the new point because the data now has a new\n        // point\n    },\n\n    delete_element: function(args) {\n        var data = args.data;\n        var index = args.index;\n\n        // Remove the point from model data\n        var x_data = [];\n        this.model.get_typed_field(\"x\").forEach(function(d, i) {\n            if (i != index) { x_data.push(d); }\n        });\n        var y_data = [];\n        this.model.get_typed_field(\"y\").forEach(function(d, i) {\n            if (i != index) { y_data.push(d); }\n        });\n        this.model.set_typed_field(\"x\", x_data);\n        this.model.set_typed_field(\"y\", y_data);\n        this.touch();\n    }\n});\n\nmodule.exports = {\n    ScatterBase: ScatterBase\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar ScatterBaseModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend({}, markmodel.MarkModel.prototype.defaults(), {\n        _model_name: \"ScatterBaseModel\",\n        _view_name: \"ScatterBase\",\n\n        x: [],\n        y: [],\n        color: null,\n        opacity: null,\n        size: null,\n        rotation: null,\n        hovered_point: null,\n        scales_metadata: {\n            x: { orientation: \"horizontal\", dimension: \"x\" },\n            y: { orientation: \"vertical\", dimension: \"y\" },\n            color: { dimension: \"color\" },\n            size: { dimension: \"size\" },\n            opacity: { dimension: \"opacity\" },\n            rotation: { dimension: \"rotation\" }\n        },\n        hovered_style: {},\n        unhovered_style: {},\n        colors: [],\n        default_opacities: [],\n        enable_move: false,\n        enable_delete: false,\n        restrict_x: false,\n        restrict_y: false,\n        update_on_move: false\n        });\n    },\n\n    initialize: function() {\n        // TODO: Normally, color, opacity and size should not require a redraw\n        ScatterBaseModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"x\", \"y\", \"color\", \"opacity\", \"size\", \"rotation\"], this.update_data, this);\n        // FIXME: replace this with on(\"change:preserve_domain\"). It is not done here because\n        // on_some_change depends on the GLOBAL backbone on(\"change\") handler which\n        // is called AFTER the specific handlers on(\"change:foobar\") and we make that\n        // assumption.\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n    },\n\n    update_mark_data: function() {\n        var x_data = this.get_typed_field(\"x\"),\n            y_data = this.get_typed_field(\"y\"),\n            scales = this.get(\"scales\"),\n            x_scale = scales.x,\n            y_scale = scales.y,\n            color_scale = scales.color;\n\n        if (x_data.length === 0 || y_data.length === 0) {\n            this.mark_data = [];\n        } else {\n            //FIXME:Temporary fix to avoid misleading NaN error due to X and Y\n            //being of different lengths. In particular, if Y is of a smaller\n            //length, throws an error on the JS side\n            var min_len = Math.min(x_data.length, y_data.length);\n            x_data = x_data.slice(0, min_len);\n            var color = this.get_typed_field(\"color\"),\n                size = this.get_typed_field(\"size\"),\n                opacity = this.get_typed_field(\"opacity\"),\n                rotation = this.get_typed_field(\"rotation\");\n\n            if(color_scale) {\n                if(!this.get(\"preserve_domain\").color) {\n                    color_scale.compute_and_set_domain(color, this.model_id + \"_color\");\n                } else {\n                    color_scale.del_domain([], this.model_id + \"_color\");\n                }\n            }\n\n            this.mark_data = x_data.map(function(d, i) {\n                return {\n                    x: d,\n                    y: y_data[i],\n                    color: color[i],\n                    size: size[i],\n                    opacity: opacity[i],\n                    rotation: rotation[i],\n                    index: i\n                };\n            });\n        }\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        this.update_mark_data();\n        this.update_unique_ids();\n        this.update_domains();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_unique_ids: function() {},\n\n    get_data_dict: function(data, index) {\n        return data;\n    },\n\n    update_domains: function() {\n        if (!this.mark_data) {\n            return;\n        }\n        // color scale needs an issue in DateScaleModel to be fixed. It\n        // should be moved here as soon as that is fixed.\n\n       var scales = this.get(\"scales\");\n       for (var key in scales) {\n            if(scales.hasOwnProperty(key) && key != \"color\") {\n                var scale = scales[key];\n                if(!this.get(\"preserve_domain\")[key]) {\n                    scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                        return elem[key];\n                    }), this.model_id + key);\n                } else {\n                    scale.del_domain([], this.model_id + key);\n                }\n            }\n       }\n    }\n});\n\nmodule.exports = {\n    ScatterBaseModel: ScatterBaseModel\n};\n","/* Based on http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n *\n * This file is licensed under the following license:\n * \n * Copyright (c) 1970-2003, Wm. Randolph Franklin\n * \n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use, copy,\n * modify, merge, publish, distribute, sublicense, and/or sell copies\n * of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimers.\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice in the documentation and/or other materials\n *    provided with the distribution.\n * 3. The name of W. Randolph Franklin may not be used to endorse or\n *    promote products derived from this Software without specific prior\n *    written permission.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nfunction point_in_lasso(point, vertices) {\n    // Checks if a point is in lasso\n    var xi, xj, yi, yj, intersect,\n        x = point[0], y = point[1], is_inside = false;\n\n    for (var i = 0, j = vertices.length - 1; i < vertices.length; j = i++) {\n        xi = vertices[i][0],\n        yi = vertices[i][1],\n        xj = vertices[j][0],\n        yj = vertices[j][1],\n        intersect = ((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) is_inside = !is_inside;\n    }\n    return is_inside;\n}\n\nmodule.exports = {\n    point_in_lasso: point_in_lasso,\n}\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar scale = require(\"./Scale\");\n\nvar ColorScale = scale.Scale.extend({\n\n    render: function(){\n        this.create_d3_scale();\n        this.update_extrapolation();\n        if(this.model.domain.length > 0) {\n            this.scale.domain(this.model.domain);\n        }\n        this.offset = 0;\n        this.create_event_listeners();\n        this.set_range();\n    },\n\n    create_d3_scale: function(){\n        this.scale = d3.scale.linear();\n    },\n\n    create_event_listeners: function() {\n        ColorScale.__super__.create_event_listeners.apply(this);\n        this.listenTo(this.model, \"colors_changed\", this.set_range, this);\n        this.model.on(\"change:extrapolation\", function() {\n            this.update_extrapolation();\n            this.trigger(\"color_scale_range_changed\"); }, this);\n    },\n\n    update_extrapolation: function() {\n        this.scale.clamp((this.model.get(\"extrapolation\") === \"constant\"));\n    },\n\n    set_range: function() {\n        this.scale.range(this.model.color_range);\n        this.trigger(\"color_scale_range_changed\");\n    },\n});\n\nmodule.exports = {\n    ColorScale: ColorScale,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar linearscalemodel = require(\"./LinearScaleModel\");\nvar colorutils = require(\"./ColorUtils\");\n\nvar ColorScaleModel = linearscalemodel.LinearScaleModel.extend({\n\n    set_init_state: function() {\n        this.type = \"color_linear\";\n        this.color_range = [];\n        this.mid = null;\n    },\n\n    set_listeners: function() {\n        ColorScaleModel.__super__.set_listeners.apply(this, arguments);\n        this.on_some_change([\"colors\", \"scheme\"], this.colors_changed, this);\n        this.on(\"change:mid\", this.update_domain, this);\n        this.colors_changed();\n    },\n\n    update_domain: function() {\n        // Compute domain min and max\n        var that = this;\n        var min = (!this.min_from_data) ?\n            this.min : d3.min(_.map(this.domains, function(d) {\n                return d.length > 0 ? d[0] : that.global_max;\n            }));\n        var max = (!this.max_from_data) ?\n            this.max : d3.max(_.map(this.domains, function(d) {\n                return d.length > 0 ? d[d.length-1] : that.global_min;\n            }));\n        var prev_mid = this.mid;\n        this.mid = this.get(\"mid\");\n\n        // If the min/mid/max has changed, or the number of colors has changed,\n        // update the domain\n        var prev_domain = this.domain;\n        var prev_length = prev_domain.length;\n        var n_colors = this.color_range.length;\n\n        if(min != prev_domain[0] || max != prev_domain[prev_length-1] ||\n           n_colors != prev_length || this.mid != prev_mid) {\n\n            this.domain = this.create_domain(min, this.mid, max, n_colors);\n            this.trigger(\"domain_changed\", this.domain);\n        }\n    },\n\n    create_domain: function(min, mid, max, n_colors) {\n        // Domain ranges from min to max, with the same number of\n        // elements as the color range\n        var scale = d3.scale.linear()\n\n        if (mid === undefined || mid === null){\n            scale.domain([0, n_colors - 1]).range([min, max]);\n        } else {\n            var mid_index = n_colors / 2;\n            scale.domain([0, mid_index, n_colors - 1]).range([min, mid, max]);\n        }\n\n        var domain = [];\n        for (i = 0; i < n_colors; i++) {\n            var j = this.reverse ? n_colors-1-i : i;\n            domain.push(scale(j));\n        }\n        return domain;\n    },\n\n    colors_changed: function() {\n        var colors = this.get(\"colors\");\n        this.color_range = colors.length > 0 ? colors : \n            colorutils.get_linear_scale_range(this.get(\"scheme\"));\n        // If the number of colors has changed, the domain must be updated\n        this.update_domain();\n        // Update the range of the views. For a color scale the range doesn't depend\n        // on the view, so ideally we could get rid of this\n        this.trigger(\"colors_changed\");\n    }\n});\n\nmodule.exports = {\n    ColorScaleModel: ColorScaleModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar mark = require(\"./Mark\");\nvar markers = require(\"./Markers\");\nvar utils = require(\"./utils\");\n\nvar bqSymbol = markers.symbol;\n\nvar Lines = mark.Mark.extend({\n\n    render: function() {\n        var base_render_promise = Lines.__super__.render.apply(this);\n        var that = this;\n        this.dot = bqSymbol().size(this.model.get(\"marker_size\"));\n        if (this.model.get(\"marker\")) {\n            this.dot.type(this.model.get(\"marker\"));\n        }\n\n        // TODO: create_listeners is put inside the promise success handler\n        // because some of the functions depend on child scales being\n        // created. Make sure none of the event handler functions make that\n        // assumption.\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        this.display_el_classes = [\"line\", \"legendtext\", \"dot\"];\n        return base_render_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        });\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        var y_scale = this.scales.y;\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.update_line_xy(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.update_line_xy(); }\n        });\n    },\n\n    initialize_additional_scales: function() {\n        var color_scale = this.scales.color;\n        if(color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                this.update_style();\n            });\n            color_scale.on(\"color_scale_range_changed\", this.update_style, this);\n        }\n    },\n\n    create_listeners: function() {\n        Lines.__super__.create_listeners.apply(this);\n        this.d3el.on(\"mouseover\", _.bind(function() { this.event_dispatcher(\"mouse_over\"); }, this))\n            .on(\"mousemove\", _.bind(function() { this.event_dispatcher(\"mouse_move\"); }, this))\n            .on(\"mouseout\", _.bind(function() { this.event_dispatcher(\"mouse_out\"); }, this));\n\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n\n        // FIXME: multiple calls to update_path_style. Use on_some_change.\n        this.listenTo(this.model, \"change:interpolation\", this.update_path_style, this);\n        this.listenTo(this.model, \"change:close_path\", this.update_path_style, this);\n\n        // FIXME: multiple calls to update_style. Use on_some_change.\n        this.listenTo(this.model, \"change:colors\", this.update_style, this);\n        this.listenTo(this.model, \"change:opacities\", this.update_style, this);\n        this.listenTo(this.model, \"change:fill_opacities\", this.update_style, this);\n        this.listenTo(this.model, \"change:fill_colors\", this.update_style, this);\n\n        this.listenTo(this.model, \"change:fill\", this.update_fill, this);\n\n        this.listenTo(this.model, \"data_updated\", function() {\n            var animate = true;\n            this.draw(animate);\n        }, this);\n        this.listenTo(this.model, \"labels_updated\", this.update_labels, this);\n        this.listenTo(this.model, \"change:stroke_width\", this.update_stroke_width, this);\n        this.listenTo(this.model, \"change:labels_visibility\", this.update_legend_labels, this);\n        this.listenTo(this.model, \"change:curves_subset\", this.update_curves_subset, this);\n        this.listenTo(this.model, \"change:line_style\", this.update_line_style, this);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n\n        this.listenTo(this.model, \"change:marker\", this.update_marker, this);\n        this.listenTo(this.model, \"change:marker_size\", this.update_marker_size, this);\n    },\n\n    update_legend_labels: function() {\n        if(this.model.get(\"labels_visibility\") === \"none\") {\n            this.d3el.selectAll(\".legend\")\n              .attr(\"display\", \"none\");\n            this.d3el.selectAll(\".curve_label\")\n              .attr(\"display\", \"none\");\n        } else if(this.model.get(\"labels_visibility\") === \"label\") {\n            this.d3el.selectAll(\".legend\")\n              .attr(\"display\", \"none\");\n            this.d3el.selectAll(\".curve_label\")\n              .attr(\"display\", \"inline\");\n        } else {\n            this.d3el.selectAll(\".legend\")\n              .attr(\"display\", \"inline\");\n            this.d3el.selectAll(\".curve_label\")\n              .attr(\"display\", \"none\");\n        }\n    },\n\n    update_labels: function() {\n        var curves_sel = this.d3el.selectAll(\".curve\")\n          .data(this.model.mark_data)\n          .select(\".curve_label\")\n          .text(function(d) { return d.name; });\n    },\n\n    get_line_style: function() {\n        switch (this.model.get(\"line_style\")) {\n            case \"solid\":\n                return \"none\";\n            case \"dashed\":\n                return \"10,10\";\n            case \"dotted\":\n                return \"2,10\";\n            case \"dash_dotted\":\n                return \"10,5,2,5\";\n        }\n    },\n\n    // Updating the style of the curve, stroke, colors, dashed etc...\n    // Could be fused in a single function for increased readability\n    // and to avoid code repetition\n    update_line_style: function() {\n        this.d3el.selectAll(\".curve\").select(\".line\")\n          .style(\"stroke-dasharray\", _.bind(this.get_line_style, this));\n        if (this.legend_el) {\n            this.legend_el.select(\"path\")\n              .style(\"stroke-dasharray\", _.bind(this.get_line_style, this));\n        }\n    },\n\n    update_stroke_width: function(model, stroke_width) {\n        this.compute_view_padding();\n        this.d3el.selectAll(\".curve\").select(\".line\")\n          .style(\"stroke-width\", stroke_width);\n        if (this.legend_el) {\n            this.legend_el.select(\"path\")\n              .style(\"stroke-width\", stroke_width);\n        }\n    },\n\n    update_style: function() {\n        var that = this,\n            fill = this.model.get(\"fill\"),\n            fill_color = this.model.get(\"fill_colors\"),\n            opacities = this.model.get(\"opacities\"),\n            fill_opacities = this.model.get(\"fill_opacities\");\n        // update curve colors\n        var curves = this.d3el.selectAll(\".curve\")\n        curves.select(\".line\")\n          .style(\"opacity\", function(d, i) { return opacities[i]; })\n          .style(\"stroke\", function(d, i) {\n              return that.get_element_color(d, i) || fill_color[i];\n          })\n          .style(\"fill\", function(d, i) {\n              return fill === \"inside\" ? that.get_fill_color(d, i) : \"\";\n          })\n          .style(\"fill-opacity\", function(d, i) {\n              return fill === \"inside\" ? fill_opacities[i] : \"\";\n          });\n        curves.select(\".area\")\n          .style(\"fill\", function(d, i) { return that.get_fill_color(d, i); })\n          .style(\"opacity\", function(d, i) { return fill_opacities[i]; });\n        this.update_marker_style();\n        // update legend style\n        if (this.legend_el){\n            this.legend_el.select(\".line\")\n              .style(\"stroke\", function(d, i) {\n                  return that.get_element_color(d, i) || fill_color[i];\n              })\n              .style(\"opacity\", function(d, i) { return opacities[i]; })\n              .style(\"fill\", function(d, i) {\n                  return that.model.get(\"fill\") === \"none\" ?\n                      \"\" : that.get_fill_color(d, i);\n              });\n            this.legend_el.select(\".dot\")\n              .style(\"stroke\", function(d, i) {\n                  return that.get_element_color(d, i) || fill_color[i];\n              })\n              .style(\"opacity\", function(d, i) { return opacities[i]; })\n              .style(\"fill\", function(d, i) {\n                  return that.get_element_color(d, i) || fill_color[i];\n              });\n            this.legend_el.select(\"text\")\n              .style(\"fill\", function(d, i) {\n                  return that.get_element_color(d, i) || fill_color[i];\n              })\n              .style(\"opacity\", function(d, i) {\n                  return opacities[i];\n              });\n        }\n        this.update_stroke_width(this.model, this.model.get(\"stroke_width\"));\n        this.update_line_style();\n    },\n\n    path_closure: function() {\n        return this.model.get(\"close_path\") ? \"Z\" : \"\";\n    },\n\n    update_path_style: function() {\n        var interpolation = this.model.get(\"interpolation\");\n        this.line.interpolate(interpolation);\n        this.area.interpolate(interpolation);\n        var that = this;\n        this.d3el.selectAll(\".curve\").select(\".line\")\n          .attr(\"d\", function(d) {\n              return that.line(d.values) + that.path_closure();\n          });\n        this.d3el.selectAll(\".curve\").select(\".area\")\n          .transition(\"update_path_style\")\n          .duration(0) //FIXME\n          .attr(\"d\", function(d) { return that.area(d.values); });\n        if (this.legend_el) {\n            this.legend_line.interpolate(interpolation);\n            this.legend_el.selectAll(\"path\")\n              .attr(\"d\", this.legend_line(this.legend_path_data) + this.path_closure());\n        }\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.update_line_xy();\n    },\n\n    selector_changed: function(point_selector, rect_selector) {\n        if(point_selector === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return [];\n        }\n        var pixels = this.pixel_coords;\n        var indices = _.range(pixels.length);\n        var selected = _.filter(indices, function(index) {\n            return point_selector(pixels[index]);\n        });\n        this.model.set(\"selected\", selected);\n        this.touch();\n    },\n\n    invert_point: function(pixel) {\n        if(pixel === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return;\n        }\n\n        var x_scale = this.scales.x;\n        var index = Math.min(this.bisect(this.x_pixels, pixel),\n          Math.max((this.x_pixels.length - 1), 0));\n        this.model.set(\"selected\", [index]);\n        this.touch();\n    },\n\n    update_multi_range: function(brush_extent) {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        var x_start = brush_extent[0];\n        var x_end = brush_extent[1];\n\n        var data = this.model.x_data[0] instanceof Array ?\n            this.model.x_data[0] : this.model.x_data;\n        var idx_start = this.bisect(data, x_start);\n        var idx_end = Math.min(this.bisect(data, x_end),\n            Math.max((data.length - 1), 0));\n\n        this.selector_model.set(\"selected\", [idx_start, idx_end]);\n        this.selector.touch();\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        var curve_labels = this.model.get_labels();\n        var legend_data = this.model.mark_data.map(function(d) {\n            return {index: d.index, name: d.name, color: d.color};\n        });\n        this.legend_el = elem.selectAll(\".legend\" + this.uuid)\n          .data(legend_data);\n\n        var that = this,\n            rect_dim = inter_y_disp * 0.8,\n            fill_colors = this.model.get(\"fill_colors\"),\n            opacities = this.model.get(\"opacities\");\n\n        this.legend_line = d3.svg.line()\n            .interpolate(this.model.get(\"interpolation\"))\n            .x(function(d) { return d[0]; })\n            .y(function(d) { return d[1]; });\n\n        this.legend_path_data = [[0, rect_dim],\n                                 [rect_dim / 2, 0],\n                                 [rect_dim, rect_dim / 2]];\n\n        var legend = this.legend_el.enter()\n          .append(\"g\")\n            .attr(\"class\", \"legend\" + this.uuid)\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp)  + \")\";\n            })\n            .on(\"mouseover\", _.bind(function() {\n               this.event_dispatcher(\"legend_mouse_over\");\n            }, this))\n            .on(\"mouseout\", _.bind(function() {\n               this.event_dispatcher(\"legend_mouse_out\");\n            }, this))\n            .on(\"click\", _.bind(function() {\n               this.event_dispatcher(\"legend_clicked\");\n            }, this));\n\n        legend.append(\"path\")\n            .attr(\"class\", \"line\")\n            .attr(\"fill\", \"none\")\n            .attr(\"d\", this.legend_line(this.legend_path_data) + this.path_closure())\n            .style(\"stroke\", function(d, i) {\n                return that.get_element_color(d, i) || fill_colors[i];\n            })\n            .style(\"fill\", function(d, i) {\n                return that.model.get(\"fill\") === \"none\" ?\n                    \"\" : that.get_fill_color(d, i);\n            })\n            .style(\"opacity\", function(d, i) { return opacities[i]; })\n            .style(\"stroke-width\", this.model.get(\"stroke_width\"))\n            .style(\"stroke-dasharray\", _.bind(this.get_line_style, this));\n\n        if (this.model.get(\"marker\")) {\n            legend.append(\"path\")\n                .attr(\"class\", \"dot\")\n                .attr(\"transform\", \"translate(\" + rect_dim / 2 + \",0)\")\n                .attr(\"d\", that.dot.size(25))\n                .style(\"fill\", function(d, i) { return that.get_element_color(d, i); });\n        }\n\n        this.legend_el.append(\"text\")\n          .attr(\"class\", \"legendtext\")\n          .attr(\"x\", rect_dim * 1.2)\n          .attr(\"y\", rect_dim / 2)\n          .attr(\"dy\", \"0.35em\")\n          .text(function(d, i) { return curve_labels[i]; })\n          .style(\"fill\", function(d, i) {\n              return that.get_element_color(d, i) || fill_colors[i];\n          })\n          .style(\"opacity\", function(d, i) { return opacities[i]; });\n\n        var max_length = d3.max(curve_labels, function(d) {\n            return d.length;\n        });\n        this.legend_el.exit().remove();\n        return [this.model.mark_data.length, max_length];\n    },\n\n    update_curves_subset: function() {\n        var display_labels = this.model.get(\"labels_visibility\") === \"label\";\n        // Show a subset of the curves\n        var curves_subset = this.model.get(\"curves_subset\");\n        if (curves_subset.length > 0) {\n            this.d3el.selectAll(\".curve\")\n              .attr(\"display\", function(d, i) {\n                  return curves_subset.indexOf(i) !== -1 ?\n                      \"inline\" : \"none\";\n              })\n              .select(\".curve_label\")\n              .attr(\"display\", function(d, i) {\n                  return (curves_subset.indexOf(i) !== -1 && display_labels) ?\n                      \"inline\" : \"none\";\n              });\n            if (this.legend_el) {\n                this.legend_el\n                  .attr(\"display\", function(d, i) {\n                      return curves_subset.indexOf(i) !== -1 ?\n                          \"inline\" : \"none\";\n                  });\n            }\n            this.d3el.selectAll(\".curve\")\n\n        } else { //make all curves visible\n            this.d3el.selectAll(\".curve\")\n              .attr(\"display\", \"inline\")\n              .select(\".curve_label\")\n              .attr(\"display\", function(d) {\n                  return display_labels ? \"inline\" : \"none\";\n              });\n            if (this.legend_el) {\n                this.legend_el.attr(\"display\", \"inline\");\n            }\n        }\n    },\n\n    update_fill: function() {\n        var fill = this.model.get(\"fill\"),\n            area = (fill === \"top\" || fill === \"bottom\" || fill === \"between\");\n\n        var y_scale = this.scales.y;\n\n        this.area.defined(function(d) { return area && d.y !== null && isFinite(y_scale.scale(d.y)); });\n        if (fill == \"bottom\") {\n            this.area.y0(this.parent.plotarea_height);\n        } else if (fill == \"top\") {\n            this.area.y0(0)\n        } else if (fill == \"between\") {\n            this.area.y0(function(d) { return y_scale.scale(d.y0) + y_scale.offset; })\n        }\n        var that = this;\n        this.d3el.selectAll(\".curve\").select(\".area\")\n          .attr(\"d\", function(d) {\n              return that.area(d.values);\n          })\n        this.d3el.selectAll(\".curve\").select(\".line\")\n          .style(\"fill\", function(d, i) {\n              return fill === \"inside\" ? that.get_fill_color(d, i) : \"\";\n          })\n        // update legend fill\n        if (this.legend_el) {\n           this.legend_el.select(\"path\")\n             .style(\"fill\", function(d, i) {\n                 return fill === \"none\" ? \"\" : that.get_fill_color(d, i);\n             })\n        }\n    },\n\n    get_element_color: function(data, index) {\n        var color_scale = this.scales.color;\n        if(color_scale && data.color !== undefined && data.color !== null) {\n            return color_scale.scale(data.color);\n        }\n        return this.get_colors(index);\n    },\n\n    get_fill_color: function(data, index) {\n        var fill_colors = this.model.get(\"fill_colors\");\n        var that = this;\n        return fill_colors.length === 0 ?\n            that.get_element_color(data, index) : fill_colors[index];\n    },\n\n    update_line_xy: function(animate) {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n        this.line\n          .x(function(d) { return x_scale.scale(d.x) + x_scale.offset; })\n          .y(function(d) { return y_scale.scale(d.y) + y_scale.offset; })\n\n        var fill = this.model.get(\"fill\");\n        this.area\n          .x(function(d) { return x_scale.scale(d.x) + x_scale.offset; })\n          .y1(function(d) { return y_scale.scale(d.y) + y_scale.offset; })\n        \n        if (fill == \"bottom\") {\n            this.area.y0(this.parent.plotarea_height);\n        } else if (fill == \"top\") {\n            this.area.y0(0)\n        } else if (fill == \"between\") {\n            this.area.y0(function(d) { return y_scale.scale(d.y0) + y_scale.offset; })\n        }\n\n        var that = this;\n        var curves_sel = this.d3el.selectAll(\".curve\");\n\n        curves_sel.select(\".line\")\n          .transition(\"update_line_xy\")\n          .duration(animation_duration)\n          .attr(\"d\", function(d) {\n              return that.line(d.values) + that.path_closure();\n          });\n\n        curves_sel.select(\".area\")\n          .transition(\"update_line_xy\")\n          .duration(animation_duration)\n          .attr(\"d\", function(d, i) {\n            return that.area(d.values);\n        });\n\n\n        curves_sel.select(\".curve_label\")\n          .transition(\"update_line_xy\")\n          .duration(animation_duration)\n          .attr(\"transform\", function(d) {\n              var last_xy = d.values[d.values.length - 1];\n              return \"translate(\" + x_scale.scale(last_xy.x) +\n                              \",\" + y_scale.scale(last_xy.y) + \")\";\n          });\n\n        this.update_dots_xy(animate);\n        this.x_pixels = (this.model.mark_data.length > 0) ? this.model.mark_data[0].values.map(function(el)\n                                                                    { return x_scale.scale(el.x) + x_scale.offset; })\n                                                          : [];\n        this.y_pixels = (this.model.mark_data.length > 0) ? this.model.mark_data[0].values.map(function(el)\n                                                                    { return y_scale.scale(el.y) + y_scale.offset; })\n                                                          : [];\n        this.pixel_coords = (this.model.mark_data.length > 0) ?\n            this.model.mark_data[0].values.map(function(el) {\n                return [x_scale.scale(el.x) + x_scale.offset, y_scale.scale(el.y) + y_scale.offset];\n            }) : [];\n    },\n\n    draw: function(animate) {\n        this.set_ranges();\n        var curves_sel = this.d3el.selectAll(\".curve\")\n          .data(this.model.mark_data);\n\n        var y_scale = this.scales.y;\n\n        var new_curves = curves_sel.enter().append(\"g\")\n          .attr(\"class\", \"curve\");\n        new_curves.append(\"path\")\n          .attr(\"class\", \"line\")\n          .attr(\"fill\", \"none\");\n        new_curves.append(\"path\")\n          .attr(\"class\", \"area\");\n        new_curves.append(\"text\")\n          .attr(\"class\", \"curve_label\")\n          .attr(\"x\", 3)\n          .attr(\"dy\", \".35em\")\n          .attr(\"display\", this.model.get(\"labels_visibility\") !== \"label\" ?\n                \"none\" : \"inline\")\n          .text(function(d) { return d.name; });\n\n        var fill = this.model.get(\"fill\"),\n            area = (fill === \"top\" || fill === \"bottom\" || fill === \"between\");\n        var that = this;\n        curves_sel.select(\".line\")\n          .attr(\"id\", function(d, i) { return \"curve\" + (i+1); })\n          .on(\"click\", _.bind(function() {\n              this.event_dispatcher(\"element_clicked\");\n          }, this));\n\n        this.draw_dots();\n\n        this.line = d3.svg.line()\n          .interpolate(this.model.get(\"interpolation\"))\n          .defined(function(d) { return d.y !== null && isFinite(y_scale.scale(d.y)); });\n\n        this.area = d3.svg.area()\n          .interpolate(this.model.get(\"interpolation\"))\n          .defined(function(d) { return area && d.y !== null && isFinite(y_scale.scale(d.y)); });\n\n        // Having a transition on exit is complicated. Please refer to\n        // Scatter.js for detailed explanation.\n        curves_sel.exit().remove();\n        this.update_line_xy(animate);\n        this.update_style();\n\n        // alter the display only if a few of the curves are visible\n        this.update_curves_subset();\n    },\n\n    draw_dots: function() {\n        if (this.model.get(\"marker\")) {\n            var that = this;\n            var dots = this.d3el.selectAll(\".curve\").selectAll(\".dot\")\n                .data(function(d, i) {\n                    return d.values.map(function(e) {\n                        return {x: e.x, y: e.y, sub_index: e.sub_index}; });\n                });\n            dots.enter().append(\"path\").attr(\"class\", \"dot\");\n            dots.exit().remove();\n        }\n    },\n\n    update_dots_xy: function(animate) {\n        if (this.model.get(\"marker\")) {\n            var that = this;\n            var x_scale = this.scales.x, y_scale = this.scales.y;\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n            var dots = this.d3el.selectAll(\".curve\").selectAll(\".dot\");\n\n            dots.transition(\"update_dots_xy\").duration(animation_duration)\n                .attr(\"transform\", function(d) { return \"translate(\" + (x_scale.scale(d.x) + x_scale.offset) +\n                        \",\" + (y_scale.scale(d.y) + y_scale.offset) + \")\";\n                })\n                .attr(\"d\", this.dot.size(this.model.get(\"marker_size\"))\n                               .type(this.model.get(\"marker\")));\n        }\n    },\n\n    compute_view_padding: function() {\n        //This function sets the padding for the view through the variables\n        //x_padding and y_padding which are view specific paddings in pixel\n        var x_padding;\n        if (this.model.get(\"marker\")) {\n            var marker_padding = Math.sqrt(this.model.get(\"marker_size\")) / 2 + 1.0;\n            var line_padding = this.model.get(\"stroke_width\") / 2.0;\n            x_padding = Math.max(marker_padding, line_padding);\n        } else {\n            x_padding = this.model.get(\"stroke_width\") / 2.0;\n        }\n\n        var y_padding = x_padding;\n        if(x_padding !== this.x_padding || y_padding !== this.y_padding) {\n            this.x_padding = x_padding;\n            this.y_padding = y_padding;\n            this.trigger(\"mark_padding_updated\");\n        }\n    },\n\n    update_marker_style: function() {\n        var that = this;\n        var fill_color = this.model.get(\"fill_colors\");\n        var opacities = this.model.get(\"opacities\");\n        this.d3el.selectAll(\".curve\").each(function(d, i) {\n            var curve = d3.select(this);\n            curve.selectAll(\".dot\")\n                .style(\"opacity\", opacities[i])\n                .style(\"fill\", that.get_element_color(d, i) || fill_color[i]);\n        });\n    },\n\n    update_marker: function(model, marker) {\n        if (marker) {\n            this.draw_dots();\n            this.update_dots_xy();\n            this.update_marker_style();\n            if (this.legend_el) {\n                this.legend_el.select(\".dot\").attr(\"d\", this.dot.type(marker).size(25));\n            }\n        } else {\n            this.d3el.selectAll(\".dot\").remove();\n            if (this.legend_el) {\n                this.legend_el.select(\".dot\").attr(\"d\", this.dot.size(0));\n            }\n        }\n    },\n\n    update_marker_size: function(model, marker_size) {\n        this.compute_view_padding();\n        this.d3el.selectAll(\".dot\").attr(\"d\", this.dot.size(marker_size));\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        } else {\n            if(interactions.click !== undefined &&\n              interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n            if(interactions.legend_hover !== undefined &&\n              interactions.legend_hover !== null) {\n                if(interactions.legend_hover === \"highlight_axes\") {\n                    this.event_listeners.legend_mouse_over = _.bind(this.highlight_axes, this);\n                    this.event_listeners.legend_mouse_out = _.bind(this.unhighlight_axes, this);\n                }\n            } else {\n                this.reset_legend_hover();\n            }\n        }\n    }\n});\n\nmodule.exports = {\n    Lines: Lines\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar popperreference = require(\"./PopperReference\");\nvar popper = require(\"popper.js\");\n\nif (popper.__esModule) {\n    popper = popper.default;\n}\n\nvar Figure = widgets.DOMWidgetView.extend({\n\n    initialize : function() {\n        // Internet Explorer does not support classList for svg elements\n        this.el.classList.add(\"bqplot\");\n        this.el.classList.add(\"figure\");\n        this.el.classList.add(\"jupyter-widgets\");\n\n        var svg = document.createElementNS(d3.ns.prefix.svg, \"svg\");\n        this.el.appendChild(svg);\n        this.svg = d3.select(svg);\n        Figure.__super__.initialize.apply(this, arguments);\n    },\n\n    _get_height_width: function(suggested_height, suggested_width) {\n        //Calculates the height and width of the figure from the suggested_height\n        //and suggested_width. Looks at the min_aspect_ratio and max_aspect_ratio\n        //to determine the final height and width.\n\n        var max_ratio = this.model.get(\"max_aspect_ratio\");\n        var min_ratio = this.model.get(\"min_aspect_ratio\");\n\n        var return_value = {};\n        var width_undefined = (suggested_width === undefined || isNaN(suggested_width) || suggested_width <= 0);\n        var height_undefined = (suggested_height === undefined || isNaN(suggested_height) || suggested_width <= 0);\n\n        if (width_undefined && height_undefined) {\n            // Same as the defaults in bqplot.less\n            suggested_height = 480;\n            suggested_width = 640;\n        } else if (height_undefined) {\n            suggested_height = suggested_width / min_ratio;\n        } else if (width_undefined) {\n            suggested_width = suggested_height * min_ratio;\n        }\n\n        var ratio = suggested_width / suggested_height;\n        if (ratio <= max_ratio && ratio >= min_ratio) {\n            // If the available width and height are within bounds in terms\n            // of aspect ration, use all the space available.\n            return_value[\"width\"] = suggested_width;\n            return_value[\"height\"] = suggested_height;\n        } else if (ratio > max_ratio) {\n            // The available space is too oblong horizontally.\n            // Use all vertical space and compute width based on maximum\n            // aspect ratio.\n            return_value[\"height\"] = suggested_height;\n            return_value[\"width\"] = suggested_height * max_ratio;\n         } else { // ratio < min_ratio\n            // The available space is too oblong vertically.\n            // Use all horizontal space and compute height based on minimum\n            // aspect ratio.\n            return_value[\"width\"] = suggested_width;\n            return_value[\"height\"] = suggested_width / min_ratio;\n        }\n        return return_value;\n    },\n\n    render : function() {\n        var min_width = String(this.model.get(\"layout\").get(\"min_width\"));\n        var min_height = String(this.model.get(\"layout\").get(\"min_height\"));\n\n        var impl_dimensions = this._get_height_width(min_height.slice(0, -2), min_width.slice(0, -2));\n        this.width = impl_dimensions[\"width\"];\n        this.height = impl_dimensions[\"height\"];\n\n        this.id = widgets.uuid();\n\n        // Dictionary which contains the mapping for each of the marks id\n        // to it's padding. Dictionary is required to not recompute\n        // everything when a mark is removed.\n        this.x_pad_dict = {};\n        this.y_pad_dict = {};\n\n        // this is the net padding in pixel to be applied to the x and y.\n        // If there is no restriction on the plottable area of the figure,\n        // then these two variables are the maximum of the values in the\n        // corresponding variables x_pad_dict, y_pad_dict.\n        this.x_padding_arr = {};\n        this.y_padding_arr = {};\n\n        this.figure_padding_x = this.model.get(\"padding_x\");\n        this.figure_padding_y = this.model.get(\"padding_y\");\n        this.clip_id = \"clip_path_\" + this.id;\n        this.margin = this.model.get(\"fig_margin\");\n\n        this.update_plotarea_dimensions();\n        // this.fig is the top <g> element to be impacted by a rescaling / change of margins\n\n        this.fig = this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n        this.tooltip_div = d3.select(document.createElement(\"div\"))\n            .attr(\"class\", \"tooltip_div\");\n        this.popper_reference = new popperreference.PositionReference({x: 0, y: 0, width: 20, height: 20});\n        this.popper = new popper(this.popper_reference, this.tooltip_div.node(), {\n            placement: 'auto',\n        });\n\n        this.bg = this.fig.append(\"rect\")\n          .attr(\"class\", \"plotarea_background\")\n          .attr(\"x\", 0).attr(\"y\", 0)\n          .attr(\"width\", this.plotarea_width)\n          .attr(\"height\", this.plotarea_height)\n          .on(\"click\", function() { that.trigger(\"bg_clicked\"); })\n          .style(\"pointer-events\", \"inherit\")\n          .style(this.model.get(\"background_style\"));\n\n        this.fig_axes = this.fig.append(\"g\");\n        this.fig_marks = this.fig.append(\"g\");\n        this.interaction = this.fig.append(\"g\");\n\n        /*\n         * The following is the structure of the DOM element constructed\n         *\n        <div class=\"bqplot figure jupyter-widgets\">\n            <svg>\n                <g class=\"svg-figure\" transform=\"margin translation\">\n                    <g class=\"svg-axes\"></g>\n                    <g class=\"svg-marks\"></g>\n                    <g class=\"svg-interaction\"></g>\n                </g>\n            </svg>\n        </div>\n        */\n\n        this.clip_path = this.svg.append(\"svg:defs\")\n          .append(\"svg:clipPath\")\n          .attr(\"id\", this.clip_id)\n          .append(\"rect\")\n          .attr(\"x\", 0)\n          .attr(\"y\", 0)\n          .attr(\"width\", this.plotarea_width)\n          .attr(\"height\", this.plotarea_height);\n\n        this.title = this.fig.append(\"text\")\n          .attr(\"class\", \"mainheading\")\n          .attr({x: (0.5 * (this.plotarea_width)), y: -(this.margin.top / 2.0), dy: \"1em\"})\n          .text(this.model.get(\"title\"))\n          .style(this.model.get(\"title_style\"));\n\n        // TODO: remove the save png event mechanism.\n        this.model.on(\"save_png\", this.save_png, this);\n        this.model.on(\"save_svg\", this.save_svg, this);\n\n        var figure_scale_promise = this.create_figure_scales();\n        var that = this;\n        figure_scale_promise.then(function() {\n            that.mark_views = new widgets.ViewList(that.add_mark, that.remove_mark, that);\n            that.mark_views.update(that.model.get(\"marks\"));\n            Promise.all(that.mark_views.views).then(function(views) {\n                that.replace_dummy_nodes(views);\n                that.update_marks(views);\n                that.update_legend();\n                // Update Interaction layer\n                // This has to be done after the marks are created\n                that.set_interaction(that.model.get(\"interaction\"));\n            });\n\n            that.axis_views = new widgets.ViewList(that.add_axis, null, that);\n            that.axis_views.update(that.model.get(\"axes\"));\n\n            // TODO: move to the model\n            that.model.on_some_change([\"fig_margin\", \"min_aspect_ration\", \"max_aspect_ratio\", \"preserve_aspect\"], that.relayout, that);\n            that.model.on_some_change([\"padding_x\", \"padding_y\"], function() {\n                this.figure_padding_x = this.model.get(\"padding_x\");\n                this.figure_padding_y = this.model.get(\"padding_y\");\n                this.trigger(\"margin_updated\");\n            }, that);\n            that.model.on(\"change:axes\", function(model, value, options) {\n                this.axis_views.update(value);\n            }, that);\n            that.model.on(\"change:marks\", function(model, value, options) {\n                this.mark_views.update(value);\n                Promise.all(this.mark_views.views).then(function(views) {\n                    that.replace_dummy_nodes(views);\n                    that.update_marks(views);\n                    that.update_legend();\n                });\n            }, that);\n            that.model.on(\"change:legend_location\", that.update_legend, that);\n            that.model.on(\"change:title\", that.update_title, that);\n\n            that.model.on(\"change:interaction\", function(model, value) {\n                this.set_interaction(value);\n            }, that);\n\n            that.displayed.then(function(args) {\n                document.body.appendChild(that.tooltip_div.node());\n                that.create_listeners();\n                if(args === undefined || args.add_to_dom_only !== true) {\n                    //do not relayout if it is only being added to the DOM\n                    //and not displayed.\n                    that.relayout();\n                }\n                // In the classic notebook, we should relayout the figure on\n                // resize of the main window.\n                window.addEventListener('resize', function() {\n                    that.relayout();\n                })\n            });\n        });\n    },\n\n    replace_dummy_nodes: function(views) {\n        _.each(views, function(view) {\n            if (view.dummy_node !== null) {\n                view.dummy_node.parentNode.replaceChild(view.el, view.dummy_node);\n                view.dummy_node = null;\n                this.displayed.then(function() {\n                    view.trigger(\"displayed\");\n                });\n            }\n        }, this);\n    },\n\n    create_listeners: function() {\n        this.listenTo(this.model, \"change:title_style\", this.title_style_updated, this);\n        this.listenTo(this.model, \"change:background_style\", this.background_style_updated, this);\n        this.listenTo(this.model, \"change:layout\", this.change_layout, this);\n        this.listenTo(this.model, \"change:legend_style\", this.legend_style_updated, this);\n        this.listenTo(this.model, \"change:legend_text\", this.legend_text_updated, this);\n    },\n\n    title_style_updated: function() {\n        this.title.style(this.model.get(\"title_style\"));\n    },\n\n    background_style_updated: function() {\n        this.bg.style(this.model.get(\"background_style\"));\n    },\n\n    legend_style_updated: function() {\n        this.fig_marks.selectAll(\".g_legend\").selectAll(\".axis\").selectAll(\"rect\")\n            .style(this.model.get(\"legend_style\"));\n    },\n\n    legend_text_updated: function() {\n        this.fig_marks.selectAll(\".g_legend\").selectAll(\"text.legendtext\")\n            .style(this.model.get(\"legend_text\"));\n    },\n\n    create_figure_scales: function() {\n        // Creates the absolute scales for the figure: default domain is [0,1], range is [0,width] and [0,height].\n        // See the scale_x and scale_y attributes of the python Figure\n        var that = this;\n        var x_scale_promise = this.create_child_view(this.model.get(\"scale_x\"))\n            .then(function(view) {\n                that.scale_x = view;\n                that.scale_x.scale.clamp(true);\n                that.scale_x.set_range([0, that.plotarea_width]);\n            });\n\n        var y_scale_promise = this.create_child_view(this.model.get(\"scale_y\"))\n            .then(function(view) {\n                that.scale_y = view;\n                that.scale_y.scale.clamp(true);\n                that.scale_y.set_range([that.plotarea_height, 0]);\n            });\n        return Promise.all([x_scale_promise, y_scale_promise]);\n    },\n\n    padded_range: function(direction, scale_model) {\n        // Functions to be called by mark which respects padding.\n        // Typically all marks do this. Axis do not do this.\n        // Also, if a mark does not set the domain, it can potentially call\n        // the unpadded ranges.\n        var scale_padding, fig_padding;\n        if(!scale_model.get(\"allow_padding\")) {\n            return this.range(direction);\n        }\n        var scale_id = scale_model.model_id;\n\n        if(direction===\"x\") {\n            scale_padding = (this.x_padding_arr[scale_id] !== undefined) ?\n                this.x_padding_arr[scale_id] : 0;\n            fig_padding = (this.plotarea_width) * this.figure_padding_x;\n            return [(fig_padding + scale_padding), (this.plotarea_width - fig_padding - scale_padding)];\n        } else if(direction===\"y\") {\n            scale_padding = (this.y_padding_arr[scale_id] !== undefined) ?\n                this.y_padding_arr[scale_id] : 0;\n            fig_padding = (this.plotarea_height) * this.figure_padding_y;\n            return [this.plotarea_height - scale_padding - fig_padding, scale_padding + fig_padding];\n        }\n    },\n\n    range: function(direction) {\n        if(direction===\"x\") {\n            return [0, this.plotarea_width];\n        } else if(direction===\"y\") {\n            return [this.plotarea_height, 0];\n        }\n    },\n\n    get_mark_plotarea_height: function(scale_model) {\n        if(!(scale_model.get(\"allow_padding\"))) {\n            return this.plotarea_height;\n        }\n        var scale_id = scale_model.model_id;\n        var scale_padding = (this.y_padding_arr[scale_id] !== undefined) ?\n            this.y_padding_arr[scale_id] : 0;\n        return (this.plotarea_height) * (1 - this.figure_padding_y) - scale_padding - scale_padding;\n    },\n\n    get_mark_plotarea_width: function (scale_model) {\n        if(!(scale_model.get(\"allow_padding\"))) {\n            return this.plotarea_width;\n        }\n\n        var scale_id = scale_model.model_id;\n        var scale_padding = (this.x_padding_arr[scale_id] !== undefined) ?\n            this.x_padding_arr[scale_id] : 0;\n        return (this.plotarea_width) * (1 - this.figure_padding_x) - scale_padding - scale_padding;\n    },\n\n    add_axis: function(model) {\n        // Called when an axis is added to the axes list.\n        var that = this;\n        return this.create_child_view(model)\n          .then(function(view) {\n            that.fig_axes.node().appendChild(view.el);\n            that.displayed.then(function() {\n                view.trigger(\"displayed\");\n            });\n            return view;\n        });\n    },\n\n    remove_from_padding_dict: function(dict, mark_view, scale_model) {\n        if(scale_model === undefined || scale_model === null) {\n            return;\n        }\n        var scale_id = scale_model.model_id;\n        if(dict[scale_id] !== undefined) {\n            delete dict[scale_id][mark_view.model.model_id + \"_\" + mark_view.cid];\n            if(Object.keys(dict[scale_id]).length === 0) {\n                delete dict[scale_id];\n            }\n        }\n    },\n\n    update_padding_dict: function(dict, mark_view, scale_model, value) {\n        var scale_id = scale_model.model_id;\n        if(!(dict[scale_id])) {\n            dict[scale_id]= {};\n        }\n        dict[scale_id][mark_view.model.model_id + \"_\" + mark_view.cid] = value;\n    },\n\n    mark_scales_updated: function(view) {\n        var model = view.model;\n        var prev_scale_models = model.previous(\"scales\");\n        this.remove_from_padding_dict(this.x_pad_dict, view, prev_scale_models[model.get_key_for_orientation(\"horizontal\")]);\n        this.remove_from_padding_dict(this.y_pad_dict, view, prev_scale_models[model.get_key_for_orientation(\"vertical\")]);\n\n        var scale_models = model.get(\"scales\");\n        this.update_padding_dict(this.x_pad_dict, view, scale_models[model.get_key_for_orientation(\"horizontal\")], view.x_padding);\n        this.update_padding_dict(this.y_pad_dict, view, scale_models[model.get_key_for_orientation(\"vertical\")], view.y_padding);\n\n        this.update_paddings();\n    },\n\n    mark_padding_updated: function(view) {\n        var model = view.model;\n        var scale_models = model.get(\"scales\");\n\n        this.update_padding_dict(this.x_pad_dict, view, scale_models[model.get_key_for_orientation(\"horizontal\")], view.x_padding);\n        this.update_padding_dict(this.y_pad_dict, view, scale_models[model.get_key_for_orientation(\"vertical\")], view.y_padding);\n\n        this.update_paddings();\n    },\n\n    update_marks: function(mark_views) {\n        this.update_paddings();\n    },\n\n    remove_mark: function(view) {\n       // Called when a mark is removed from the mark list.\n        var model = view.model;\n        model.off(\"redraw_legend\", null, this);\n        model.off(\"data_updated\", null, this);\n        model.off(\"scales_updated\", null, this);\n        model.off(\"mark_padding_updated\", null, this);\n\n        var scale_models = model.get(\"scales\");\n        this.remove_from_padding_dict(this.x_pad_dict, view, scale_models[model.get_key_for_orientation(\"horizontal\")]);\n        this.remove_from_padding_dict(this.y_pad_dict, view, scale_models[model.get_key_for_orientation(\"vertical\")]);\n        view.remove();\n    },\n\n    add_mark: function(model) {\n        var that = this;\n        model.state_change.then(function() {\n            model.on(\"data_updated redraw_legend\", that.update_legend, that);\n        });\n\n        var dummy_node = that.fig_marks.node().appendChild(document.createElementNS(d3.ns.prefix.svg, \"g\"));\n\n        return that.create_child_view(model, {clip_id: that.clip_id}).then(function(view) {\n            view.dummy_node = dummy_node;\n            view.on(\"mark_padding_updated\", function() {\n                that.mark_padding_updated(view);\n            }, that);\n            view.on(\"mark_scales_updated\", function() {\n                that.mark_scales_updated(view);\n            }, that);\n            var child_x_scale = view.model.get(\"scales\")[view.model.get_key_for_dimension(\"x\")];\n            var child_y_scale = view.model.get(\"scales\")[view.model.get_key_for_dimension(\"y\")];\n            if(child_x_scale === undefined) {\n                child_x_scale = that.scale_x.model;\n            }\n            if(child_y_scale === undefined) {\n                child_y_scale = that.scale_y.model;\n            }\n            that.update_padding_dict(that.x_pad_dict, view, child_x_scale, view.x_padding);\n            that.update_padding_dict(that.y_pad_dict, view, child_y_scale, view.y_padding);\n\n            return view;\n        });\n    },\n\n    update_paddings: function() {\n        // Iterate over the paddings of the marks for each scale and store\n        // the maximum padding for each scale on the X and Y in\n        // x_padding_arr and y_padding_arr\n        var max = 0; // ok padding cannot be negative\n\n        this.x_padding_arr = {};\n        this.y_padding_arr = {};\n\n        var that = this;\n        _.forEach(this.x_pad_dict, function(dict, scale_id) {\n            max = 0;\n            _.forEach(dict, function(value, key) {\n                max = Math.max(max, value);\n            });\n            that.x_padding_arr[scale_id] = max;\n        });\n\n        _.forEach(this.y_pad_dict, function(dict, scale_id) {\n            max = 0;\n            _.forEach(dict, function(value, key) {\n                max = Math.max(max, value);\n            });\n            that.y_padding_arr[scale_id] = max;\n        });\n        // This is for the figure to relayout everything to account for the\n        // updated margins.\n        this.trigger(\"margin_updated\");\n\n    },\n\n    update_plotarea_dimensions: function() {\n        this.plotarea_width = this.width - this.margin.left - this.margin.right;\n        this.plotarea_height = this.height - this.margin.top - this.margin.bottom;\n    },\n\n    processPhosphorMessage: function(msg) {\n        Figure.__super__.processPhosphorMessage.apply(this, arguments);\n        switch (msg.type) {\n        case 'resize':\n        case 'after-show':\n            this.relayout();\n            break;\n        }\n    },\n\n    relayout: function() {\n\n        var that = this;\n\n        var impl_dimensions = this._get_height_width(this.el.clientHeight, this.el.clientWidth);\n        that.width = impl_dimensions[\"width\"];\n        that.height = impl_dimensions[\"height\"];\n\n        window.requestAnimationFrame(function () {\n            // update ranges\n            that.margin = that.model.get(\"fig_margin\");\n            that.update_plotarea_dimensions();\n\n            if (that.scale_x !== undefined && that.scale_x !== null) {\n                that.scale_x.set_range([0, that.plotarea_width]);\n            }\n\n\n            if (that.scale_y !== undefined && that.scale_y !== null) {\n                that.scale_y.set_range([that.plotarea_height, 0]);\n            }\n\n            // transform figure\n            that.fig.attr(\"transform\", \"translate(\" + that.margin.left + \",\" +\n                                                      that.margin.top + \")\");\n            that.title.attr({\n                x: (0.5 * (that.plotarea_width)),\n                y: -(that.margin.top / 2.0),\n                dy: \"1em\"\n            });\n\n            that.bg\n                .attr(\"width\", that.plotarea_width)\n                .attr(\"height\", that.plotarea_height);\n\n\n            that.clip_path.attr(\"width\", that.plotarea_width)\n                .attr(\"height\", that.plotarea_height);\n\n            that.trigger(\"margin_updated\");\n            that.update_legend();\n        });\n\n    },\n\n    update_legend: function() {\n        this.fig_marks.selectAll(\".g_legend\").remove();\n\n        var num_series = this.model.get(\"marks\").length;\n        var legend_disp = 30 + num_series * 7;\n        var legend_height = 14;\n        var legend_width = 24;\n        var legend_location = this.model.get(\"legend_location\");\n\n        var legend_g = this.fig_marks.append(\"g\")\n          .attr(\"class\", \"g_legend\");\n\n        var that = this;\n        var count = 1;\n        var max_label_len = 1;\n\n        if(this.mark_views !== undefined && this.mark_views !== null) {\n            Promise.all(this.mark_views.views).then(function(views) {\n                views.forEach(function(mark_view) {\n                    if(mark_view.model.get(\"display_legend\")) {\n                        var child_count = mark_view.draw_legend(legend_g, 0, count * (legend_height + 2), 0, legend_height + 2);\n                        count = count + child_count[0];\n                        max_label_len = (child_count[1]) ?\n                            Math.max(max_label_len, child_count[1]) : max_label_len;\n                    }\n                });\n\n                var coords = that.get_legend_coords(legend_location, legend_width, (count + 1) * (legend_height + 2), 0);\n                if(count !== 1) {\n                    legend_g.insert(\"g\", \":first-child\")\n                      .attr(\"class\", \"axis\")\n                    .append(\"rect\")\n                      .attr({\"y\": (legend_height + 2) / 2.0,\n                             \"x\": (-0.5 * (legend_height + 2))})\n                      .attr(\"width\", (max_label_len + 2) + \"em\")\n                      .attr(\"height\", (count * (legend_height + 2)));\n\n                }\n                max_label_len = (legend_location === \"top-right\" ||\n                                 legend_location === \"right\" ||\n                                 legend_location === \"bottom-right\") ? -(max_label_len + 2) : 1;\n                var em = 16;\n                legend_g.attr(\"transform\", \"translate(\" + String(coords[0] + max_label_len * em) + \" \" +\n                                                          String(coords[1]) + \") \");\n\n                legend_g.selectAll(\"text.legendtext\").style(that.model.get(\"legend_text\"));\n\n                legend_g.selectAll(\".axis\").selectAll(\"rect\").style(that.model.get(\"legend_style\"));\n\n            });\n        }\n    },\n\n    get_legend_coords: function(legend_location, width, height, disp) {\n        var x_start = 0;\n        var y_start = 0;\n        var fig_width = this.plotarea_width;\n        var fig_height = this.plotarea_height;\n\n        switch (legend_location){\n            case \"top\":\n                x_start = fig_width * 0.5 - width;\n                y_start = 0;\n                break;\n            case \"top-right\":\n                x_start = fig_width - disp;\n                y_start = 0;\n                break;\n            case \"right\":\n                x_start = fig_width - disp;\n                y_start = fig_height* 0.5 - height;\n                break;\n            case \"bottom-right\":\n                x_start = fig_width - disp;\n                y_start = fig_height - height;\n                break;\n            case \"bottom\":\n                x_start = fig_width * 0.5 - width;\n                y_start = fig_height - height;\n                break;\n            case \"bottom-left\":\n                x_start = 0;\n                y_start = fig_height - height;\n                break;\n            case \"left\":\n                x_start = 0;\n                y_start = fig_height * 0.5 - height;\n                break;\n            default:\n                x_start = 0;\n                y_start = 0;\n        }\n        return [x_start, y_start];\n    },\n\n    set_interaction: function(model) {\n        if (model) {\n            // Sets the child interaction\n            var that = this;\n            model.state_change.then(function() {\n                // Sets the child interaction\n                that.create_child_view(model).then(function(view) {\n                    if (that.interaction_view) {\n                        that.interaction_view.remove();\n                    }\n                    that.interaction_view = view;\n                    that.interaction.node().appendChild(view.el);\n                    that.displayed.then(function() {\n                        view.trigger(\"displayed\");\n                    });\n                });\n            });\n        } else {\n            if (this.interaction_view) {\n                this.interaction_view.remove();\n            }\n        }\n    },\n\n    update_title: function(model, title) {\n        this.title.text(this.model.get(\"title\"));\n    },\n\n    remove: function() {\n        if(this.mark_views !== undefined && this.mark_views !== null) {\n            this.mark_views.remove();\n        }\n        if(this.axis_views !== undefined && this.axis_views !== null) {\n            this.axis_views.remove();\n        }\n        if(this.tooltip_div !== undefined) {\n            this.tooltip_div.remove();\n        }\n        return Figure.__super__.remove.apply(this, arguments);\n    },\n\n    get_svg: function() {\n        // Returns the outer html of the figure svg\n\n        var  replaceAll = function (find, replace, str) {\n            return str.replace(new RegExp(find, \"g\"), replace);\n        };\n\n        var get_css = function(node, regs) {\n            /**\n             * Gathers all the css rules applied to elements of the svg\n             * node. Removes the parent element selectors specified in\n             * argument `regs`.\n             */\n            var css = \"\";\n            var sheets = document.styleSheets;\n            var selector;\n            for (var i = 0; i < sheets.length; i++) {\n                var rules = sheets[i].cssRules;\n                if (rules) {\n                    for (var j = 0; j < rules.length; j++) {\n                        var rule = rules[j];\n                        if (typeof(rule.style) !== \"undefined\") {\n                            var match = null;\n                            try {\n                                match = node.querySelectorAll(rule.selectorText);\n                            } catch (err) {\n                                console.warn(\"Invalid CSS selector '\" +\n                                             rule.selectorText + \"'\", err);\n                            }\n                            if (match) {\n                                var elems = node.querySelectorAll(rule.selectorText);\n                                if (elems.length > 0) {\n                                    selector = rule.selectorText;\n                                    for (var r = 0; r < regs.length; r++) {\n                                        selector = replaceAll(regs[r], \"\", selector);\n                                    }\n                                    css += selector + \" { \" + rule.style.cssText + \" }\\n\";\n                                }\n                            } else if (rule.cssText.match(/^@font-face/)) {\n                                css += rule.cssText + \"\\n\";\n                            }\n                        }\n                    }\n                }\n            }\n            // TODO: this is terrible. The previous loop over style sheets\n            // does not catch document's top-level properties.\n            css += \"svg { font-size: 10px; }\\n\";\n            return css;\n        };\n\n        var svg2svg = function(node) {\n            // Creates a standalone SVG string from an inline SVG element\n            // containing all the computed style attributes.\n            var svg = node.cloneNode(true);\n            svg.setAttribute(\"version\", \"1.1\");\n            svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n            svg.setAttribute(\"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n            svg.style.background = window.getComputedStyle(document.body).background;\n            var s = document.createElement(\"style\");\n            s.setAttribute(\"type\", \"text/css\");\n            s.innerHTML = \"<![CDATA[\\n\" +\n                get_css(node, [\"\\.theme-dark\", \"\\.theme-light\", \".bqplot > \"]) + \"\\n]]>\";\n            var defs = document.createElement(\"defs\");\n            defs.appendChild(s);\n            svg.insertBefore(defs, svg.firstChild);\n            // Getting the outer HTML\n            return svg.outerHTML;\n        };\n        // Create standalone SVG string\n        var svg = svg2svg(this.svg.node());\n        return svg;\n    },\n\n\n    save_png: function(filename, scale) {\n\n        // scale up the underlying canvas for high dpi screens\n        // such that image is of the same quality\n        scale = scale || window.devicePixelRatio;\n\n        var xml = this.get_svg();\n\n        // Render a SVG data into a canvas and download as PNG.\n        var image = new Image();\n        var that = this;\n        image.onload = function() {\n            var canvas = document.createElement(\"canvas\");\n            canvas.classList.add('bqplot');\n            canvas.width = that.width * scale;\n            canvas.height = that.height * scale;\n            canvas.style.width = this.width;\n            canvas.style.height = this.height;\n            var context = canvas.getContext(\"2d\");\n            context.scale(scale, scale);\n            context.drawImage(image, 0, 0);\n            var a = document.createElement(\"a\");\n            a.download = filename || \"bqplot.png\";\n            a.href = canvas.toDataURL(\"bqplot/png\");\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n        };\n        image.src = \"data:image/svg+xml;base64,\" + btoa(xml);\n    },\n\n\n    save_svg: function(filename) {\n\n        var xml = this.get_svg();\n\n        var a = document.createElement(\"a\");\n        a.download = filename || \"bqplot.svg\";\n        a.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(xml);\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    },\n});\n\n\nmodule.exports = {\n    Figure: Figure\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* Generated from this typescript code:\nclass ElementReference {\n    constructor(elt) {\n        this.elt = elt;\n    }\n    getBoundingClientRect() {\n        return this.elt.getBoundingClientRect();\n    }\n    get clientWidth() {\n        return this.elt.clientWidth;\n    }\n    get clientHeight() {\n        return this.elt.clientHeight;\n    }\n\n    elt: HTMLElement;\n}\n*/\n\n/**\n * A delegate reference for the popper js library\n */\nvar ElementReference = (function () {\n    function ElementReference(elt) {\n        this.elt = elt;\n    }\n    ElementReference.prototype.getBoundingClientRect = function () {\n        return this.elt.getBoundingClientRect();\n    };\n    Object.defineProperty(ElementReference.prototype, \"clientWidth\", {\n        get: function () {\n            return this.elt.clientWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ElementReference.prototype, \"clientHeight\", {\n        get: function () {\n            return this.elt.clientHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ElementReference;\n}());\n\n\n\n/* Generated from the Typescript code:\n\nclass PositionReference {\n    constructor({ x, y, width, height }) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    getBoundingClientRect() {\n        let halfwidth = this.width / 2;\n        let halfheight = this.height / 2;\n        return {\n            left: this.x - halfwidth,\n            right: this.x + halfwidth,\n            top: this.y - halfheight,\n            bottom: this.y + halfheight,\n            width: this.width,\n            height: this.height\n        }\n    }\n    get clientWidth() { return this.width; }\n    get clientHeight() { return this.height; }\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n*/\n\n/**\n * A reference for a specific position.\n */\nvar PositionReference = (function () {\n    function PositionReference(_a) {\n        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    PositionReference.prototype.getBoundingClientRect = function () {\n        var halfwidth = this.width / 2;\n        var halfheight = this.height / 2;\n        return {\n            left: this.x - halfwidth,\n            right: this.x + halfwidth,\n            top: this.y - halfheight,\n            bottom: this.y + halfheight,\n            width: this.width,\n            height: this.height\n        };\n    };\n    Object.defineProperty(PositionReference.prototype, \"clientWidth\", {\n        get: function () { return this.width; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PositionReference.prototype, \"clientHeight\", {\n        get: function () { return this.height; },\n        enumerable: true,\n        configurable: true\n    });\n    return PositionReference;\n}());\n\n\nmodule.exports = {\n    ElementReference: ElementReference,\n    PositionReference: PositionReference\n};\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.12.9\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    if (element) {\n      return element.ownerDocument.documentElement;\n    }\n\n    return document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function () {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE10$1() && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire(\"./bqplot.less\");\nmodule.exports = require('./index');\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/less-loader/dist/cjs.js!./bqplot.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/less-loader/dist/cjs.js!./bqplot.less\", function() {\n\t\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/less-loader/dist/cjs.js!./bqplot.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* Copyright 2015 Bloomberg Finance L.P.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n *     http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n.theme-light .bqplot,\\n[data-theme-light=\\\"true\\\"] .bqplot {\\n  box-sizing: border-box;\\n  display: flex;\\n  width: 640px;\\n  height: 480px;\\n}\\n.theme-light .bqplot > svg,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg {\\n  font: 11px sans-serif;\\n  user-select: none;\\n  -ms-user-select: none;\\n  -khtml-user-select: none;\\n  -webkit-user-select: none;\\n  flex-grow: 1;\\n}\\n.theme-light .bqplot > svg .axis line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis line {\\n  shape-rendering: crispEdges;\\n  font: 10px sans-serif;\\n  stroke-width: 1px;\\n}\\n.theme-light .bqplot > svg .axis path,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis path,\\n.theme-light .bqplot > svg .axis line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis line {\\n  fill: none;\\n}\\n.theme-light .bqplot > svg .axis text.axislabel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis text.axislabel,\\n.theme-light .bqplot > svg .axis tspan.axislabel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis tspan.axislabel {\\n  text-anchor: end;\\n  font: 14px sans-serif;\\n}\\n.theme-light .bqplot > svg .axis .tick text,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis .tick text {\\n  cursor: default;\\n}\\n.theme-light .bqplot > svg .axis.axisbold path,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis.axisbold path {\\n  stroke-width: 3px;\\n}\\n.theme-light .bqplot > svg .axis.axisbold text,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis.axisbold text,\\n.theme-light .bqplot > svg .axis.axisbold text.axislabel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis.axisbold text.axislabel {\\n  font-weight: bolder;\\n}\\n.theme-light .bqplot > svg text.mainheading,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg text.mainheading {\\n  text-anchor: middle;\\n  font: 16px sans-serif;\\n}\\n.theme-light .bqplot > svg .zeroLine,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .zeroLine {\\n  shape-rendering: crispEdges;\\n}\\n.theme-light .bqplot > svg .brushintsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .brushintsel,\\n.theme-light .bqplot > svg .intsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .intsel {\\n  pointer-events: none;\\n}\\n.theme-light .bqplot > svg .indsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .indsel {\\n  stroke: red;\\n}\\n.theme-light .bqplot > svg .brushintsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .brushintsel,\\n.theme-light .bqplot > svg .intsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .intsel {\\n  fill-opacity: 0.2;\\n}\\n.theme-light .bqplot > svg .intselmouse,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .intselmouse {\\n  visibility: hidden;\\n  pointer-events: all;\\n  /*none?*/\\n}\\n.theme-light .bqplot > svg text.legendtext,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg text.legendtext {\\n  text-anchor: start;\\n  font: 14px sans-serif;\\n}\\n.theme-light .bqplot > svg .multiselector .active,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .multiselector .active {\\n  pointer-events: all  !important;\\n  stroke: green;\\n}\\n.theme-light .bqplot > svg .multiselector .inactive,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .multiselector .inactive {\\n  pointer-events: none !important;\\n  stroke: red;\\n}\\n.theme-light .bqplot > svg .multiselector .visible,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .multiselector .visible {\\n  pointer-events: visible !important;\\n  stroke: red;\\n}\\n.theme-light .bqplot > svg .lassoselector .selected,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .lassoselector .selected {\\n  opacity: 0.3;\\n}\\n.theme-light .bqplot > svg .lassoselector path,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .lassoselector path {\\n  fill: none;\\n  stroke: orange;\\n  stroke-width: 4;\\n}\\n.theme-light .tooltip_div,\\n[data-theme-light=\\\"true\\\"] .tooltip_div {\\n  z-index: 1001;\\n}\\n.theme-light .mark_tooltip,\\n[data-theme-light=\\\"true\\\"] .mark_tooltip {\\n  pointer-events: none;\\n  z-index: 1001;\\n}\\n.theme-light .mark_tooltip table,\\n[data-theme-light=\\\"true\\\"] .mark_tooltip table {\\n  border-radius: 5px;\\n}\\n.theme-light .mark_tooltip .tooltiptext,\\n[data-theme-light=\\\"true\\\"] .mark_tooltip .tooltiptext {\\n  text-align: center;\\n  padding: 0.5em;\\n}\\n.theme-light .world_map .hovered,\\n[data-theme-light=\\\"true\\\"] .world_map .hovered {\\n  fill: Orange;\\n  stroke: Orange;\\n  stroke-width: 2.5px;\\n}\\n.theme-light .world_map #container,\\n[data-theme-light=\\\"true\\\"] .world_map #container {\\n  margin: 10px 10%;\\n  border: 2px solid #000;\\n  border-radius: 5px;\\n  height: 100%;\\n  overflow: hidden;\\n  background: #F0F8FF;\\n}\\n.theme-light .world_map .graticule,\\n[data-theme-light=\\\"true\\\"] .world_map .graticule {\\n  fill: none;\\n  stroke: #bbb;\\n  stroke-width: .5px;\\n  stroke-opacity: .5;\\n}\\n.theme-light .g_legend,\\n[data-theme-light=\\\"true\\\"] .g_legend {\\n  fill: none;\\n}\\n.theme-light .bqplot > svg .axis rect,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis rect {\\n  stroke: white;\\n  opacity: 1.0;\\n}\\n.theme-light .bqplot > svg .axis .tick line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis .tick line {\\n  stroke: white;\\n  stroke-width: 1;\\n  opacity: 1.0;\\n}\\n.theme-light .bqplot > svg .axis .tick.short line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis .tick.short line {\\n  stroke: #8B8B8B;\\n}\\n.theme-light .bqplot > svg .axis .tick text,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .axis .tick text {\\n  fill: #8B8B8B;\\n  font: 12px sans-serif;\\n}\\n.theme-light .bqplot > svg .stick,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .stick,\\n.theme-light .bqplot > svg .zeroLine,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .zeroLine {\\n  stroke: black;\\n  fill: black;\\n}\\n.theme-light .bqplot > svg .bargroup rect,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .bargroup rect,\\n.theme-light .bqplot > svg .boxplot rect,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .boxplot rect,\\n.theme-light .bqplot > svg .slice rect,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .slice rect,\\n.theme-light .bqplot > svg .bargroup path,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .bargroup path,\\n.theme-light .bqplot > svg .boxplot path,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .boxplot path,\\n.theme-light .bqplot > svg .slice path,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .slice path,\\n.theme-light .bqplot > svg .bargroup line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .bargroup line,\\n.theme-light .bqplot > svg .boxplot line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .boxplot line,\\n.theme-light .bqplot > svg .slice line,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .slice line {\\n  stroke: black;\\n}\\n.theme-light .bqplot > svg .sticktext,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .sticktext,\\n.theme-light .bqplot > svg .dot_text,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .dot_text {\\n  fill: black;\\n}\\n.theme-light .bqplot > svg .brushintsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .brushintsel,\\n.theme-light .bqplot > svg .intsel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .intsel {\\n  fill: #000000;\\n}\\n.theme-light .bqplot > svg text.axislabel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg text.axislabel,\\n.theme-light .bqplot > svg tspan.axislabel,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg tspan.axislabel {\\n  fill: black;\\n  font: serif;\\n}\\n.theme-light .bqplot > svg text.mainheading,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg text.mainheading {\\n  fill: black;\\n  font: serif;\\n  font-size: large;\\n}\\n.theme-light .bqplot > svg .plotarea_background,\\n[data-theme-light=\\\"true\\\"] .bqplot > svg .plotarea_background {\\n  fill: #F7F7F7;\\n}\\n.theme-light .mark_tooltip,\\n[data-theme-light=\\\"true\\\"] .mark_tooltip {\\n  border: 2px solid black;\\n  border-radius: 5px;\\n  box-shadow: 1px 1px 2px rgba(10, 10, 10, 0.8);\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  background-color: #FCFCFC;\\n}\\n.theme-light .mark_tooltip td,\\n[data-theme-light=\\\"true\\\"] .mark_tooltip td {\\n  border: thin solid black;\\n}\\n.theme-light .mark_tooltip table,\\n[data-theme-light=\\\"true\\\"] .mark_tooltip table {\\n  background: #ececec;\\n}\\n.theme-light .world_map path,\\n[data-theme-light=\\\"true\\\"] .world_map path {\\n  stroke: #FFF;\\n  stroke-width: 0.25px;\\n  fill: dodgerblue;\\n}\\n.theme-light .pie polyline,\\n[data-theme-light=\\\"true\\\"] .pie polyline {\\n  opacity: .3;\\n  stroke: black;\\n  stroke-width: 1px;\\n  fill: none;\\n}\\n.theme-light .network .node .element,\\n[data-theme-light=\\\"true\\\"] .network .node .element {\\n  fill: #ccc;\\n  stroke: #000;\\n  stroke-width: 1.5px;\\n}\\n.theme-light .network .link,\\n[data-theme-light=\\\"true\\\"] .network .link {\\n  fill: none;\\n  stroke: #666;\\n  stroke-width: 1.5px;\\n}\\n.theme-light .network .node .label,\\n[data-theme-light=\\\"true\\\"] .network .node .label {\\n  font: 12px sans-serif;\\n  pointer-events: none;\\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\\n}\\n.theme-light .linkarrow,\\n[data-theme-light=\\\"true\\\"] .linkarrow {\\n  fill: #000;\\n}\\n/* by default, activate theme-light*/\\n.bqplot {\\n  box-sizing: border-box;\\n  display: flex;\\n  width: 640px;\\n  height: 480px;\\n}\\n.bqplot > svg {\\n  font: 11px sans-serif;\\n  user-select: none;\\n  -ms-user-select: none;\\n  -khtml-user-select: none;\\n  -webkit-user-select: none;\\n  flex-grow: 1;\\n}\\n.bqplot > svg .axis line {\\n  shape-rendering: crispEdges;\\n  font: 10px sans-serif;\\n  stroke-width: 1px;\\n}\\n.bqplot > svg .axis path,\\n.bqplot > svg .axis line {\\n  fill: none;\\n}\\n.bqplot > svg .axis text.axislabel,\\n.bqplot > svg .axis tspan.axislabel {\\n  text-anchor: end;\\n  font: 14px sans-serif;\\n}\\n.bqplot > svg .axis .tick text {\\n  cursor: default;\\n}\\n.bqplot > svg .axis.axisbold path {\\n  stroke-width: 3px;\\n}\\n.bqplot > svg .axis.axisbold text,\\n.bqplot > svg .axis.axisbold text.axislabel {\\n  font-weight: bolder;\\n}\\n.bqplot > svg text.mainheading {\\n  text-anchor: middle;\\n  font: 16px sans-serif;\\n}\\n.bqplot > svg .zeroLine {\\n  shape-rendering: crispEdges;\\n}\\n.bqplot > svg .brushintsel,\\n.bqplot > svg .intsel {\\n  pointer-events: none;\\n}\\n.bqplot > svg .indsel {\\n  stroke: red;\\n}\\n.bqplot > svg .brushintsel,\\n.bqplot > svg .intsel {\\n  fill-opacity: 0.2;\\n}\\n.bqplot > svg .intselmouse {\\n  visibility: hidden;\\n  pointer-events: all;\\n  /*none?*/\\n}\\n.bqplot > svg text.legendtext {\\n  text-anchor: start;\\n  font: 14px sans-serif;\\n}\\n.bqplot > svg .multiselector .active {\\n  pointer-events: all  !important;\\n  stroke: green;\\n}\\n.bqplot > svg .multiselector .inactive {\\n  pointer-events: none !important;\\n  stroke: red;\\n}\\n.bqplot > svg .multiselector .visible {\\n  pointer-events: visible !important;\\n  stroke: red;\\n}\\n.bqplot > svg .lassoselector .selected {\\n  opacity: 0.3;\\n}\\n.bqplot > svg .lassoselector path {\\n  fill: none;\\n  stroke: orange;\\n  stroke-width: 4;\\n}\\n.tooltip_div {\\n  z-index: 1001;\\n}\\n.mark_tooltip {\\n  pointer-events: none;\\n  z-index: 1001;\\n}\\n.mark_tooltip table {\\n  border-radius: 5px;\\n}\\n.mark_tooltip .tooltiptext {\\n  text-align: center;\\n  padding: 0.5em;\\n}\\n.world_map .hovered {\\n  fill: Orange;\\n  stroke: Orange;\\n  stroke-width: 2.5px;\\n}\\n.world_map #container {\\n  margin: 10px 10%;\\n  border: 2px solid #000;\\n  border-radius: 5px;\\n  height: 100%;\\n  overflow: hidden;\\n  background: #F0F8FF;\\n}\\n.world_map .graticule {\\n  fill: none;\\n  stroke: #bbb;\\n  stroke-width: .5px;\\n  stroke-opacity: .5;\\n}\\n.g_legend {\\n  fill: none;\\n}\\n.bqplot > svg .axis rect {\\n  stroke: white;\\n  opacity: 1.0;\\n}\\n.bqplot > svg .axis .tick line {\\n  stroke: white;\\n  stroke-width: 1;\\n  opacity: 1.0;\\n}\\n.bqplot > svg .axis .tick.short line {\\n  stroke: #8B8B8B;\\n}\\n.bqplot > svg .axis .tick text {\\n  fill: #8B8B8B;\\n  font: 12px sans-serif;\\n}\\n.bqplot > svg .stick,\\n.bqplot > svg .zeroLine {\\n  stroke: black;\\n  fill: black;\\n}\\n.bqplot > svg .bargroup rect,\\n.bqplot > svg .boxplot rect,\\n.bqplot > svg .slice rect,\\n.bqplot > svg .bargroup path,\\n.bqplot > svg .boxplot path,\\n.bqplot > svg .slice path,\\n.bqplot > svg .bargroup line,\\n.bqplot > svg .boxplot line,\\n.bqplot > svg .slice line {\\n  stroke: black;\\n}\\n.bqplot > svg .sticktext,\\n.bqplot > svg .dot_text {\\n  fill: black;\\n}\\n.bqplot > svg .brushintsel,\\n.bqplot > svg .intsel {\\n  fill: #000000;\\n}\\n.bqplot > svg text.axislabel,\\n.bqplot > svg tspan.axislabel {\\n  fill: black;\\n  font: serif;\\n}\\n.bqplot > svg text.mainheading {\\n  fill: black;\\n  font: serif;\\n  font-size: large;\\n}\\n.bqplot > svg .plotarea_background {\\n  fill: #F7F7F7;\\n}\\n.mark_tooltip {\\n  border: 2px solid black;\\n  border-radius: 5px;\\n  box-shadow: 1px 1px 2px rgba(10, 10, 10, 0.8);\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  background-color: #FCFCFC;\\n}\\n.mark_tooltip td {\\n  border: thin solid black;\\n}\\n.mark_tooltip table {\\n  background: #ececec;\\n}\\n.world_map path {\\n  stroke: #FFF;\\n  stroke-width: 0.25px;\\n  fill: dodgerblue;\\n}\\n.pie polyline {\\n  opacity: .3;\\n  stroke: black;\\n  stroke-width: 1px;\\n  fill: none;\\n}\\n.network .node .element {\\n  fill: #ccc;\\n  stroke: #000;\\n  stroke-width: 1.5px;\\n}\\n.network .link {\\n  fill: none;\\n  stroke: #666;\\n  stroke-width: 1.5px;\\n}\\n.network .node .label {\\n  font: 12px sans-serif;\\n  pointer-events: none;\\n  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;\\n}\\n.linkarrow {\\n  fill: #000;\\n}\\n.theme-dark .bqplot,\\n[data-theme-light=\\\"false\\\"] .bqplot {\\n  box-sizing: border-box;\\n  display: flex;\\n  width: 640px;\\n  height: 480px;\\n}\\n.theme-dark .bqplot > svg,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg {\\n  font: 11px sans-serif;\\n  user-select: none;\\n  -ms-user-select: none;\\n  -khtml-user-select: none;\\n  -webkit-user-select: none;\\n  flex-grow: 1;\\n}\\n.theme-dark .bqplot > svg .axis line,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis line {\\n  shape-rendering: crispEdges;\\n  font: 10px sans-serif;\\n  stroke-width: 1px;\\n}\\n.theme-dark .bqplot > svg .axis path,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis path,\\n.theme-dark .bqplot > svg .axis line,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis line {\\n  fill: none;\\n}\\n.theme-dark .bqplot > svg .axis text.axislabel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis text.axislabel,\\n.theme-dark .bqplot > svg .axis tspan.axislabel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis tspan.axislabel {\\n  text-anchor: end;\\n  font: 14px sans-serif;\\n}\\n.theme-dark .bqplot > svg .axis .tick text,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis .tick text {\\n  cursor: default;\\n}\\n.theme-dark .bqplot > svg .axis.axisbold path,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis.axisbold path {\\n  stroke-width: 3px;\\n}\\n.theme-dark .bqplot > svg .axis.axisbold text,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis.axisbold text,\\n.theme-dark .bqplot > svg .axis.axisbold text.axislabel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis.axisbold text.axislabel {\\n  font-weight: bolder;\\n}\\n.theme-dark .bqplot > svg text.mainheading,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg text.mainheading {\\n  text-anchor: middle;\\n  font: 16px sans-serif;\\n}\\n.theme-dark .bqplot > svg .zeroLine,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .zeroLine {\\n  shape-rendering: crispEdges;\\n}\\n.theme-dark .bqplot > svg .brushintsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .brushintsel,\\n.theme-dark .bqplot > svg .intsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .intsel {\\n  pointer-events: none;\\n}\\n.theme-dark .bqplot > svg .indsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .indsel {\\n  stroke: red;\\n}\\n.theme-dark .bqplot > svg .brushintsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .brushintsel,\\n.theme-dark .bqplot > svg .intsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .intsel {\\n  fill-opacity: 0.2;\\n}\\n.theme-dark .bqplot > svg .intselmouse,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .intselmouse {\\n  visibility: hidden;\\n  pointer-events: all;\\n  /*none?*/\\n}\\n.theme-dark .bqplot > svg text.legendtext,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg text.legendtext {\\n  text-anchor: start;\\n  font: 14px sans-serif;\\n}\\n.theme-dark .bqplot > svg .multiselector .active,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .multiselector .active {\\n  pointer-events: all  !important;\\n  stroke: green;\\n}\\n.theme-dark .bqplot > svg .multiselector .inactive,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .multiselector .inactive {\\n  pointer-events: none !important;\\n  stroke: red;\\n}\\n.theme-dark .bqplot > svg .multiselector .visible,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .multiselector .visible {\\n  pointer-events: visible !important;\\n  stroke: red;\\n}\\n.theme-dark .bqplot > svg .lassoselector .selected,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .lassoselector .selected {\\n  opacity: 0.3;\\n}\\n.theme-dark .bqplot > svg .lassoselector path,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .lassoselector path {\\n  fill: none;\\n  stroke: orange;\\n  stroke-width: 4;\\n}\\n.theme-dark .tooltip_div,\\n[data-theme-light=\\\"false\\\"] .tooltip_div {\\n  z-index: 1001;\\n}\\n.theme-dark .mark_tooltip,\\n[data-theme-light=\\\"false\\\"] .mark_tooltip {\\n  pointer-events: none;\\n  z-index: 1001;\\n}\\n.theme-dark .mark_tooltip table,\\n[data-theme-light=\\\"false\\\"] .mark_tooltip table {\\n  border-radius: 5px;\\n}\\n.theme-dark .mark_tooltip .tooltiptext,\\n[data-theme-light=\\\"false\\\"] .mark_tooltip .tooltiptext {\\n  text-align: center;\\n  padding: 0.5em;\\n}\\n.theme-dark .world_map .hovered,\\n[data-theme-light=\\\"false\\\"] .world_map .hovered {\\n  fill: Orange;\\n  stroke: Orange;\\n  stroke-width: 2.5px;\\n}\\n.theme-dark .world_map #container,\\n[data-theme-light=\\\"false\\\"] .world_map #container {\\n  margin: 10px 10%;\\n  border: 2px solid #000;\\n  border-radius: 5px;\\n  height: 100%;\\n  overflow: hidden;\\n  background: #F0F8FF;\\n}\\n.theme-dark .world_map .graticule,\\n[data-theme-light=\\\"false\\\"] .world_map .graticule {\\n  fill: none;\\n  stroke: #bbb;\\n  stroke-width: .5px;\\n  stroke-opacity: .5;\\n}\\n.theme-dark .g_legend,\\n[data-theme-light=\\\"false\\\"] .g_legend {\\n  fill: none;\\n}\\n.theme-dark .bqplot > svg,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg {\\n  background: #1a1a1a;\\n}\\n.theme-dark .bqplot > svg .axis rect,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis rect {\\n  stroke: #1A1A1A;\\n}\\n.theme-dark .bqplot > svg .axis path,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis path {\\n  stroke: #b3b3b3;\\n}\\n.theme-dark .bqplot > svg .axis .tick line,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis .tick line {\\n  stroke: #3b3b3b;\\n}\\n.theme-dark .bqplot > svg .axis .tick.short line,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis .tick.short line {\\n  stroke: #B3B3B3;\\n}\\n.theme-dark .bqplot > svg .axis .tick text,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .axis .tick text {\\n  fill: #B3B3B3;\\n}\\n.theme-dark .bqplot > svg .stick,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .stick,\\n.theme-dark .bqplot > svg .zeroLine,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .zeroLine {\\n  stroke: white;\\n  fill: white;\\n}\\n.theme-dark .bqplot > svg .bargroup rect,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .bargroup rect,\\n.theme-dark .bqplot > svg .slice rect,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .slice rect,\\n.theme-dark .bqplot > svg .bargroup path,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .bargroup path,\\n.theme-dark .bqplot > svg .slice path,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .slice path,\\n.theme-dark .bqplot > svg .bargroup line,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .bargroup line,\\n.theme-dark .bqplot > svg .slice line,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .slice line {\\n  stroke: white;\\n}\\n.theme-dark .bqplot > svg .sticktext,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .sticktext,\\n.theme-dark .bqplot > svg .dot_text,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .dot_text {\\n  fill: white;\\n}\\n.theme-dark .bqplot > svg .brushintsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .brushintsel,\\n.theme-dark .bqplot > svg .intsel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .intsel {\\n  fill: #ffffff;\\n}\\n.theme-dark .bqplot > svg text.axislabel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg text.axislabel,\\n.theme-dark .bqplot > svg tspan.axislabel,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg tspan.axislabel,\\n.theme-dark .bqplot > svg text.mainheading,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg text.mainheading {\\n  fill: orange;\\n}\\n.theme-dark .bqplot > svg .plotarea_background,\\n[data-theme-light=\\\"false\\\"] .bqplot > svg .plotarea_background {\\n  fill: #1a1a1a;\\n}\\n.theme-dark .mark_tooltip,\\n[data-theme-light=\\\"false\\\"] .mark_tooltip {\\n  border: 2px solid whitesmoke;\\n  border-radius: 5px;\\n  box-shadow: 1px 1px 2px rgba(245, 245, 245, 0.8);\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  background-color: black;\\n}\\n.theme-dark .mark_tooltip td,\\n[data-theme-light=\\\"false\\\"] .mark_tooltip td {\\n  border: thin solid whitesmoke;\\n}\\n.theme-dark .mark_tooltip table,\\n[data-theme-light=\\\"false\\\"] .mark_tooltip table {\\n  background: black;\\n}\\n.theme-dark .world_map path,\\n[data-theme-light=\\\"false\\\"] .world_map path {\\n  stroke: black;\\n  stroke-width: 0.25px;\\n  fill: seagreen;\\n}\\n.theme-dark .pie polyline,\\n[data-theme-light=\\\"false\\\"] .pie polyline {\\n  opacity: .5;\\n  stroke: white;\\n  stroke-width: 1px;\\n  fill: none;\\n}\\n.theme-dark .network .node .element,\\n[data-theme-light=\\\"false\\\"] .network .node .element {\\n  fill: #666;\\n  stroke: #000;\\n  stroke-width: 1.5px;\\n}\\n.theme-dark .network .node .element,\\n[data-theme-light=\\\"false\\\"] .network .node .element {\\n  fill: #666;\\n  stroke: #000;\\n  stroke-width: 1.5px;\\n}\\n.theme-dark .network .link,\\n[data-theme-light=\\\"false\\\"] .network .link {\\n  fill: none;\\n  stroke: #666;\\n  stroke-width: 1.5px;\\n}\\n.theme-dark .network .node .label,\\n[data-theme-light=\\\"false\\\"] .network .node .label {\\n  font: 12px sans-serif;\\n  pointer-events: none;\\n  text-shadow: 0 1px 0 #000, 1px 0 0 #000, 0 -1px 0 #000, -1px 0 0 #000;\\n}\\n.theme-dark .linkarrow,\\n[data-theme-light=\\\"false\\\"] .linkarrow {\\n  fill: #ccc;\\n}\\n\", \"\"]);\n\n// exports\n","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {};\n\nvar loadedModules = [\n    require(\"./Axis\"),\n    require(\"./GridHeatMapModel\"),\n    require(\"./Mark\"),\n    require(\"./AxisModel\"),\n    require(\"./HandDraw\"),\n    require(\"./MarkModel\"),\n    require(\"./Bars\"),\n    require(\"./HandDrawModel\"),\n    require(\"./OHLC\"),\n    require(\"./BarsModel\"),\n    require(\"./Hist\"),\n    require(\"./OHLCModel\"),\n    require(\"./BaseModel\"),\n    require(\"./HistModel\"),\n    require(\"./SelectorModel\"),\n    require(\"./Boxplot\"),\n    require(\"./IndexSelector\"),\n    require(\"./OrdinalColorScale\"),\n    require(\"./BoxplotModel\"),\n    require(\"./Interaction\"),\n    require(\"./OrdinalScale\"),\n    require(\"./Label\"),\n    require(\"./LabelModel\"),\n    require(\"./OrdinalScaleModel\"),\n    require(\"./BrushSelector\"),\n    require(\"./LassoSelector\"),\n    require(\"./PanZoom\"),\n    require(\"./ColorAxis\"),\n    require(\"./lasso_test\"),\n    require(\"./PanZoomModel\"),\n    require(\"./colorbrewer\"),\n    require(\"./ColorScale\"),\n    require(\"./Pie\"),\n    require(\"./ColorUtils\"),\n    require(\"./ColorScaleModel\"),\n    require(\"./PieModel\"),\n    require(\"./DateColorScale\"),\n    require(\"./LinearScale\"),\n    require(\"./Scale\"),\n    require(\"./DateColorScaleModel\"),\n    require(\"./LinearScaleModel\"),\n    require(\"./ScaleModel\"),\n    require(\"./DateScale\"),\n    require(\"./Lines\"),\n    require(\"./Scatter\"),\n    require(\"./DateScaleModel\"),\n    require(\"./LinesModel\"),\n    require(\"./ScatterModel\"),\n    require(\"./FastIntervalSelector\"),\n    require(\"./LogScale\"),\n    require(\"./Selector\"),\n    require(\"./Figure\"),\n    require(\"./LogScaleModel\"),\n    require(\"./SquareMarketMap\"),\n    require(\"./FigureModel\"),\n    require(\"./Map\"),\n    require(\"./Tooltip\"),\n    require(\"./TooltipModel\"),\n    require(\"./FlexLine\"),\n    require(\"./MapModel\"),\n    require(\"./GeoScale\"),\n    require(\"./Markers\"),\n    require(\"./utils\"),\n    require(\"./GeoScaleModel\"),\n    require(\"./MarketMap\"),\n    require(\"./GridHeatMap\"),\n    require(\"./MarketMapModel\"),\n    require(\"./HeatMap\"),\n    require(\"./HeatMapModel\"),\n    require(\"./Toolbar\"),\n    require(\"./GraphModel\"),\n    require(\"./Graph\"),\n    require(\"./Image\"),\n    require(\"./ImageModel\")\n];\n\nfor (var i in loadedModules) {\n    if (loadedModules.hasOwnProperty(i)) {\n        var loadedModule = loadedModules[i];\n        for (var target_name in loadedModule) {\n            if (loadedModule.hasOwnProperty(target_name)) {\n                module.exports[target_name] = loadedModule[target_name];\n            }\n        }\n    }\n}\n\nmodule.exports[\"version\"] = require(\"../package.json\").version;\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar GridHeatMapModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"GridHeatMapModel\",\n            _view_name: \"GridHeatMap\",\n            row: [],\n            column: [],\n            color: null,\n            scales_metadata: {\n                row: { orientation: \"vertical\", dimension: \"y\" },\n                column: { orientation: \"horizontal\", dimension: \"x\" },\n                color: { dimension: \"color\" }\n            },\n            null_color: \"black\",\n            row_align: \"start\",\n            column_align: \"start\",\n            stroke: \"black\",\n            opacity: 1.0,\n            anchor_style: {\n                fill: \"white\",\n                stroke: \"blue\"\n            }\n        });\n    },\n\n    initialize: function() {\n        GridHeatMapModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"row\", \"column\", \"color\"], this.update_data, this);\n        // FIXME: replace this with on(\"change:preserve_domain\"). It is not done here because\n        // on_some_change depends on the GLOBAL backbone on(\"change\") handler which\n        // is called AFTER the specific handlers on(\"change:foobar\") and we make that\n        // assumption.\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        // Handling data updates\n        var that = this;\n        this.colors = this.get_typed_field(\"color\");\n        this.rows = this.get_typed_field(\"row\");\n        this.columns = this.get_typed_field(\"column\");\n\n        var num_rows = this.colors.length;\n        var num_cols = this.colors[0].length;\n        var flat_colors = [];\n        flat_colors = flat_colors.concat.apply(flat_colors, this.colors);\n\n        this.mark_data = flat_colors.map(function(data, index) {\n            var row_num = Math.floor(index / num_cols);\n            var col_num = index % num_cols;\n\n            return {\n                row_num : row_num,\n                row : that.rows[row_num],\n                column : that.columns[col_num],\n                column_num : col_num,\n                color : data,\n                _cell_num : index,\n            };\n        });\n        this.identify_modes();\n        this.update_domains();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var scales = this.get(\"scales\");\n        var y_scale = scales.row, x_scale = scales.column;\n        var color_scale = scales.color;\n\n        if(!this.get(\"preserve_domain\").row) {\n            y_scale.compute_and_set_domain(this.rows, this.model_id + \"_row\");\n        } else {\n            y_scale.del_domain([], this.model_id + \"_row\");\n        }\n\n        if(!this.get(\"preserve_domain\").column) {\n            x_scale.compute_and_set_domain(this.columns, this.model_id + \"_column\");\n        } else {\n            x_scale.del_domain([], this.model_id + \"_column\");\n        }\n        if(color_scale !== null && color_scale !== undefined) {\n            if(!this.get(\"preserve_domain\").color) {\n                color_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                    return elem.color;\n                }), this.model_id + \"_color\");\n            } else {\n                color_scale.del_domain([], this.model_id + \"_color\");\n            }\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        return data;\n    },\n\n    identify_modes: function() {\n        //based on the data, identify the mode in which the heatmap should\n        //be plotted.\n        var modes = {};\n        var scales = this.get(\"scales\");\n        var row_scale = scales.row;\n        var column_scale = scales.column;\n        var data_nrow = this.colors.length;\n        var data_ncol = this.colors[0].length;\n\n        if(row_scale.type === \"ordinal\") {\n            modes.row = \"middle\";\n        } else {\n            if(data_nrow === this.rows.length - 1) {\n                modes.row = \"boundaries\";\n            } else if(data_nrow === this.rows.length) {\n                modes.row = \"expand_one\";\n            } else if(data_nrow === this.rows.length + 1) {\n                modes.row = \"expand_two\";\n            }\n        }\n        if(column_scale.type === \"ordinal\") {\n            modes.column = \"middle\";\n        } else {\n            if(data_ncol === this.columns.length - 1) {\n                modes.column = \"boundaries\";\n            } else if(data_ncol === this.columns.length) {\n                modes.column = \"expand_one\";\n            } else if(data_ncol === this.columns.length + 1) {\n                modes.column = \"expand_two\";\n            }\n        }\n        this.modes = modes;\n    }\n});\n\nmodule.exports = {\n    GridHeatMapModel: GridHeatMapModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar AxisModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(widgets.WidgetModel.prototype.defaults(), {\n            _model_name: \"AxisModel\",\n            _view_name: \"Axis\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n            orientation: \"horizontal\",\n            side: null,\n            label: \"\",\n            grid_lines: \"solid\",\n            tick_format: null,\n            scale: undefined,\n            num_ticks: null,\n            tick_values: [],\n            offset: {},\n            label_location: \"middle\",\n            label_color: null,\n            grid_color: null,\n            color: null,\n            label_offset: null,\n            visible: true,\n            tick_style: {},\n            tick_rotate: 0\n        });\n    },\n\n    initialize: function() {\n        AxisModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:side\", this.validate_orientation, this);\n        this.on(\"change:orientation\", this.validate_side, this);\n        this.validate_orientation();\n        this.validate_side();\n    },\n\n    validate_side: function() {\n        var orientation = this.get(\"orientation\"),\n            side = this.get(\"side\");\n        if(orientation === \"vertical\") {\n            if (side !== \"left\" && side !== \"right\") {\n                this.set(\"side\", \"left\");\n            }\n        } else {\n            if (side !== \"bottom\" && side !== \"top\") {\n                this.set(\"side\", \"bottom\");\n            }\n        }\n        this.save_changes();\n    },\n\n    validate_orientation: function() {\n        var orientation = this.get(\"orientation\"),\n            side = this.get(\"side\");\n        if (side) {\n            if(side === \"left\" || side === \"right\") {\n                this.set(\"orientation\", \"vertical\");\n            } else {\n                this.set(\"orientation\", \"horizontal\");\n            }\n            this.save_changes();\n        }\n    }\n}, {\n    serializers: _.extend({\n         scale: { deserialize: widgets.unpack_models },\n         offset: { deserialize: widgets.unpack_models }\n    }, widgets.WidgetModel.serializers)\n});\n\nvar ColorAxisModel = AxisModel.extend({\n\n    defaults: function() {\n        return _.extend(AxisModel.prototype.defaults(), {\n            _model_name: \"ColorAxisModel\",\n            _view_name: \"ColorAxis\"\n        });\n    }\n});\n\n\nmodule.exports = {\n    AxisModel: AxisModel,\n    ColorAxisModel: ColorAxisModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar utils = require(\"./utils\");\nvar interaction = require(\"./Interaction\");\n\nvar HandDraw = interaction.Interaction.extend({\n\n    render: function() {\n        HandDraw.__super__.render.apply(this);\n        this.d3el.style({\n            cursor: \"crosshair\"\n        });\n        this.active = false;\n\n        // Register the mouse callback when the mark view promises are\n        // resolved.\n        var that = this;\n        this.set_lines_view().then(function() {\n            that.d3el.on(\"mousedown\", function() {\n                return that.mousedown();\n            });\n            that.set_limits();\n        });\n\n        // Update line index\n        this.update_line_index();\n        this.listenTo(this.model, \"change:line_index\", this.update_line_index, this);\n        this.model.on_some_change([\"min_x\", \"max_x\"], this.set_limits, this);\n    },\n\n    set_lines_view: function() {\n        var fig = this.parent;\n        var lines_model = this.model.get(\"lines\");\n        var that = this;\n        return Promise.all(fig.mark_views.views).then(function(views) {\n            var fig_mark_ids = fig.mark_views._models.map(function(mark_model) {\n                return mark_model.model_id; // Model ids of the marks in the figure\n            });\n            var mark_index = fig_mark_ids.indexOf(lines_model.model_id);\n            that.lines_view = views[mark_index];\n        });\n    },\n\n    mousedown: function () {\n        this.active = true;\n        this.mouse_entry(false);\n        var that = this;\n        this.d3el.on(\"mousemove\", function() { that.mousemove(); });\n        this.d3el.on(\"mouseleave\", function() { that.mouseup(); });\n        this.d3el.on(\"mouseup\", function() { that.mouseup(); });\n    },\n\n    mouseup: function () {\n        if (this.active) {\n            this.mouse_entry(true);\n            var lines_model = this.model.get(\"lines\");\n            lines_model.set_typed_field(\"y\", utils.deepCopy(lines_model.y_data));\n            this.lines_view.touch();\n            this.active = false;\n            this.d3el.on(\"mousemove\", null);\n            this.d3el.on(\"mouseleave\", null);\n            this.d3el.on(\"mouseup\", null);\n        }\n    },\n\n    mousemove: function() {\n        this.mouse_entry(true);\n    },\n\n    mouse_entry: function(memory) {\n        // If memory is set to true, itermediate positions between the last\n        // position of the mouse and the current one will be interpolated.\n        if (this.active) {\n            var lines_model = this.model.get(\"lines\");\n            var xindex = Math.min(this.line_index,\n                                  lines_model.x_data.length - 1);\n            var mouse_pos = d3.mouse(this.el);\n            if (!memory || !(\"previous_pos\" in this)) {\n                this.previous_pos = mouse_pos;\n            }\n            var scale_x = this.lines_view.scales.x.scale;\n            var scale_y = this.lines_view.scales.y.scale;\n\n            var newx = scale_x.invert(mouse_pos[0]);\n            var newy = scale_y.invert(mouse_pos[1]);\n            var oldx = scale_x.invert(this.previous_pos[0]);\n            var oldy = scale_y.invert(this.previous_pos[1]);\n            var old_index = this.nns(lines_model.x_data[xindex], oldx);\n            var new_index = this.nns(lines_model.x_data[xindex], newx);\n            var min = Math.min(old_index, new_index);\n            var max = Math.max(old_index, new_index);\n            for (var i=min; i<=max; ++i) {\n                if ((!(this.valid_min) ||\n                     lines_model.x_data[xindex][i] >= this.min_x) &&\n                    ((!this.valid_max) ||\n                     lines_model.x_data[xindex][i] <= this.max_x)) {\n                    lines_model.y_data[this.line_index][i] = newy;\n                }\n            }\n            var that  = this;\n            var xy_data = lines_model.x_data[xindex].map(function(d, i)\n            {\n                return {\n                    x: d,\n                    y: lines_model.y_data[that.line_index][i]\n                };\n            });\n            this.lines_view.d3el.select(\"#curve\" + (that.line_index + 1))\n                .attr(\"d\", function(d) {\n                    return that.lines_view.line(xy_data);\n                });\n            this.previous_pos = mouse_pos;\n        }\n    },\n\n    capnfloor: function(val) {\n        // Not taking into account the position of the mouse beyond min_x\n        // and max_x\n        return Math.max(Math.min(val,this.model.get(\"max_x\")),\n                        this.model.get(\"min_x\"));\n    },\n\n    set_limits: function() {\n        var is_date = (this.lines_view.scales.x.model.type == \"date\");\n        if(is_date) {\n            this.min_x = this.model.get_date_elem(\"min_x\");\n            this.valid_min = !(this.min_x === null ||\n                               this.min_x === undefined ||\n                               isNaN(this.min_x.getTime()));\n            this.max_x = this.model.get_date_elem(\"max_x\");\n            this.valid_max = !(this.max_x === null ||\n                               this.max_x === undefined ||\n                               isNaN(this.max_x.getTime()));\n        } else {\n            this.min_x = this.model.get(\"min_x\");\n            this.max_x = this.model.get(\"max_x\");\n            this.valid_min = !(this.min_x === null ||\n                               this.min_x === undefined);\n            this.valid_max = !(this.max_x === null ||\n                               this.max_x === undefined);\n        }\n    },\n\n    nns: function(x_data, x) {\n        // Nearest neighbor search\n        var idx = this.lines_view.bisect(x_data, x);\n        if (x - x_data[idx-1] > x_data[idx] - x) {\n            return idx;\n        } else {\n            return idx-1;\n        }\n    },\n\n    update_line_index: function() {\n        // Called when the line index is changed in the model\n        this.line_index = this.model.get(\"line_index\");\n    },\n});\n\nmodule.exports = {\n    HandDraw: HandDraw,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar mark = require(\"./Mark\");\nvar utils = require(\"./utils\");\n\nvar Bars = mark.Mark.extend({\n\n    render: function() {\n        this.padding = this.model.get(\"padding\");\n        var base_creation_promise = Bars.__super__.render.apply(this);\n        this.set_internal_scales();\n        this.selected_indices = this.model.get(\"selected\");\n        this.selected_style = this.model.get(\"selected_style\");\n        this.unselected_style = this.model.get(\"unselected_style\");\n\n        this.display_el_classes = [\"bar\", \"legendtext\"];\n\n        var that = this;\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        return base_creation_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        });\n    },\n\n    set_scale_orientation: function() {\n        var orient = this.model.get(\"orientation\");\n        this.dom_scale = this.scales.x; //(orient === \"vertical\") ? this.scales.x : this.scales.y;\n        this.range_scale = this.scales.y; //(orient === \"vertical\") ? this.scales.y : this.scales.x;\n    },\n\n    set_ranges: function() {\n        var orient = this.model.get(\"orientation\");\n        this.set_scale_orientation();\n        var dom_scale = this.dom_scale,\n            range_scale = this.range_scale;\n        var dom = (orient === \"vertical\") ? \"x\" : \"y\",\n            rang = (orient === \"vertical\") ? \"y\" : \"x\";\n        if(dom_scale.model.type !== \"ordinal\") {\n            dom_scale.set_range(this.parent.padded_range(dom, dom_scale.model));\n        } else {\n            dom_scale.set_range(this.parent.padded_range(dom, dom_scale.model), this.padding);\n        }\n        range_scale.set_range(this.parent.padded_range(rang, range_scale.model));\n        // x_offset is set later by the adjust_offset method\n        // This differs because it is not constant for a scale.\n        // Changes based on the data.\n        this.dom_offset = 0;\n        this.range_offset = (orient === \"vertical\") ? range_scale.offset: -range_scale.offset;\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                this.draw();\n            }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                this.draw();\n            }\n        });\n    },\n\n    set_internal_scales: function() {\n        // Two scales to draw the bars.\n        this.x = d3.scale.ordinal();\n        this.x1 = d3.scale.ordinal();\n    },\n\n    adjust_offset: function() {\n        // In the case of a linear scale, and when plotting ordinal data,\n        // the value have to be negatively offset by half of the width of\n        // the bars, because ordinal scales give the values corresponding\n        // to the start of the bin but linear scale gives the actual value.\n        var dom_scale = this.dom_scale;\n        if(dom_scale.model.type !== \"ordinal\") {\n            if (this.model.get(\"align\")===\"center\") {\n                this.dom_offset = -(this.x.rangeBand() / 2).toFixed(2);\n            } else if (this.model.get(\"align\") === \"left\") {\n                this.dom_offset = -(this.x.rangeBand()).toFixed(2);\n            } else {\n                this.dom_offset = 0;\n            }\n        } else {\n            if (this.model.get(\"align\")===\"center\") {\n                this.dom_offset = 0;\n            } else if (this.model.get(\"align\")===\"left\") {\n                this.dom_offset = -(this.x.rangeBand() / 2);\n            } else {\n                this.dom_offset = (this.x.rangeBand() / 2);\n            }\n        }\n    },\n\n    create_listeners: function() {\n        Bars.__super__.create_listeners.apply(this);\n        this.d3el\n          .on(\"mouseover\", _.bind(function() {\n              this.event_dispatcher(\"mouse_over\");\n          }, this))\n          .on(\"mousemove\", _.bind(function() {\n              this.event_dispatcher(\"mouse_move\");\n          }, this))\n          .on(\"mouseout\", _.bind(function() {\n              this.event_dispatcher(\"mouse_out\");\n          }, this));\n\n        this.listenTo(this.model, \"data_updated\", function() {\n            //animate bars on data update\n            var animate = true;\n            this.draw(animate);\n        }, this);\n        this.listenTo(this.model, \"change:colors\", this.update_colors, this);\n        this.listenTo(this.model, \"colors_updated\", this.update_colors, this);\n        this.listenTo(this.model, \"change:type\", this.update_type, this);\n        this.listenTo(this.model, \"change:align\", this.realign, this);\n        this.listenTo(this.model, \"change:orientation\", this.relayout, this)\n        // FIXME: These are expensive calls for changing padding and align\n        this.listenTo(this.model, \"change:padding\", this.relayout, this)\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n        this.model.on_some_change([\"stroke\", \"opacities\"], this.update_stroke_and_opacities, this);\n        this.listenTo(this.model, \"change:selected\", this.update_selected);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        }\n        else {\n            if(interactions.click !== undefined &&\n              interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click === \"select\") {\n                    this.event_listeners.parent_clicked = this.reset_selection;\n                    this.event_listeners.element_clicked = this.bar_click_handler;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n            if(interactions.legend_click !== undefined &&\n              interactions.legend_click !== null) {\n                if(interactions.legend_click === \"tooltip\") {\n                    this.event_listeners.legend_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                }\n            } else {\n                this.event_listeners.legend_clicked = function() {};\n            }\n            if(interactions.legend_hover !== undefined &&\n              interactions.legend_hover !== null) {\n                if(interactions.legend_hover === \"highlight_axes\") {\n                    this.event_listeners.legend_mouse_over = _.bind(this.highlight_axes, this);\n                    this.event_listeners.legend_mouse_out = _.bind(this.unhighlight_axes, this);\n                }\n            } else {\n                this.reset_legend_hover();\n            }\n        }\n    },\n\n    realign: function() {\n        //TODO: Relayout is an expensive call on realigning. Need to change\n        //this.\n        this.relayout();\n    },\n\n    draw_zero_line: function() {\n        this.set_scale_orientation();\n        var range_scale = this.range_scale;\n        var orient = this.model.get(\"orientation\");\n        if (orient === \"vertical\") {\n            this.d3el.select(\".zeroLine\")\n              .attr(\"x1\",  0)\n              .attr(\"x2\", this.parent.plotarea_width)\n              .attr(\"y1\", range_scale.scale(this.model.base_value))\n              .attr(\"y2\", range_scale.scale(this.model.base_value));\n        } else {\n            this.d3el.select(\".zeroLine\")\n              .attr(\"x1\", range_scale.scale(this.model.base_value))\n              .attr(\"x2\", range_scale.scale(this.model.base_value))\n              .attr(\"y1\", 0)\n              .attr(\"y2\", this.parent.plotarea_height);\n        }\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.compute_view_padding();\n\n        var range_scale = this.range_scale;\n\n        this.draw_zero_line();\n\n        this.x.rangeRoundBands(this.set_x_range(), this.padding);\n        this.adjust_offset();\n        this.x1.rangeRoundBands([0, this.x.rangeBand().toFixed(2)]);\n        this.draw_bars();\n    },\n\n    invert_point: function(pixel) {\n        if(pixel === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return;\n        }\n\n        var abs_diff = this.x_pixels.map(function(elem) { return Math.abs(elem - pixel); });\n        this.model.set(\"selected\", [abs_diff.indexOf(d3.min(abs_diff))]);\n        this.touch();\n    },\n\n    selector_changed: function(point_selector, rect_selector) {\n        if(point_selector === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return [];\n        }\n        var pixels = this.pixel_coords;\n        var indices = _.range(pixels.length);\n        // Here we only select bar groups. It shouldn't be too hard to select\n        // individual bars, the `selected` attribute would then be a list of pairs.\n        var selected_groups = _.filter(indices, function(index) {\n            var bars = pixels[index];\n            for (var i = 0; i < bars.length; i++) {\n                if (rect_selector(bars[i])) { return true; }\n            } return false;\n        });\n        this.model.set(\"selected\", selected_groups);\n        this.touch();\n    },\n\n    update_selected: function(model, value) {\n        this.selected_indices = value;\n        this.apply_styles();\n    },\n\n    draw: function(animate) {\n        this.set_ranges();\n        var colors = this.model.get(\"colors\");\n        var that = this;\n        var bar_groups = this.d3el.selectAll(\".bargroup\")\n          .data(this.model.mark_data, function(d) {\n              return d.key;\n          });\n\n        var dom_scale = this.dom_scale, range_scale = this.range_scale;\n        // this.x is the ordinal scale used to draw the bars. If a linear\n        // scale is given, then the ordinal scale is created from the\n        // linear scale.\n        if(dom_scale.model.type !== \"ordinal\") {\n            var model_domain = this.model.mark_data.map(function(elem) {\n                return elem.key;\n            });\n            this.x.domain(model_domain);\n        } else {\n            this.x.domain(dom_scale.scale.domain());\n        }\n        this.x.rangeRoundBands(this.set_x_range(), this.padding);\n        this.adjust_offset();\n        this.x1.rangeRoundBands([0, this.x.rangeBand().toFixed(2)]);\n\n        if(this.model.mark_data.length > 0) {\n            this.x1.domain(_.range(this.model.mark_data[0].values.length))\n                .rangeRoundBands([0, this.x.rangeBand().toFixed(2)]);\n        }\n        bar_groups.enter()\n          .append(\"g\")\n          .attr(\"class\", \"bargroup\");\n        // The below function sorts the DOM elements so that the order of\n        // the DOM elements matches the order of the data they are bound\n        // to. This is required to maintain integrity with selection.\n        bar_groups.order();\n\n        bar_groups.on(\"click\", function(d, i) {\n            return that.event_dispatcher(\"element_clicked\",\n                                         {\"data\": d, \"index\": i});\n        });\n        bar_groups.exit().remove();\n\n        var bars_sel = bar_groups.selectAll(\".bar\")\n          .data(function(d) {\n              return d.values;\n          });\n\n        // default values for width and height are to ensure smooth\n        // transitions\n        bars_sel.enter()\n          .append(\"rect\")\n          .attr(\"class\", \"bar\")\n          .attr(\"width\", 0)\n          .attr(\"height\", 0);\n\n        bars_sel.exit().remove();\n\n        this.draw_bars(animate);\n\n        this.apply_styles();\n\n        this.d3el.selectAll(\".zeroLine\").remove();\n        this.d3el.append(\"g\")\n          .append(\"line\")\n          .attr(\"class\", \"zeroLine\");\n\n        this.draw_zero_line();\n    },\n\n    draw_bars: function(animate) {\n        var bar_groups = this.d3el.selectAll(\".bargroup\");\n        var bars_sel = bar_groups.selectAll(\".bar\");\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n        var that = this;\n        var orient = this.model.get(\"orientation\");\n\n        var dom_scale = this.dom_scale, range_scale = this.range_scale;\n\n        var dom = (orient === \"vertical\") ? \"x\" : \"y\",\n            rang = (orient === \"vertical\") ? \"y\" : \"x\";\n\n        var dom_control = (orient === \"vertical\") ? \"width\" : \"height\",\n            rang_control = (orient === \"vertical\") ? \"height\" : \"width\";\n        if (dom_scale.model.type === \"ordinal\") {\n            var dom_max = d3.max(this.parent.range(dom));\n            bar_groups.attr(\"transform\", function(d) {\n                if (orient === \"vertical\") {\n                    return \"translate(\" + ((dom_scale.scale(d.key) !== undefined ?\n                                        dom_scale.scale(d.key) : dom_max) + that.dom_offset) + \", 0)\"\n                } else {\n                    return \"translate(0, \" + ((dom_scale.scale(d.key) !== undefined ?\n                                        dom_scale.scale(d.key) : dom_max) + that.dom_offset) + \")\"\n                }\n            });\n        } else {\n            bar_groups.attr(\"transform\", function(d) {\n                if (orient === \"vertical\") {\n                    return \"translate(\" + (dom_scale.scale(d.key) + that.dom_offset) + \", 0)\";\n                } else {\n                    return \"translate(0, \" + (dom_scale.scale(d.key) + that.dom_offset) + \")\";\n                }\n            });\n        }\n        var is_stacked = (this.model.get(\"type\") === \"stacked\");\n        if (is_stacked) {\n            bars_sel.transition(\"draw_bars\").duration(animation_duration)\n                .attr(dom, 0)\n                .attr(dom_control, this.x.rangeBand().toFixed(2))\n                .attr(rang, function(d) {\n                    return (rang === \"y\") ? range_scale.scale(d.y1) : range_scale.scale(d.y0);\n                })\n                .attr(rang_control, function(d) {\n                    return Math.abs(range_scale.scale(d.y1 + d.y_ref) - range_scale.scale(d.y1));\n                });\n        } else {\n            bars_sel.transition(\"draw_bars\").duration(animation_duration)\n              .attr(dom, function(datum, index) {\n                    return that.x1(index);\n              })\n              .attr(dom_control, this.x1.rangeBand().toFixed(2))\n              .attr(rang, function(d) {\n                  return d3.min([range_scale.scale(d.y), range_scale.scale(that.model.base_value)]);\n              })\n              .attr(rang_control, function(d) {\n                  return Math.abs(range_scale.scale(that.model.base_value) - (range_scale.scale(d.y_ref)));\n              });\n        }\n\n        this.pixel_coords = this.model.mark_data.map(function(d) {\n            var key = d.key;\n            var group_dom = dom_scale.scale(key) + that.dom_offset;\n            return d.values.map(function(d) {\n                var rect_coords = {};\n                rect_coords[dom] = is_stacked ? group_dom : group_dom + that.x1(d.sub_index);\n                rect_coords[rang] = is_stacked ?\n                    (rang === \"y\") ? range_scale.scale(d.y1) : range_scale.scale(d.y0) :\n                    d3.min([range_scale.scale(d.y), range_scale.scale(that.model.base_value)]);\n                rect_coords[dom_control] = is_stacked ?\n                    that.x.rangeBand() : that.x1.rangeBand();\n                rect_coords[rang_control] = is_stacked ?\n                    Math.abs(range_scale.scale(d.y1 + d.y_ref) - range_scale.scale(d.y1)) :\n                    Math.abs(range_scale.scale(that.model.base_value) - (range_scale.scale(d.y_ref)));\n                return [[rect_coords[\"x\"], rect_coords[\"x\"] + rect_coords[\"width\"]],\n                        [rect_coords[\"y\"], rect_coords[\"y\"] + rect_coords[\"height\"]]];\n            })\n        })\n        this.x_pixels = this.model.mark_data.map(function(el) {\n            return dom_scale.scale(el.key) + dom_scale.offset;\n        });\n    },\n\n    update_type: function(model, value) {\n        // We need to update domains here as the y_domain needs to be\n        // changed when we switch from stacked to grouped.\n        this.model.update_domains();\n        this.draw();\n    },\n\n    update_stroke_and_opacities: function() {\n        var stroke = this.model.get(\"stroke\");\n        var opacities = this.model.get(\"opacities\");\n        this.d3el.selectAll(\".bar\")\n            .style(\"stroke\", stroke)\n            .style(\"opacity\", function(d, i) {\n            return opacities[i];\n        });\n    },\n\n    update_colors: function() {\n        //the following if condition is to handle the case of single\n        //dimensional data.\n        //if y is 1-d, each bar should be of 1 color.\n        //if y is multi-dimensional, the corresponding values should be of\n        //the same color.\n        var that = this;\n        var color_scale = this.scales.color;\n        if(this.model.mark_data.length > 0) {\n            if(!(this.model.is_y_2d)) {\n                this.d3el.selectAll(\".bar\").style(\"fill\", function(d, i) {\n                    return (d.color !== undefined && color_scale !== undefined) ?\n                        color_scale.scale(d.color) : that.get_colors(d.color_index);\n                });\n            } else {\n                this.d3el.selectAll(\".bargroup\")\n                   .selectAll(\".bar\")\n                   .style(\"fill\", function(d, i) {\n                   return (d.color !== undefined && color_scale !== undefined) ?\n                       color_scale.scale(d.color) : that.get_colors(d.color_index);\n                });\n            }\n        }\n        //legend color update\n        if(this.legend_el) {\n            this.legend_el.selectAll(\".legendrect\")\n              .style(\"fill\", function(d, i) {\n                  return (d.color && color_scale) ?\n                      color_scale.scale(d.color) : that.get_colors(d.color_index);\n              });\n            this.legend_el.selectAll(\".legendtext\")\n                .style(\"fill\", function(d, i) {\n                return (d.color !== undefined && color_scale !== undefined) ?\n                    color_scale.scale(d.color) : that.get_colors(d.color_index);\n            });\n        }\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        if(!(this.model.is_y_2d) &&\n           (this.model.get(\"colors\").length !== 1 &&\n            this.model.get(\"color_mode\") !== \"element\")) {\n            return [0, 0];\n        }\n\n        var legend_data = this.model.mark_data[0].values.map(function(data) {\n            return {\n                index: data.sub_index,\n                color: data.color,\n                color_index: data.color_index\n            };\n        });\n        var color_scale = this.scales.color;\n        this.legend_el = elem.selectAll(\".legend\" + this.uuid)\n            .data(legend_data);\n\n        var that = this;\n        var rect_dim = inter_y_disp * 0.8;\n        this.legend_el.enter()\n          .append(\"g\")\n            .attr(\"class\", \"legend\" + this.uuid)\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp)  + \")\";\n            })\n            .on(\"mouseover\", _.bind(function() {\n                this.event_dispatcher(\"legend_mouse_over\");\n            }, this))\n            .on(\"mouseout\", _.bind(function() {\n                this.event_dispatcher(\"legend_mouse_out\");\n            }, this))\n            .on(\"click\", _.bind(function() {\n                this.event_dispatcher(\"legend_clicked\");\n            }, this))\n          .append(\"rect\")\n            .classed(\"legendrect\", true)\n            .style(\"fill\", function(d,i) {\n                return (d.color !== undefined && color_scale !== undefined) ?\n                    color_scale.scale(d.color) : that.get_colors(d.color_index);\n            }).attr({\n                x: 0,\n                y: 0,\n                width: rect_dim,\n                height: rect_dim,\n            });\n\n        this.legend_el.append(\"text\")\n         .attr(\"class\",\"legendtext\")\n          .attr(\"x\", rect_dim * 1.2)\n          .attr(\"y\", rect_dim / 2)\n          .attr(\"dy\", \"0.35em\")\n          .text(function(d, i) { return that.model.get(\"labels\")[i]; })\n          .style(\"fill\", function(d,i) {\n              return (d.color !== undefined && color_scale !== undefined) ?\n                  color_scale.scale(d.color) : that.get_colors(d.color_index);\n          });\n\n        var max_length = d3.max(this.model.get(\"labels\"), function(d) {\n            return d.length;\n        });\n\n        this.legend_el.exit().remove();\n        return [this.model.mark_data[0].values.length, max_length];\n    },\n\n    clear_style: function(style_dict, indices) {\n        // Function to clear the style of a dict on some or all the elements of the\n        // chart. If indices is null, clears the style on all elements. If\n        // not, clears on only the elements whose indices are mathcing.\n        //\n        // This function is not used right now. But it can be used if we\n        // decide to accommodate more properties than those set by default.\n        // Because those have to cleared specifically.\n        var elements = this.d3el.selectAll(\".bargroup\");\n        if(indices !== undefined) {\n            elements = elements.filter(function(d, index) {\n                return indices.indexOf(index) !== -1;\n            });\n        }\n        var clearing_style = {};\n        for(var key in style_dict) {\n            clearing_style[key] = null;\n        }\n        elements.selectAll(\".bar\").style(clearing_style);\n    },\n\n    set_style_on_elements: function(style, indices) {\n        // If the index array is undefined or of length=0, exit the\n        // function without doing anything\n        if(indices === undefined || indices === null || indices.length === 0) {\n            return;\n        }\n        // Also, return if the style object itself is blank\n        if(Object.keys(style).length === 0) {\n            return;\n        }\n        var elements = this.d3el.selectAll(\".bargroup\");\n        elements = elements.filter(function(data, index) {\n            return indices.indexOf(index) !== -1;\n        });\n        elements.selectAll(\".bar\").style(style);\n    },\n\n    set_default_style: function(indices) {\n        // For all the elements with index in the list indices, the default\n        // style is applied.\n        this.update_colors();\n        this.update_stroke_and_opacities();\n    },\n\n    set_x_range: function() {\n        var dom_scale = this.dom_scale;\n        if(dom_scale.model.type === \"ordinal\") {\n            return dom_scale.scale.rangeExtent();\n        } else {\n            return [dom_scale.scale(d3.min(this.x.domain())),\n                    dom_scale.scale(d3.max(this.x.domain()))];\n        }\n    },\n\n    bar_click_handler: function (args) {\n        var data = args.data;\n        var index = args.index;\n        var that = this;\n        var idx = this.model.get(\"selected\");\n        var selected = idx ? utils.deepCopy(idx) : [];\n        // index of bar i. Checking if it is already present in the list.\n        var elem_index = selected.indexOf(index);\n        // Replacement for \"Accel\" modifier.\n        var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n        if(elem_index > -1 && accelKey) {\n            // if the index is already selected and if accel key is\n            // pressed, remove the element from the list\n            selected.splice(elem_index, 1);\n        } else {\n            if(d3.event.shiftKey) {\n                //If shift is pressed and the element is already\n                //selected, do not do anything\n                if(elem_index > -1) {\n                    return;\n                }\n                //Add elements before or after the index of the current\n                //bar which has been clicked\n                var min_index = (selected.length !== 0) ?\n                    d3.min(selected) : -1;\n                var max_index = (selected.length !== 0) ?\n                    d3.max(selected) : that.model.mark_data.length;\n                if(index > max_index){\n                    _.range(max_index+1, index+1).forEach(function(i) {\n                        selected.push(i);\n                    });\n                } else if(index < min_index){\n                    _.range(index, min_index).forEach(function(i) {\n                        selected.push(i);\n                    });\n                }\n            } else if(accelKey) {\n                //If accel is pressed and the bar is not already selcted\n                //add the bar to the list of selected bars.\n                selected.push(index);\n            }\n            // updating the array containing the bar indexes selected\n            // and updating the style\n            else {\n                //if accel is not pressed, then clear the selected ones\n                //and set the current element to the selected\n                selected = [];\n                selected.push(index);\n            }\n        }\n        this.model.set(\"selected\",\n                       ((selected.length === 0) ? null : selected),\n                       {updated_view: this});\n        this.touch();\n        if(!d3.event) {\n            d3.event = window.event;\n        }\n        var e = d3.event;\n        if(e.cancelBubble !== undefined) { // IE\n            e.cancelBubble = true;\n        }\n        if(e.stopPropagation) {\n            e.stopPropagation();\n        }\n        e.preventDefault();\n    },\n\n    reset_selection: function() {\n        this.model.set(\"selected\", null);\n        this.selected_indices = null;\n        this.touch();\n    },\n\n    compute_view_padding: function() {\n        // //This function returns a dictionary with keys as the scales and\n        // //value as the pixel padding required for the rendering of the\n        // //mark.\n        var dom_scale = this.dom_scale;\n        var orient = this.model.get(\"orientation\");\n        var x_padding = 0;\n        var avail_space = (orient === \"vertical\" ) ? this.parent.plotarea_width: this.parent.plotarea_height;\n        if(dom_scale) {\n            if (this.x !== null && this.x !== undefined &&\n                this.x.domain().length !== 0) {\n                if(dom_scale.model.type !== \"ordinal\") {\n                    if (this.model.get(\"align\") === \"center\") {\n                        x_padding = (avail_space / (2.0 * this.x.domain().length) + 1);\n                    } else if (this.model.get(\"align\") === \"left\" ||\n                               this.model.get(\"align\") === \"right\") {\n                        x_padding = (avail_space / (this.x.domain().length) + 1);\n                    }\n                } else {\n                    if (this.model.get(\"align\") === \"left\" ||\n                        this.model.get(\"align\") === \"right\") {\n                        x_padding = ( this.x.rangeBand() / 2 ).toFixed(2);\n                    }\n                }\n            }\n        }\n        if (orient === \"vertical\") {\n            if(x_padding !== this.x_padding) {\n                this.x_padding = x_padding;\n                this.trigger(\"mark_padding_updated\");\n                //dispatch the event\n            }\n        } else {\n            if(x_padding !== this.y_padding) {\n                this.y_padding = x_padding;\n                this.trigger(\"mark_padding_updated\");\n                //dispatch the event\n            }\n        }\n    }\n});\n\n\nmodule.exports = {\n    Bars: Bars\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar HandDrawModel = basemodel.BaseModel.extend({\n\n\tdefaults: function() {\n        return _.extend(widgets.WidgetModel.prototype.defaults(), {\n            _model_name: \"HandDrawModel\",\n            _view_name: \"HandDraw\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n\t        lines: null,\n\t        line_index: 0,\n            min_x: null,\n            max_x: null\n        });\n    }\n}, {\n    serializers: _.extend({\n        lines:  { deserialize: widgets.unpack_models },\n    }, basemodel.BaseModel.serializers)\n});\n\nmodule.exports = {\n    HandDrawModel: HandDrawModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar mark = require(\"./Mark\");\n\nvar OHLC = mark.Mark.extend({\n\n    render: function() {\n        var base_creation_promise = OHLC.__super__.render.apply(this);\n\n        var that = this;\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        return base_creation_promise.then(function() {\n            that.create_listeners();\n            that.draw(); },\n        null);\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        var y_scale = this.scales.y;\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if(!this.model.dirty) { this.draw(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if(!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    create_listeners: function() {\n        OHLC.__super__.create_listeners.apply(this);\n        this.d3el.on(\"mouseover\", _.bind(this.mouse_over, this))\n            .on(\"mousemove\", _.bind(this.mouse_move, this))\n            .on(\"mouseout\", _.bind(this.mouse_out, this));\n\n        this.listenTo(this.model, \"change:stroke\", this.update_stroke, this);\n        this.listenTo(this.model, \"change:stroke_width\", this.update_stroke_width, this);\n        this.listenTo(this.model, \"change:colors\", this.update_colors, this);\n        this.listenTo(this.model, \"change:opacities\", this.update_opacities, this);\n        this.listenTo(this.model, \"change:marker\", this.update_marker, this);\n        this.listenTo(this.model, \"format_updated\", this.draw, this);\n        this.listenTo(this.model, \"data_updated\", this.draw);\n    },\n\n    update_stroke: function() {\n        var stroke = this.model.get(\"stroke\");\n        this.d3el.selectAll(\".stick\").style(\"stroke\", stroke);\n\n        if(this.legend_el) {\n            this.legend_el.selectAll(\"path\").style(\"stroke\", stroke);\n            this.legend_el.selectAll(\"text\").style(\"fill\", stroke);\n        }\n    },\n\n    update_stroke_width: function() {\n        var stroke_width = this.model.get(\"stroke_width\");\n        this.d3el.selectAll(\".stick\").attr(\"stroke-width\", stroke_width);\n    },\n\n    update_colors: function() {\n        var that = this;\n        var colors = this.model.get(\"colors\");\n        var up_color = (colors[0] ? colors[0] : \"none\");\n        var down_color = (colors[1] ? colors[1] : \"none\");\n\n        // Fill candles based on the opening and closing values\n        this.d3el.selectAll(\".stick\").style(\"fill\", function(d) {\n            return (d.y[that.model.px.o] > d.y[that.model.px.c] ?\n                down_color : up_color);\n        });\n\n        if(this.legend_el) {\n            this.legend_el.selectAll(\"path\").style(\"fill\", up_color);\n        }\n    },\n\n    update_opacities: function() {\n        var opacities = this.model.get(\"opacities\");\n        this.d3el.selectAll(\".stick\").style(\"opacity\", function(d, i) {\n            return opacities[i];\n        });\n\n        if(this.legend_el) {\n            this.legend_el.selectAll(\"path\")\n                .attr(\"opacity\", function(d, i) { return opacities[i]; });\n        }\n    },\n\n    update_marker: function() {\n        var marker = this.model.get(\"marker\");\n\n        if(this.legend_el && this.rect_dim) {\n            this.draw_legend_icon(this.rect_dim, this.legend_el);\n        }\n\n        // Redraw existing marks\n        this.draw_mark_paths(marker, this.d3el,\n            this.model.mark_data.map(function(d, index) {\n                return d[1];\n            }));\n    },\n\n    update_selected_colors: function(idx_start, idx_end) {\n        var stick_sel = this.d3el.selectAll(\".stick\");\n        var current_range = _.range(idx_start, idx_end + 1);\n        if(current_range.length == this.model.mark_data.length) {\n            current_range = [];\n        }\n        var that = this;\n        var stroke = this.model.get(\"stroke\");\n        var colors = this.model.get(\"colors\");\n        var up_color = (colors[0] ? colors[0] : stroke);\n        var down_color = (colors[1] ? colors[1] : stroke);\n        var px = this.model.px;\n\n        _.range(0, this.model.mark_data.length)\n         .forEach(function(d) {\n             that.d3el.selectAll(\"#stick\" + d)\n               .style(\"stroke\", stroke);\n         });\n\n        current_range.forEach(function(d) {\n            that.d3el.selectAll(\"#stick\" + d)\n                .style(\"stroke\", function(d) {\n                    return d[px.o] > d[px.c] ? down_color : up_color;\n                });\n        });\n    },\n\n    invert_range: function(start_pxl, end_pxl) {\n        if(start_pxl === undefined || end_pxl === undefined ||\n           this.model.mark_data.length === 0)\n        {\n            this.update_selected_colors(-1, -1);\n            selected = [];\n            return selected;\n        }\n\n        var indices = _.range(this.model.mark_data.length);\n        var that = this;\n        var selected = _.filter(indices, function(index) {\n            var elem = that.x_pixels[index];\n            return (elem >= start_pxl && elem <= end_pxl);\n        });\n\n        var x_scale = this.scales.x;\n        var idx_start = -1;\n        var idx_end = -1;\n        if(selected.length > 0 &&\n            (start_pxl !== x_scale.scale.range()[0] ||\n               end_pxl !== x_scale.scale.range()[1]))\n        {\n            idx_start = selected[0];\n            idx_end = selected[selected.length - 1];\n        }\n        this.update_selected_colors(idx_start, idx_end);\n        this.model.set(\"selected\", selected);\n        this.touch();\n        return selected;\n    },\n\n    invert_point: function(pixel) {\n        var x_scale = this.scales.x;\n        var point = 0;\n        var abs_diff = this.x_pixels.map(function(elem) { return Math.abs(elem - pixel); });\n        var sel_index = abs_diff.indexOf(d3.min(abs_diff));\n        this.update_selected_colors(sel_index, sel_index);\n        this.model.set(\"selected\", [sel_index]);\n        this.touch();\n        return sel_index;\n    },\n\n    draw: function() {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        this.set_ranges();\n        var colors = this.model.get(\"colors\");\n        var opacities = this.model.get(\"opacities\");\n        var up_color = (colors[0] ? colors[0] : \"none\");\n        var down_color = (colors[1] ? colors[1] : \"none\");\n        var px = this.model.px;\n        var stick = this.d3el.selectAll(\".stick\")\n            .data(this.model.mark_data.map(function(data, index) {\n                return {\n                    x: data[0],\n                    y: data[1],\n                    index: index\n                };\n            }));\n\n        // Create new\n        var new_sticks = stick.enter()\n            .append(\"g\")\n            .attr(\"class\", \"stick\")\n            .attr(\"id\", function(d, i) { return \"stick\" + i; })\n            .style(\"stroke\", this.model.get(\"stroke\"))\n            .style(\"opacity\", function(d, i) {\n                return opacities[i];\n            });\n\n        new_sticks.append(\"path\").attr(\"class\", \"stick_head\");\n        new_sticks.append(\"path\").attr(\"class\", \"stick_tail\");\n        new_sticks.append(\"path\").attr(\"class\", \"stick_body\");\n\n        stick.exit().remove();\n\n        var that = this;\n\n        // Determine offset to use for translation\n        var y_index  = px.h;\n        if(px.h === -1) {\n            y_index = px.o;\n        }\n        // Update all of the marks\n        this.d3el.selectAll(\".stick\")\n            .style(\"fill\", function(d, i) {\n                return (d.y[px.o] > d.y[px.c]) ? down_color : up_color;\n            })\n            .attr(\"stroke-width\", this.model.get(\"stroke_width\"));\n        if(x_scale.model.type === \"ordinal\") {\n            // If we are out of range, we just set the mark in the final\n            // bucket's range band. FIXME?\n            var x_max = d3.max(this.parent.range(\"x\"));\n            this.d3el.selectAll(\".stick\").attr( \"transform\", function(d, i) {\n                return \"translate(\" + ((x_scale.scale(that.model.mark_data[i][0]) !== undefined ?\n                                        x_scale.scale(that.model.mark_data[i][0]) : x_max) +\n                                        x_scale.scale.rangeBand()/2) + \",\" +\n                                      (y_scale.scale(d.y[y_index]) + y_scale.offset) + \")\";\n            });\n        } else {\n            this.d3el.selectAll(\".stick\").attr( \"transform\", function(d, i) {\n                 return \"translate(\" + (x_scale.scale(that.model.mark_data[i][0]) +\n                                     x_scale.offset) + \",\" +\n                                     (y_scale.scale(d.y[y_index]) +\n                                     y_scale.offset) + \")\";\n             });\n        }\n\n        // Draw the mark paths\n        this.draw_mark_paths(this.model.get(\"marker\"), this.d3el,\n            this.model.mark_data.map(function(d) {\n                return d[1];\n            }));\n\n        this.x_pixels = this.model.mark_data.map(function(el) {\n            return x_scale.scale(el[0]) + x_scale.offset;\n        });\n    },\n\n    draw_mark_paths: function(type, selector, dat) {\n        /* Calculate some values so that we can draw the marks\n         *      | <----- high (0,0)\n         *      |\n         *  --------- <- headline_top (open or close)\n         *  |       |\n         *  |       |\n         *  |       |\n         *  --------- <- headline_bottom (open or close)\n         *      |\n         *      | <----- low\n         *\n         *\n         *      | <----- high (0,0)\n         *  ____| <----- open\n         *      |\n         *      |\n         *      |\n         *      |____ <- close\n         *      | <----- low\n         */\n\n        var px = this.model.px;\n        var that = this;\n        var open = [];\n        var high = [];\n        var low = [];\n        var close = [];\n        var headline_top = [];\n        var headline_bottom = [];\n        var to_left_side = [];\n        var scaled_mark_widths = [];\n\n        var min_x_difference = this.calculate_mark_width();\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        var offset_in_x_units, data_point;\n\n        for(var i = 0; i < dat.length; i++) {\n            if(px.o === -1) {\n                open[i] = undefined;\n            } else {\n                open[i] = y_scale.scale(dat[i][px.o]);\n            }\n            if(px.c === -1) {\n                close[i] = undefined;\n            } else {\n                close[i] = y_scale.scale(dat[i][px.c]);\n            }\n            // We can only compute these (and only need to compute these)\n            // when we have both the open and the close values\n            if(px.o !== -1 && px.c !== -1) {\n                headline_top[i] = (dat[i][px.o] > dat[i][px.c]) ?\n                                        open[i] : close[i];\n                headline_bottom[i] = (dat[i][px.o] < dat[i][px.c]) ?\n                                        open[i] : close[i];\n            }\n\n            // We never have high without low and vice versa, so we can\n            // check everything at once\n            if(px.h === -1 || px.l === -1) {\n                high[i] = open[i];\n                low[i] = close[i];\n            } else {\n                high[i] = y_scale.scale(dat[i][px.h]);\n                low[i] = y_scale.scale(dat[i][px.l]);\n            }\n\n            data_point = that.model.mark_data[i][0];\n            // Check for dates so that we don't concatenate\n            if( min_x_difference instanceof Date) {\n                min_x_difference = min_x_difference.getTime();\n            }\n            if(data_point instanceof Date) {\n                data_point = data_point.getTime();\n            }\n            offset_in_x_units = data_point + min_x_difference;\n\n            if(x_scale.model.type === \"ordinal\") {\n                scaled_mark_widths[i] = x_scale.scale.rangeBand() * 0.75;\n            } else {\n                scaled_mark_widths[i] = (x_scale.scale(offset_in_x_units) -\n                                         x_scale.scale(data_point)) *\n                                         0.75;\n            }\n            to_left_side[i] = -1*scaled_mark_widths[i]/2;\n        }\n\n        // Determine OHLC marker type\n        // Note: if we do not have open or close data then we have to draw\n        // a bar.\n        if(type == \"candle\" && px.o !== -1 && px.c !== -1) {\n            /*\n             *      | <-------- head\n             *  ---------\n             *  |       |\n             *  |       | <---- body\n             *  |       |\n             *  ---------\n             *      | <-------- tail\n             */\n            if(px.h !== -1 || px.l !== -1) {\n                selector.selectAll(\".stick_head\")\n                    .attr(\"d\", function(d, i) {\n                        return that.head_path_candle(headline_top[i] - high[i]);\n                    });\n                selector.selectAll(\".stick_tail\")\n                    .attr(\"d\", function(d, i) {\n                        return that.tail_path_candle(headline_bottom[i] - high[i],\n                                                     low[i] - headline_bottom[i]);\n                    });\n            } else {\n                selector.selectAll(\".stick_head\").attr(\"d\", \"\");\n                selector.selectAll(\".stick_tail\").attr(\"d\", \"\");\n            }\n            selector.selectAll(\".stick_body\")\n                .attr(\"d\", function(d, i) {\n                    return that.body_path_candle(to_left_side[i],\n                                                 open[i] - high[i],\n                                                 scaled_mark_widths[i],\n                                                 close[i] - open[i]);\n              });\n        } else {\n            // bar\n            /*\n             *      |\n             *  ____| <-------- head (horizontal piece)\n             *      |\n             *      | <-------- body (vertical piece)\n             *      |\n             *      |____ <---- tail (horizontal piece)\n             *      |\n             */\n            if(px.o !== -1) {\n                selector.selectAll(\".stick_head\")\n                    .attr(\"d\", function(d, i) {\n                    return that.head_path_bar(to_left_side[i],\n                                              open[i] - high[i],\n                                              to_left_side[i]*-1);\n                });\n            } else {\n                selector.selectAll(\".stick_head\").attr(\"d\", \"\");\n            }\n            if(px.c !== -1) {\n                selector.selectAll(\".stick_tail\")\n                    .attr(\"d\", function(d, i) {\n                    return that.tail_path_bar(close[i] - high[i],\n                                              to_left_side[i]*-1);\n                });\n            } else {\n                selector.selectAll(\".stick_tail\").attr(\"d\", \"\");\n            }\n            selector.selectAll(\".stick_body\")\n                .attr(\"d\", function(d, i) {\n                return that.body_path_bar(low[i]-high[i]);\n             });\n        }\n    },\n\n    /* SVG path for head of candle */\n    head_path_candle: function(height) {\n        return \"m0,0 l0,\" + height;\n    },\n\n    /* SVG path for tail of candle */\n    tail_path_candle: function(y_offset, height) {\n        return \"m0,\" + y_offset + \" l0,\" + height;\n    },\n\n    /* SVG path for body of candle */\n    body_path_candle: function(x_offset, y_offset, width, height) {\n        return \"m\" + x_offset + \",\" + y_offset + \" l\" + width + \",0\" +\n            \" l0,\" + height + \" l\" + (-1*width) + \",0\" + \" z\";\n    },\n\n    /* SVG path for head of bar */\n    head_path_bar: function(x_offset, y_offset, width) {\n        return \"m\" + x_offset + \",\" + y_offset +\n              \" l\" + width + \",0\";\n    },\n\n    /* SVG path for tail of bar */\n    tail_path_bar: function(y_offset, width) {\n        return \"m0,\" + y_offset +\n                \" l\" + width + \",0\";\n    },\n\n    /* SVG path for body of bar */\n    body_path_bar: function(height) {\n        return \"m0,0 l0,\" + height;\n    },\n\n    calculate_mark_width: function() {\n        /*\n         * Calculate the mark width for this data set based on the minimum\n         * distance between consecutive points.\n         */\n        var that = this;\n        var min_distance = Number.POSITIVE_INFINITY;\n        var sum = 0;\n        var average_height = 0;\n        var scales = this.model.get(\"scales\");\n        var x_scale = scales.x;\n\n        for(var i = 1; i < that.model.mark_data.length; i++) {\n            var dist = that.model.mark_data[i][0] -\n                       that.model.mark_data[i-1][0];\n            if(dist < min_distance) min_distance = dist;\n        }\n        // Check if there are less than two data points\n        if(min_distance === Number.POSITIVE_INFINITY) {\n            min_distance = (x_scale.domain[1] -\n                            x_scale.domain[0]) / 2;\n        }\n        if(min_distance < 0) {\n            min_distance = -1 * min_distance;\n        }\n        return min_distance;\n    },\n\n    relayout: function() {\n        OHLC.__super__.relayout.apply(this);\n        this.set_ranges();\n        this.d3el.select(\".intselmouse\")\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height);\n\n        // We have to redraw every time that we relayout\n        this.draw();\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        var stroke = this.model.get(\"stroke\");\n        var colors = this.model.get(\"colors\");\n        var up_color = (colors[0] ? colors[0] : \"none\");\n        var down_color = (colors[1] ? colors[1] : \"none\");\n        this.rect_dim = inter_y_disp * 0.8;\n        var that = this;\n\n        this.legend_el = elem.selectAll(\"#legend\" + this.uuid)\n                             .data([this.model.mark_data]);\n\n        var leg = this.legend_el.enter().append(\"g\")\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp) + \")\";\n            })\n            .attr(\"class\", \"legend\")\n            .attr(\"id\", \"legend\" + this.uuid)\n            .style(\"fill\", up_color)\n            .on(\"mouseover\", _.bind(this.highlight_axes, this))\n            .on(\"mouseout\", _.bind(this.unhighlight_axes, this));\n\n        leg.append(\"path\").attr(\"class\", \"stick_head stick\");\n        leg.append(\"path\").attr(\"class\", \"stick_tail stick\");\n        leg.append(\"path\").attr(\"class\", \"stick_body stick\")\n                          .style(\"fill\", up_color);\n\n        // Add stroke color and set position\n        leg.selectAll(\"path\")\n            .style(\"stroke\", stroke)\n            .attr(\"transform\", \"translate(\" + (that.rect_dim/2) + \",0)\");\n\n        // Draw icon and text\n        this.draw_legend_icon(that.rect_dim, leg);\n        this.legend_el.append(\"text\")\n            .attr(\"class\", \"legendtext sticktext\")\n            .attr(\"x\", that.rect_dim * 1.2)\n            .attr(\"y\", that.rect_dim / 2)\n            .attr(\"dy\", \"0.35em\")\n            .text(function(d, i) { return that.model.get(\"labels\")[i]; })\n            .style(\"fill\", stroke);\n\n        var max_length = d3.max(this.model.get(\"labels\"), function(d) {\n            return d.length;\n        });\n\n        this.legend_el.exit().remove();\n        return [1, max_length];\n    },\n\n    draw_legend_icon: function(size, selector) {\n        /*\n         * Draw OHLC icon next to legend text\n         * Drawing the icon like this means we can avoid scaling when we\n         * already know what the size of the mark is in pixels\n         */\n        var height = size;\n        var width = size / 2;\n        var bottom_y_offset = size * 3 / 4;\n        var top_y_offset = size / 4;\n        if(this.model.get(\"marker\") === \"candle\") {\n            selector.selectAll(\".stick_head\").attr(\"d\",\n                this.head_path_candle(width/2));\n            selector.selectAll(\".stick_tail\").attr(\"d\",\n                this.tail_path_candle(bottom_y_offset, width/2));\n            selector.selectAll(\".stick_body\").attr(\"d\",\n                this.body_path_candle(width * -1/2, top_y_offset, width,\n                                      height / 2));\n        } else { // bar\n            selector.selectAll(\".stick_head\").attr(\"d\",\n                this.head_path_bar(width * -1/2, bottom_y_offset, width/2));\n            selector.selectAll(\".stick_tail\").attr(\"d\",\n                this.tail_path_bar(top_y_offset, width/2));\n            selector.selectAll(\".stick_body\").attr(\"d\",\n                this.body_path_bar(height));\n        }\n    }\n});\n\nmodule.exports = {\n    OHLC: OHLC\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar BarsModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"BarsModel\",\n            _view_name: \"Bars\",\n            x: [],\n            y: [],\n            color: null,\n            scales_metadata: {\n                x: { orientation: \"horizontal\", dimension: \"x\" },\n                y: { orientation: \"vertical\", dimension: \"y\" },\n                color: { dimension: \"color\" }\n            },\n            color_mode: \"auto\",\n            type: \"stacked\",\n            colors: d3.scale.category10().range(),\n            padding: 0.05,\n            stroke: null,\n            base: 0.0,\n            opacities: [],\n            orientation: \"vertical\",\n            align: \"center\"\n        });\n    },\n\n    initialize: function() {\n        BarsModel.__super__.initialize.apply(this, arguments);\n        this.is_y_2d = false;\n        this.on_some_change([\"x\", \"y\", \"base\"], this.update_data, this);\n        this.on(\"change:color\", function() {\n            this.update_color();\n            this.trigger(\"colors_updated\");\n        }, this);\n        // FIXME: replace this with on(\"change:preserve_domain\"). It is not done here because\n        // on_some_change depends on the GLOBAL backbone on(\"change\") handler which\n        // is called AFTER the specific handlers on(\"change:foobar\") and we make that\n        // assumption.\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n        this.update_color();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        var x_data = this.get_typed_field(\"x\");\n        var y_data = this.get_typed_field(\"y\");\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x;\n        var y_scale = scales.y;\n        y_data = (y_data.length === 0 || y_data[0] instanceof Array) ?\n            y_data : [y_data];\n        var that = this;\n\n        this.base_value = this.get(\"base\");\n        if(this.base_value === undefined || this.base_value === null) {\n            this.base_value = 0;\n        }\n\n        if (x_data.length === 0 || y_data.length === 0) {\n            this.mark_data = [];\n            this.is_y_2d = false;\n        }\n        else {\n            x_data = x_data.slice(0, d3.min(y_data.map(function(d) {\n                return d.length;\n            })));\n            this.mark_data = x_data.map(function (x_elem, index) {\n                var data = {};\n                var y0 = that.base_value;\n                var y0_neg = that.base_value;\n                var y0_left = that.base_value;\n                data.key = x_elem;\n                data.values = y_data.map(function(y_elem, y_index) {\n                    var value = y_elem[index] - that.base_value;\n                    var positive = (value >= 0);\n                    return {\n                        index: index,\n                        sub_index: y_index,\n                        x: x_elem,\n                        // In the following code, the values y0, y1 are\n                        // only relevant for a stacked bar chart. grouped\n                        // bars only deal with base_value and y.\n\n                        // y0 is the value on the y scale for the upper end\n                        // of the bar.\n                        y0: (positive) ? y0 : (function() {\n                            y0_left += value;\n                            return y0_left\n                        }()),\n                        // y1 is the value on the y scale for the lower end\n                        // of the bar.\n                        y1: (positive) ? (y0 += value) : (function() {\n                            y0_neg += value;\n                            return (y0_neg - value);\n                        }()),\n                        // y_ref is the value on the y scale which represents\n                        // the height of the bar\n                        y_ref: value,\n                        y: y_elem[index],\n                    };\n                });\n                // pos_max is the maximum positive value for a group of\n                // bars.\n                data.pos_max = y0;\n                // neg_max is the minimum negative value for a group of\n                // bars.\n                data.neg_max = y0_neg;\n                return data;\n            });\n            this.is_y_2d = (this.mark_data[0].values.length > 1);\n            this.update_color();\n        }\n        this.update_domains();\n        this.trigger(\"data_updated\");\n    },\n\n    get_data_dict: function(data, index, sub_index) {\n        return data;\n    },\n\n    update_color: function() {\n        //Function to update the color attribute for the data. In scatter,\n        //this is taken care of by the update_data itself. This is separate\n        //in bars because update data does a lot more complex calculations\n        //which should be avoided when possible\n        if(!this.mark_data) {\n            return;\n        }\n        var color = this.get_typed_field(\"color\");\n        var color_scale = this.get(\"scales\").color;\n        var color_mode = this.get(\"color_mode\");\n        var apply_color_to_groups = ((color_mode === \"group\") ||\n                                     (color_mode === \"auto\" && !(this.is_y_2d)));\n        this.mark_data.forEach(function(single_bar_d, bar_grp_index) {\n            single_bar_d.values.forEach(function(bar_d, bar_index) {\n                bar_d.color_index = (apply_color_to_groups) ? bar_grp_index : bar_index;\n                bar_d.color = color[bar_d.color_index];\n            });\n        });\n        if(color_scale && color.length > 0) {\n                if(!this.get(\"preserve_domain\").color) {\n                    color_scale.compute_and_set_domain(color, this.model_id + \"_color\");\n                } else {\n                    color_scale.del_domain([], this.model_id + \"_color\");\n                }\n        }\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var scales = this.get(\"scales\");\n        var orient = this.get(\"orientation\");\n        var dom_scale = scales.x;\n        var range_scale = scales.y;\n\n        if(!this.get(\"preserve_domain\").x) {\n            dom_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                return elem.key;\n            }), this.model_id + \"_x\");\n        }\n        else {\n            dom_scale.del_domain([], this.model_id + \"_x\");\n        }\n\n        if(!this.get(\"preserve_domain\").y) {\n            if(this.get(\"type\") === \"stacked\") {\n                range_scale.compute_and_set_domain([d3.min(this.mark_data, function(c) { return c.neg_max; }),\n                                                d3.max(this.mark_data, function(c) { return c.pos_max; }), this.base_value],\n                                                this.model_id + \"_y\");\n            } else {\n                var min = d3.min(this.mark_data,\n                    function(c) {\n                        return d3.min(c.values, function(val) {\n                            return val.y_ref;\n                        });\n                    });\n                var max = d3.max(this.mark_data, function(c) {\n                    return d3.max(c.values, function(val) {\n                        return val.y_ref;\n                    });\n                });\n                range_scale.compute_and_set_domain([min, max, this.base_value], this.model_id + \"_y\");\n            }\n        } else {\n            range_scale.del_domain([], this.model_id + \"_y\");\n        }\n    }\n});\n\n\nmodule.exports = {\n    BarsModel: BarsModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar utils = require(\"./utils\");\nvar mark = require(\"./Mark\");\n\nvar Hist = mark.Mark.extend({\n\n    render: function() {\n        var base_creation_promise = Hist.__super__.render.apply(this);\n        this.bars_selected = [];\n\n        this.display_el_classes = [\"rect\", \"legendtext\"];\n\n        var that = this;\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        return base_creation_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.draw();\n            that.update_selected(that.model, that.model.get(\"selected\"));\n        });\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.sample;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        var y_scale = this.scales.count;\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n        // In the case of Hist, a change in the \"sample\" scale triggers\n        // a full \"update_data\" instead of a simple redraw.\n        var x_scale = this.scales.sample,\n            y_scale = this.scales.count;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.model.update_data(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    create_listeners: function() {\n        Hist.__super__.create_listeners.apply(this);\n        this.d3el.on(\"mouseover\", _.bind(function() { this.event_dispatcher(\"mouse_over\"); }, this))\n            .on(\"mousemove\", _.bind(function() { this.event_dispatcher(\"mouse_move\"); }, this))\n            .on(\"mouseout\", _.bind(function() { this.event_dispatcher(\"mouse_out\"); }, this));\n\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n        this.listenTo(this.model, \"data_updated\", this.draw, this);\n        this.listenTo(this.model, \"change:colors\",this.update_colors,this);\n        this.model.on_some_change([\"stroke\", \"opacities\"], this.update_stroke_and_opacities, this);\n        this.listenTo(this.model, \"change:selected\", this.update_selected, this);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        } else {\n            if(interactions.click !== undefined &&\n              interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click === \"select\") {\n                    this.event_listeners.parent_clicked = this.reset_selection;\n                    this.event_listeners.element_clicked = this.bar_click_handler;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n            if(interactions.legend_click !== undefined &&\n              interactions.legend_click !== null) {\n                if(interactions.legend_click === \"tooltip\") {\n                    this.event_listeners.legend_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                }\n            } else {\n                this.event_listeners.legend_clicked = function() {};\n            }\n            if(interactions.legend_hover !== undefined &&\n              interactions.legend_hover !== null) {\n                if(interactions.legend_hover === \"highlight_axes\") {\n                    this.event_listeners.legend_mouse_over = _.bind(this.highlight_axes, this);\n                    this.event_listeners.legend_mouse_out = _.bind(this.unhighlight_axes, this);\n                }\n            } else {\n                this.reset_legend_hover();\n            }\n        }\n    },\n\n    update_colors: function(model, colors) {\n        this.d3el.selectAll(\".bargroup\").selectAll(\"rect\")\n          .style(\"fill\", this.get_colors(0));\n        if (model.get(\"labels\") && colors.length > 1) {\n            this.d3el.selectAll(\".bargroup\").selectAll(\"text\")\n              .style(\"fill\", this.get_colors(1));\n        }\n        if (this.legend_el) {\n            this.legend_el.selectAll(\"rect\")\n              .style(\"fill\", this.get_colors(0));\n            this.legend_el.selectAll(\"text\")\n              .style(\"fill\", this.get_colors(0));\n        }\n    },\n\n    update_stroke_and_opacities: function() {\n        var stroke = this.model.get(\"stroke\");\n        var opacities = this.model.get(\"opacities\");\n        this.d3el.selectAll(\".rect\")\n          .style(\"stroke\", stroke)\n          .style(\"opacity\", function(d, i) {\n                return opacities[i];\n          });\n    },\n\n    calculate_bar_width: function() {\n        var x_scale = this.scales.sample;\n        var bar_width = (x_scale.scale(this.model.max_x) -\n                         x_scale.scale(this.model.min_x)) / this.model.num_bins;\n        if (bar_width >= 10) {\n            bar_width -= 2;\n        }\n        return bar_width;\n    },\n\n    relayout: function() {\n        this.set_ranges();\n\n        var x_scale = this.scales.sample,\n            y_scale = this.scales.count;\n        this.d3el.selectAll(\".bargroup\")\n            .attr(\"transform\", function(d) {\n              return \"translate(\" + x_scale.scale(d.x) +\n                              \",\" + y_scale.scale(d.y) + \")\";\n            });\n        var bar_width = this.calculate_bar_width();\n        this.d3el.selectAll(\".bargroup\").select(\"rect\")\n          .transition(\"relayout\")\n          .duration(this.parent.model.get(\"animation_duration\"))\n          .attr(\"x\", 2)\n          .attr(\"width\", bar_width)\n          .attr(\"height\", function(d) {\n              return y_scale.scale(0) - y_scale.scale(d.y);\n          });\n    },\n\n    draw: function() {\n        this.set_ranges();\n        var colors = this.model.get(\"colors\");\n        var fill_color = colors[0];\n        var select_color = (colors.length > 1) ? colors[1] : \"red\";\n\n        var indices = [];\n        this.model.mark_data.forEach(function(d, i) {\n            indices.push(i);\n        });\n\n        var x_scale = this.scales.sample,\n            y_scale = this.scales.count;\n        var that = this;\n        var bar_width = this.calculate_bar_width();\n        var bar_groups = this.d3el.selectAll(\".bargroup\")\n            .data(this.model.mark_data);\n\n        var bars_added = bar_groups.enter()\n          .append(\"g\")\n          .attr(\"class\",\"bargroup\");\n\n        // initial values for width and height are set for animation\n        bars_added.append(\"rect\")\n          .attr(\"class\", \"rect\")\n          .attr(\"x\", 2)\n          .attr(\"width\", 0)\n          .attr(\"height\", 0);\n\n        bar_groups.attr(\"transform\", function(d) {\n              return \"translate(\" + x_scale.scale(d.x) + \",\" +\n                                    y_scale.scale(d.y) + \")\";\n          });\n\n        bar_groups.select(\".rect\")\n          .style(\"fill\", fill_color)\n          .on(\"click\", function(d, i) {\n              return that.event_dispatcher(\"element_clicked\", {\n                  \"data\": d, \"index\": i\n              });\n          })\n          .attr(\"id\", function(d, i) { return \"rect\" + i; })\n          .transition(\"draw\")\n          .duration(this.parent.model.get(\"animation_duration\"))\n          .attr(\"width\", bar_width)\n          .attr(\"height\", function(d) {\n              return y_scale.scale(0) - y_scale.scale(d.y);\n          });\n\n        bar_groups.exit().remove();\n\n        //bin_pixels contains the pixel values of the start points of each\n        //of the bins and the end point of the last bin.\n        this.bin_pixels = this.model.x_bins.map(function(el) {\n            return x_scale.scale(el) + x_scale.offset;\n        });\n        // pixel coords contains the [x0, x1] and [y0, y1] of each bin\n        this.pixel_coords = this.model.mark_data.map(function(d) {\n            var x = x_scale.scale(d.x);\n            return [[x, x+bar_width], [0, d.y].map(y_scale.scale)];\n        });\n        this.update_stroke_and_opacities();\n    },\n\n    bar_click_handler: function (args) {\n        var data = args.data;\n        var index = args.index;\n        //code repeated from bars. We should unify the two.\n        var that = this;\n        var idx = this.bars_selected;\n        var selected = idx ? utils.deepCopy(idx) : [];\n        // index of bar i. Checking if it is already present in the list.\n        var elem_index = selected.indexOf(index);\n        // Replacement for \"Accel\" modifier.\n        var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n        if(elem_index > -1 && accelKey) {\n            // if the index is already selected and if accel key is\n            // pressed, remove the element from the list\n            selected.splice(elem_index, 1);\n        } else {\n            if(d3.event.shiftKey) {\n                //If shift is pressed and the element is already\n                //selected, do not do anything\n                if(elem_index > -1) {\n                    return;\n                }\n                //Add elements before or after the index of the current\n                //bar which has been clicked\n                var min_index = (selected.length !== 0) ?\n                    d3.min(selected) : -1;\n                var max_index = (selected.length !== 0) ?\n                    d3.max(selected) : that.model.mark_data.length;\n                if(index > max_index){\n                    _.range(max_index+1, index+1).forEach(function(i) {\n                        selected.push(i);\n                    });\n                } else if(index < min_index){\n                    _.range(index, min_index).forEach(function(i) {\n                        selected.push(i);\n                    });\n                }\n            } else if(accelKey) {\n                //If accel is pressed and the bar is not already selcted\n                //add the bar to the list of selected bars.\n                selected.push(index);\n            }\n            // updating the array containing the bar indexes selected\n            // and updating the style\n            else {\n                //if accel is not pressed, then clear the selected ones\n                //and set the current element to the selected\n                selected = [];\n                selected.push(index);\n            }\n        }\n        this.bars_selected = selected;\n        this.model.set(\"selected\", ((selected.length === 0) ? null :\n                                     this.calc_data_indices(selected)),\n                                    {updated_view: this});\n        this.touch();\n        if(!d3.event) {\n            d3.event = window.event;\n        }\n        var e = d3.event;\n        if(e.cancelBubble !== undefined) { // IE\n            e.cancelBubble = true;\n        }\n        if(e.stopPropagation) {\n            e.stopPropagation();\n        }\n        e.preventDefault();\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        this.legend_el = elem.selectAll(\".legend\" + this.uuid)\n            .data([this.model.mark_data[0]]);\n\n        var that = this;\n        var rect_dim = inter_y_disp * 0.8;\n        this.legend_el.enter()\n          .append(\"g\")\n            .attr(\"class\", \"legend\" + this.uuid)\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp)  + \")\";\n            })\n            .on(\"mouseover\", _.bind(function() {\n               this.event_dispatcher(\"legend_mouse_over\");\n            }, this))\n            .on(\"mouseout\", _.bind(function() {\n               this.event_dispatcher(\"legend_mouse_out\");\n            }, this))\n            .on(\"click\", _.bind(function() {\n               this.event_dispatcher(\"legend_clicked\");\n            }, this))\n          .append(\"rect\")\n            .style(\"fill\", function(d, i) {\n                return that.get_colors(i);\n            })\n            .attr({\n                x: 0,\n                y: 0,\n                width: rect_dim,\n                height: rect_dim\n            });\n\n        this.legend_el.append(\"text\")\n          .attr(\"class\",\"legendtext\")\n          .attr(\"x\", rect_dim * 1.2)\n          .attr(\"y\", rect_dim / 2)\n          .attr(\"dy\", \"0.35em\")\n          .text(function(d, i) {\n              return that.model.get(\"labels\")[i];\n          })\n          .style(\"fill\", function(d,i) {\n              return that.get_colors(i);\n          });\n\n        var max_length = d3.max(this.model.get(\"labels\"), function(d) {\n            return d.length;\n        });\n\n        this.legend_el.exit().remove();\n        return [1, max_length];\n    },\n\n    reset_colors: function(index, color) {\n        var rects = this.d3el.selectAll(\"#rect\"+index);\n        rects.style(\"fill\", color);\n    },\n\n    update_selected: function(model, value) {\n        if(value === undefined || value === null || value.length === 0) {\n            //reset the color of everything if selected is blank\n            this.update_selected_colors([]);\n            return;\n        } else {\n            var indices = this.calc_bar_indices_from_data_idx(value);\n            this.update_selected_colors(indices);\n        }\n    },\n\n    update_selected_colors: function(indices) {\n        // listen to changes of selected and draw itself\n        var colors = this.model.get(\"colors\");\n        var select_color = colors.length > 1 ? colors[1] : \"red\";\n        var fill_color = colors[0];\n        var bars_sel = this.d3el.selectAll(\".bargroup\");\n        var that = this;\n        _.difference(_.range(0, this.model.num_bins), indices)\n            .forEach(function(d) {\n                that.d3el.selectAll(\"#rect\" + d).style(\"fill\", fill_color);\n            });\n        indices.forEach(function(d) {\n            that.d3el.selectAll(\"#rect\" + d).style(\"fill\", select_color);\n        });\n    },\n\n    invert_point: function(pixel) {\n        // Sets the selected to the data contained in the bin closest\n        // to the value of the pixel.\n        // Used by Index Selector.\n        if(pixel === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return;\n        }\n\n        var bar_width = this.calculate_bar_width();\n        var x_scale = this.scales.sample;\n\n        //adding \"bar_width / 2.0\" to bin_pixels as we need to select the\n        //bar whose center is closest to the current location of the mouse.\n        var abs_diff = this.bin_pixels.map(function(elem) {\n            return Math.abs(elem + bar_width / 2.0 - pixel);\n        });\n        var sel_index = abs_diff.indexOf(d3.min(abs_diff));\n        this.model.set(\"selected\", this.calc_data_indices([sel_index]));\n        this.touch();\n    },\n\n    selector_changed: function(point_selector, rect_selector) {\n        if(point_selector === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return [];\n        }\n        var pixels = this.pixel_coords;\n        var indices = _.range(pixels.length);\n        var selected_bins = _.filter(indices, function(index) {\n            return rect_selector(pixels[index]);\n        });\n        this.model.set(\"selected\", this.calc_data_indices(selected_bins));\n        this.touch();\n    },\n\n    calc_data_indices: function(indices) {\n        //input is a list of indices corresponding to the bars. Output is\n        //the list of indices in the data\n        var intervals = this.reduce_intervals(indices);\n        if(intervals.length === 0) {\n            return [];\n        }\n\n        var x_data = this.model.get_typed_field(\"sample\");\n        var num_intervals = intervals.length;\n        var selected = _.filter(_.range(x_data.length), function(index) {\n            var elem = x_data[index];\n            var iter = 0;\n            for(iter=0; iter < num_intervals; iter++) {\n                if(elem <= intervals[iter][1] && elem >= intervals[iter][0]) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        return selected;\n    },\n\n    reduce_intervals: function(indices) {\n        //for a series of indices, reduces them to the minimum possible\n        //intervals on which the search can be performed.\n        //return value is an array of arrays containing the start and end\n        //points of the intervals represented by the indices.\n        var intervals = [];\n        if(indices.length !== 0) {\n            indices.sort();\n            var start_index = indices[0],\n                end_index = indices[0];\n            var iter = 1;\n            for(; iter < indices.length; iter++) {\n                if(indices[iter] === (end_index + 1)) {\n                    end_index++;\n                } else {\n                    intervals.push([this.model.x_bins[start_index],\n                                    this.model.x_bins[end_index + 1]]);\n                    start_index = end_index = indices[iter];\n                }\n            }\n            intervals.push([this.model.x_bins[start_index],\n                            this.model.x_bins[end_index + 1]]);\n        }\n        return intervals;\n    },\n\n    calc_data_indices_from_data_range: function(start_pixel, end_pixel) {\n        //Input is pixel values and output is the list of indices for which\n        //the `sample` value lies in the interval\n        var x_scale = this.scales.sample;\n\n        var idx_start = d3.max([0, d3.bisectLeft(this.bin_pixels, start_pixel) - 1]);\n        var idx_end = d3.min([this.model.num_bins, d3.bisectRight(this.bin_pixels, end_pixel)]);\n\n        var x_data = this.model.get_typed_field(\"sample\");\n        var that = this;\n        return _.filter(_.range(x_data.length), function(iter) {\n            return (x_data[iter] >= that.model.x_bins[idx_start] &&\n                    x_data[iter] <= that.model.x_bins[idx_end]);\n        });\n    },\n\n    calc_bar_indices_from_data_idx: function(selected) {\n        //function to calculate bar indices for a given list of data\n        //indices\n        var x_data = this.model.get_typed_field(\"sample\");\n        var data = selected.map(function(idx) {\n            return x_data[idx];\n        });\n        var bar_indices = [];\n        for(var iter = 0; iter < data.length; iter++) {\n            //x_bins is of length num_bars+1. So if the max element is\n            //selected, we get a bar index which is equal to num_bars.\n            var index = Math.min(_.indexOf(this.model.x_bins, data[iter], true),\n                                 this.model.x_bins.length - 2);\n            //if the data point is not one of the bins, then find the index\n            //where it is to be inserted.\n            if(index === -1) {\n                index = _.sortedIndex(this.model.x_bins, data[iter]) - 1;\n            }\n            bar_indices.push(index);\n        }\n        bar_indices.sort();\n        bar_indices = _.uniq(bar_indices, true);\n        return bar_indices;\n    },\n\n    reset_selection: function() {\n        this.bars_selected = [];\n        this.model.set(\"selected\", null);\n        this.touch();\n    }\n});\n\nmodule.exports = {\n    Hist: Hist\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar OHLCModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"OHLCModel\",\n            _view_name: \"OHLC\",\n\n            x: [],\n            y: [],\n            scales_metadata: {\n                x: { orientation: \"horizontal\", dimension: \"x\" },\n                y: { orientation: \"vertical\", dimension: \"y\" }\n            },\n            stroke: null,\n            box_fill_color: \"dodgerblue\",\n            outlier_fill_color: \"gray\",\n            opacities: []\n        });\n    },\n\n    initialize: function() {\n        OHLCModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"x\", \"y\"], this.update_data, this);\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.on(\"change:format\", this.update_format, this);\n        this.px = { o: -1, h: -1, l: -1, c: -1 };\n        this.mark_data = [];\n        this.display_el_classes = [\"stick_body\"] ;\n        this.update_data();\n        this.update_domains();\n        this.update_format();\n    },\n\n    update_format: function() {\n        this.update_data();\n        this.trigger(\"format_updated\");\n    },\n\n    update_data: function() {\n        var x_data = this.get_typed_field(\"x\");\n        var y_data = this.get_typed_field(\"y\");\n        var format = this.get(\"format\");\n\n        // Local private function to report errors in format\n        function print_bad_format(format) {\n            if(console) {\n                console.error(\"Invalid OHLC format: '\" + format + \"'\");\n            }\n        }\n\n        // Generate positional map and check for duplicate characters\n        this.px = format.toLowerCase().split(\"\")\n            .reduce(function(dict, key, val) {\n                if(dict[key] !== -1) {\n                    print_bad_format(format);\n                    x_data = [];\n                    y_data = [];\n                }\n                dict[key] = val;\n                return dict;\n            }, { o: -1, h: -1, l: -1, c: -1 });\n\n        // We cannot have high without low and vice versa\n        if((this.px.h !== -1 && this.px.l === -1) ||\n           (this.px.h === -1 && this.px.l !== -1) ||\n            format.length < 2 || format.length > 4)\n        {\n            print_bad_format(format);\n            x_data = [];\n            y_data = [];\n        } else {\n            // Verify that OHLC data is valid\n            var that = this;\n            var px = this.px;\n            if((this.px.h !== -1 &&\n               !y_data.every(function(d) {\n                return (d[px.h] === d3.max(d) &&\n                        d[px.l] === d3.min(d)); })) || !y_data.every(function(d) {\n                return d.length === format.length; }))\n            {\n                x_data = [];\n                y_data = [];\n                if(console) console.error(\"Invalid OHLC data\");\n            }\n        }\n\n        // Make x and y data the same length\n        if(x_data.length > y_data.length) {\n            x_data = x_data.slice(0, y_data.length);\n        } else if(x_data.length < y_data.length) {\n            y_data = y_data.slice(0, x_data.length);\n        }\n\n        this.mark_data = _.zip(x_data, y_data);\n        this.mark_data.forEach(function(elem, i) { elem.index = i;});\n        this.update_domains();\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var that = this;\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x, y_scale = scales.y;\n        var min_x_dist = Number.POSITIVE_INFINITY;\n        var max_y_height = 0, dist = 0, height = 0;\n\n        /*\n         * Compute the minimum x distance between the data points. We will\n         * use this to pad either side of the x domain.\n         * Also compute the maximum height of all of the marks (i.e. maximum\n         * distance from high to low) and use that to pad the y domain.\n         */\n        for(var i = 0; i < this.mark_data.length; i++) {\n            if(i > 0) {\n                dist = this.mark_data[i][0] - this.mark_data[i-1][0];\n                if(dist < min_x_dist) min_x_dist = dist;\n            }\n            height = this.mark_data[i][this.px.h] -\n                        this.mark_data[i][this.px.l];\n            if(height > max_y_height) max_y_height = height;\n        }\n        if(this.mark_data.length < 2) {\n            min_x_dist = 0;\n        }\n\n        var min, max;\n        // X Scale\n        if((!this.get(\"preserve_domain\").x) && this.mark_data.length !== 0) {\n            if(x_scale.type === \"ordinal\") {\n                x_scale.compute_and_set_domain(\n                    this.mark_data.map(function(d) { return d[0]; })\n                );\n            } else {\n                min = d3.min(this.mark_data.map(function(d) {\n                    return d[0];\n                }));\n                max = d3.max(this.mark_data.map(function(d) {\n                    return d[0];\n                }));\n                if(max instanceof Date) max = max.getTime();\n                x_scale.set_domain([min - min_x_dist/2, max + min_x_dist/2], this.model_id + \"_x\");\n            }\n        } else {\n            x_scale.del_domain([], this.model_id + \"_x\");\n        }\n\n        // Y Scale\n        if((!this.get(\"preserve_domain\").y) && this.mark_data.length !== 0) {\n            // Remember that elem contains OHLC data here so we cannot use\n            // compute_and_set_domain\n            var top = this.px.h;\n            var bottom = this.px.l;\n            if(top === -1 || bottom === -1) {\n                top = this.px.o;\n                bottom = this.px.c;\n            }\n            min = d3.min(this.mark_data.map(function(d) {\n                return (d[1][bottom] < d[1][top]) ? d[1][bottom] : d[1][top];\n            }));\n            max = d3.max(this.mark_data.map(function(d) {\n                return (d[1][top] > d[1][bottom]) ? d[1][top] : d[1][bottom];\n            }));\n            if(max instanceof  Date) max = max.getTime();\n            y_scale.set_domain([min - max_y_height, max + max_y_height], this.model_id + \"_y\");\n        } else {\n            y_scale.del_domain([], this.model_id + \"_y\");\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        var that = this;\n        var return_val ={};\n        return_val.index = index;\n        return_val.x = data.x;\n        [\"open\", \"low\", \"high\", \"close\"].forEach(function(str) {\n            return_val[str] = data.y[that.px[str.substr(0, 1)]];\n        });\n        return return_val;\n    },\n});\n\nmodule.exports = {\n    OHLCModel: OHLCModel,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar markmodel = require(\"./MarkModel\");\n\nvar HistModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"HistModel\",\n            _view_name: \"Hist\",\n            sample: [],\n            count: [],\n            scales_metadata: {\n                sample: { orientation: \"horizontal\", dimension: \"x\" },\n                count: { orientation: \"vertical\", dimension: \"y\" }\n            },\n            bins: 10,\n            midpoints: [],\n            colors: d3.scale.category10().range(),\n            stroke: null,\n            opacities: [],\n            normalized: false\n        });\n    },\n\n    initialize: function() {\n        // TODO: should not need to set this.data\n        HistModel.__super__.initialize.apply(this, arguments);\n        this.mark_data = [];\n        // For the histogram, changing the \"sample\" scale changes the \"count\" values being plotted.\n        // Hence, on change of the value of \"preserve_domain\", we must call the \"update_data\"\n        // function, and not merely \"update_domains\".\n        this.on_some_change([\"bins\", \"sample\", \"preserve_domain\"], this.update_data, this);\n        this.update_data();\n        this.on(\"change:normalized\", function() { this.normalize_data(true); }, this);\n        this.normalize_data(true);\n    },\n\n    update_data: function() {\n        var x_data = this.get_typed_field(\"sample\");\n        var scales = this.get(\"scales\");\n        var x_scale = scales.sample;\n\n        // TODO: This potentially triggers domain_changed and therefore a\n        // Draw, while update_data is generally followed by a Draw.\n        this.num_bins = this.get(\"bins\");\n        if (x_data.length == 0) {\n            this.mark_data = [];\n            this.x_mid = [];\n            this.count = [];\n            this.x_bins = [];\n        } else {\n            if(!this.get(\"preserve_domain\").sample) {\n                x_scale.compute_and_set_domain(x_data, this.model_id + \"_sample\");\n            } else {\n                x_scale.del_domain([], this.model_id + \"_sample\");\n            }\n\n            this.min_x = x_scale.domain[0];\n            this.max_x = x_scale.domain[1];\n\n            var that = this;\n            x_data = x_data.filter(function(d) {\n                return (d <= that.max_x && d >= that.min_x);\n            });\n            var x_data_ind = x_data.map(function (d,i) {\n                return {index: i, value: d};\n            });\n\n            this.x_bins =  this.create_uniform_bins(this.min_x, this.max_x, this.num_bins);\n            this.x_mid = this.x_bins.map(function(d, i) {\n                return 0.5 * (d + that.x_bins[i - 1]);\n            }).slice(1);\n\n            this.mark_data = d3.layout.histogram().bins(this.x_bins).value(function(d) {\n                return d.value;\n            })(x_data_ind);\n            //adding index attribute to mark_data of the model\n            this.mark_data.forEach(function(data, index) { data.index = index; });\n        }\n        this.normalize_data(false);\n\n        this.set(\"midpoints\", this.x_mid);\n        this.set_typed_field(\"count\", this.count);\n\n        this.update_domains();\n        this.save_changes();\n        this.trigger(\"data_updated\");\n    },\n\n    normalize_data: function(save_and_update) {\n\n\n        this.count = this.mark_data.map(function(d) { return d.length; });\n        if (this.get(\"normalized\")) {\n            var x_width = 1;\n            if(this.mark_data.length > 0) {\n                x_width = this.mark_data[0].dx;\n            }\n\n            var sum = this.count.reduce(function(a, b) { return a + b; }, 0);\n            if (sum != 0) {\n                this.count = this.count.map(function(a) { return a / (sum * x_width); });\n            }\n        }\n\n        var that = this;\n        this.mark_data.forEach(function(el, it) { el['y'] = that.count[it]; });\n\n        if (save_and_update) {\n            this.set_typed_field(\"count\", this.count);\n            this.update_domains();\n            this.save_changes();\n            this.trigger(\"data_updated\");\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        var return_dict = {};\n        return_dict.midpoint = this.x_mid[index];\n        return_dict.bin_start = this.x_bins[index];\n        return_dict.bin_end = this.x_bins[index + 1];\n        return_dict.index = index;\n        return_dict.count = this.count[index];\n        return return_dict;\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        // For histogram, changing the x-scale domain changes a lot of\n        // things including the data which is to be plotted. So the x-domain\n        // change is handled by the update_data function and only the\n        // y-domain change is handled by this function.\n        var y_scale = this.get(\"scales\").count;\n        if(!this.get(\"preserve_domain\").count) {\n            y_scale.set_domain([0, d3.max(this.mark_data, function(d) {\n                return d.y;\n            }) * 1.05], this.model_id + \"_count\");\n        }\n    },\n\n    create_uniform_bins: function(min_val, max_val, num_bins) {\n        var diff = max_val - min_val;\n        var step_size = (diff) / num_bins;\n        var return_val = [];\n        for(var i=0; i<num_bins; i++) {\n            return_val[i] = min_val+ i * step_size;\n        }\n        return_val[num_bins] = max_val;\n        return return_val;\n    }\n});\n\nmodule.exports = {\n    HistModel: HistModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar SelectorModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.BaseModel.prototype.defaults(), {\n            _model_name: \"SelectorModel\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n            marks: []\n        });\n    }\n}, {\n    serializers: _.extend({\n        marks: { deserialize: widgets.unpack_models },\n    }, basemodel.BaseModel.serializers)\n});\n\nvar OneDSelectorModel = SelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(SelectorModel.prototype.defaults(), {\n            _model_name: \"OneDSelectorModel\",\n            scale: null\n        });\n    }\n}, {\n    serializers: _.extend({\n        scale: { deserialize: widgets.unpack_models },\n    }, SelectorModel.serializers),\n});\n\nvar TwoDSelectorModel = SelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(SelectorModel.prototype.defaults(), {\n            _model_name: \"TwoDSelectorModel\",\n            x_scale: null,\n            y_scale: null\n        });\n    }\n}, {\n    serializers: _.extend({\n        x_scale: { deserialize: widgets.unpack_models },\n        y_scale: { deserialize: widgets.unpack_models },\n    }, SelectorModel.serializers)\n});\n\nvar FastIntervalSelectorModel = OneDSelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(OneDSelectorModel.prototype.defaults(), {\n            _model_name: \"FastIntervalSelectorModel\",\n            _view_name: \"FastIntervalSelector\",\n            selected: {},\n            color: null,\n            size: null\n        });\n    },\n});\n\nvar IndexSelectorModel = OneDSelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(OneDSelectorModel.prototype.defaults(), {\n            _model_name: \"IndexSelectorModel\",\n            _view_name: \"IndexSelector\",\n            selected: {},\n            line_width: 2,\n            color: null\n        });\n    },\n});\n\nvar BrushIntervalSelectorModel = OneDSelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(OneDSelectorModel.prototype.defaults(), {\n            _model_name: \"BrushIntervalSelectorModel\",\n            _view_name: \"BrushIntervalSelector\",\n            brushing: false,\n            selected: {},\n            color: null,\n            orientation: \"horizontal\"\n        });\n    }\n});\n\nvar BrushSelectorModel = TwoDSelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(TwoDSelectorModel.prototype.defaults(), {\n            _model_name: \"BrushSelectorModel\",\n            _view_name: \"BrushSelector\",\n            clear: false,\n            brushing: false,\n            selected_x: {},\n            selected_y: {},\n            color: null\n        });\n    }\n});\n\nvar MultiSelectorModel = OneDSelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(OneDSelectorModel.prototype.defaults(), {\n            _model_name: \"MultiSelectorModel\",\n            _view_name: \"MultiSelector\",\n            names: [],\n            brushing: false,\n            selected: {},\n            _selected: {},\n            show_names: true\n        });\n    }\n});\n\nvar LassoSelectorModel = TwoDSelectorModel.extend({\n\n    defaults: function() {\n        return _.extend(OneDSelectorModel.prototype.defaults(), {\n            _model_name: \"LassoSelectorModel\",\n            _view_name: \"LassoSelector\",\n           color: null\n       });\n    }\n});\n\nmodule.exports = {\n    SelectorModel: SelectorModel,\n    OneDSelectorModel: OneDSelectorModel,\n    TwoDSelectorModel: TwoDSelectorModel,\n    FastIntervalSelectorModel: FastIntervalSelectorModel,\n    IndexSelectorModel: IndexSelectorModel,\n    BrushIntervalSelectorModel: BrushIntervalSelectorModel,\n    BrushSelectorModel: BrushSelectorModel,\n    MultiSelectorModel: MultiSelectorModel,\n    LassoSelectorModel: LassoSelectorModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar mark = require(\"./Mark\");\n\nvar Boxplot = mark.Mark.extend({\n\n    render: function() {\n        var base_creation_promise = Boxplot.__super__.render.apply(this);\n        var that = this;\n\n        return base_creation_promise.then(function() {\n            that.create_listeners();\n            that.draw();\n        }, null);\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        var y_scale = this.scales.y;\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n\n        var x_scale = this.scales.x;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n\n        var y_scale = this.scales.y;\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    create_listeners: function() {\n        Boxplot.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:stroke\", this.update_stroke, this);\n        this.listenTo(this.model, \"change:opacities\", this.update_opacities, this);\n        this.listenTo(this.model, \"change:marker\", this.update_marker, this);\n        this.listenTo(this.model, \"change:outlier_fill_color\", this.update_outlier_fill_color, this);\n        this.listenTo(this.model, \"change:box_fill_color\", this.update_box_fill_color, this);\n        this.listenTo(this.model, \"data_updated\", this.draw, this);\n        this.listenTo(this.model, \"change:box_width\", this.update_box_width, this);\n    },\n\n    update_stroke: function() {\n        var stroke = this.model.get(\"stroke\");\n        this.d3el.selectAll(\".boxplot\").selectAll(\"path, rect\")\n            .style(\"stroke\", stroke);\n\n        this.d3el.selectAll(\".outlier\").style(\"stroke\", stroke);\n\n        if (this.legend_el) {\n            this.legend_el.selectAll(\"path\").attr(\"stroke\", stroke);\n            this.legend_el.selectAll(\"text\").style(\"fill\", stroke);\n        }\n    },\n\n    update_outlier_fill_color: function() {\n        this.d3el.selectAll(\".outlier\")\n               .style(\"fill\", this.model.get(\"outlier_fill_color\"));\n    },\n\n    update_box_fill_color: function() {\n        this.d3el.selectAll(\".box\")\n                .style(\"fill\", this.model.get(\"box_fill_color\"));\n    },\n\n    update_opacities: function() {\n        var opacities = this.model.get(\"opacities\");\n        this.d3el.selectAll(\".boxplot\").style(\"opacity\", function(d, i) {\n                                                return opacities[i];\n                                           });\n\n        if (this.legend_el) {\n            this.legend_el.selectAll(\"path\").attr(\"opacity\", function(d, i) {\n                                                    return opacities[i];\n                                                 });\n        }\n    },\n\n    update_marker: function() {\n        var marker = this.model.get(\"marker\");\n        var that = this;\n\n        if (this.legend_el && this.rect_dim) {\n            var legend_data = [\n                (1/4)*that.rect_dim,\n                0,\n                that.rect_dim,\n                (3/4)*that.rect_dim\n            ];\n            // Draw icon for legend\n            this.draw_mark_paths(marker, this.rect_dim/2,\n                this.legend_el, [legend_data]);\n        }\n\n        // Redraw existing marks\n        this.draw_mark_paths(marker, this.calculate_mark_max_width(),\n            this.d3el, this.model.mark_data);\n    },\n\n    get_box_width: function() {\n        var width = this.model.get(\"box_width\");\n\n        // null box_width means auto calculated box width\n        if (!width) {\n            var plotWidth = this.parent.plotarea_width;\n            var maxWidth = plotWidth / 10.0;\n            width = plotWidth / (this.model.mark_data.length + 1) / 1.5;\n            width = Math.min(width, maxWidth);\n        }\n\n        return width;\n    },\n\n    compute_view_padding: function() {\n        //This function sets the padding for the view through the variables\n        //x_padding and y_padding which are view specific paddings in pixel\n        var x_padding = this.get_box_width() / 2.0 + 1;\n        if (x_padding !== this.x_padding) {\n            this.x_padding = x_padding;\n            this.trigger(\"mark_padding_updated\");\n        }\n    },\n\n    update_box_width: function() {\n        this.compute_view_padding();\n        this.draw();\n    },\n\n    update_idx_selected: function(model, value) {\n        this.selected_indices = value;\n        this.apply_styles(value);\n    },\n\n    apply_styles: function(indices) {\n        var all_indices = _.range(this.model.mark_data.length);\n        this.set_default_style(all_indices);\n\n        this.set_style_on_elements(this.selected_style, this.selected_indices);\n        var unselected_indices = (indices === undefined) ?\n            [] : _.difference(all_indices, indices);\n        this.set_style_on_elements(this.unselected_style, unselected_indices);\n    },\n\n    set_style_on_elements: function(style, indices) {\n        if(indices === undefined || indices.length === 0) {\n            return;\n        }\n        var elements = this.d3el.selectAll(\".boxplot\");\n        elements = elements.filter(function(data, index) {\n            return indices.indexOf(index) != -1;\n        });\n        elements.style(style);\n    },\n\n    set_default_style: function(indices) {\n        if(indices === undefined || indices.length === 0) {\n            return;\n        }\n        var color = this.model.get(\"color\");\n        var stroke = this.model.get(\"stroke\");\n        var opacities = this.model.get(\"opacities\");\n        var elements = this.d3el.selectAll(\".boxplot\")\n            .filter(function(data, index) {\n                return indices.indexOf(index) != -1;\n            });\n\n        elements.style(\"fill\", function(d) {\n              return (d[0] > d[3] ? color : \"none\");\n          })\n          .style(\"opacity\", function(d, i) {\n                    return opacities[i];\n                });\n\n        elements.selectAll(\"path, rect\")\n          .style(\"stroke\", stroke);\n\n          elements.selectAll(\".outliers\").style(\"stroke\", stroke);\n    },\n\n    clear_style: function(style_dict, indices) {\n        var elements = this.d3el.selectAll(\".boxplot\");\n        if(indices !== undefined) {\n            elements = elements.filter(function(d, index) {\n                return indices.indexOf(index) != -1;\n            });\n        }\n        var clearing_style = {};\n        for(var key in style_dict) {\n            clearing_style[key] = null;\n        }\n        elements.style(clearing_style);\n    },\n\n    style_updated: function(new_style, indices) {\n        this.set_default_style(indices);\n        this.set_style_on_elements(new_style, indices);\n    },\n\n    selected_style_updated: function(model, style) {\n        this.selected_style = style;\n        this.style_updated(style, this.selected_indices);\n    },\n\n    unselected_style_updated: function(model, style) {\n        this.unselected_style = style;\n        var sel_indices = this.selected_indices;\n        var unselected_indices = (sel_indices ?\n            _.range(this.model.mark_data.length)\n                .filter(function(index) {\n                    return sel_indices.indexOf(index) == -1;\n                }): []);\n        this.style_updated(style, unselected_indices);\n    },\n\n    //FIXME: should use the selected_style logic\n    update_selected_colors: function(selected_indices) {\n        var that = this;\n        var stroke = this.model.get(\"stroke\");\n        var selected_stroke = stroke;\n        var boxplot_sel = this.d3el.selectAll(\".boxplot\")\n            .style(\"stroke\", function(d, i) {\n                return (selected_indices.indexOf(i) > -1) ? selected_stroke : stroke;\n            })\n    },\n\n    selector_changed: function(point_selector, rect_selector) {\n        if(point_selector === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            this.update_selected_colors([])\n            return [];\n        }\n        var pixels = this.pixel_coords;\n        var indices = _.range(pixels.length);\n        var selected = _.filter(indices, function(index) {\n            return rect_selector(pixels[index]);\n        });\n        this.update_selected_colors(selected)\n        this.model.set(\"selected\", selected);\n        this.touch();\n    },\n\n    invert_point: function(pixel) {\n        if(pixel === undefined) {\n            this.update_selected_colors([]);\n            this.model.set(\"selected\", null);\n            this.touch();\n            return;\n        }\n\n        var abs_diff = this.x_pixels.map(function(elem) { return Math.abs(elem - pixel); });\n        var sel_index = abs_diff.indexOf(d3.min(abs_diff));\n\n        this.model.set(\"selected\", [sel_index]);\n        this.update_selected_colors([sel_index]);\n        this.touch();\n        return sel_index;\n    },\n\n    prepareBoxPlots: function () {\n        // Sets plot data on this.plotData and this.outlierData\n\n        var auto_detect_outliers = this.model.get(\"auto_detect_outliers\") !== false;\n        var x_scale = this.scales.x;\n        var y_scale = this.scales.y;\n\n       // convert the domain data to the boxes to be drawn on the screen\n       // find the quantiles, min/max and outliers for the box plot\n        this.plotData = [];\n        this.outlierData = [];\n        for(var i = 0; i<this.model.mark_data.length; ++i) {\n            var values = this.model.mark_data[i];\n\n            var displayValue = {};\n\n            displayValue.x         = x_scale.scale(values[0]);\n            displayValue.boxUpper  = y_scale.scale(d3.quantile(values[1], 0.75));\n            displayValue.boxLower  = y_scale.scale(d3.quantile(values[1], 0.25));\n            displayValue.boxMedian = y_scale.scale(d3.quantile(values[1], 0.5));\n\n            // The domain Y to screen Y is an inverse scale, so be aware of that\n            // The max from the domain Y becomes min on the screen (display) scale\n            var iqr = displayValue.boxLower - displayValue.boxUpper;\n            var lowerBound = displayValue.boxLower + 1.5 * iqr;\n            var upperBound = displayValue.boxUpper - 1.5 * iqr;\n\n            displayValue.whiskerMax = Number.MAX_VALUE;\n            displayValue.whiskerMin = Number.MIN_VALUE;\n\n            for (var j=0; j<values[1].length; ++j)  {\n\n               var plotY = y_scale.scale(values[1][j]);\n\n               // Find the outlier\n               if (auto_detect_outliers && (plotY > lowerBound || plotY  < upperBound)) {\n                   this.outlierData.push({x: x_scale.scale(values[0]),\n                                          y: plotY});\n               } else {\n                    // Find the whisker points max and min from normal data.\n                    // ( exclude the outliers )\n                    if ( plotY > displayValue.whiskerMin ) {\n                        displayValue.whiskerMin = plotY;\n                    }\n\n                    if ( plotY < displayValue.whiskerMax ) {\n                        displayValue.whiskerMax = plotY;\n                    }\n               }\n            }\n            this.plotData.push(displayValue);\n        }\n    },\n\n    draw: function() {\n        this.set_ranges();\n        var x_scale = this.scales.x;\n        // get the visual representation of boxplots, set as state\n        this.prepareBoxPlots();\n\n        // Draw the visual elements with data which was bound\n        this.draw_mark_paths(\".boxplot\", this.d3el);\n        // Keep the pixel coordinates of the boxes, for interactions.\n        this.x_pixels = this.model.mark_data.map(function(el) { return x_scale.scale(el[0]) + x_scale.offset; });\n        var width = this.get_box_width() / 2;\n        this.pixel_coords = this.plotData.map(function(d) { return [[d.x - width, d.x + width],\n                                                                    [d.boxLower, d.boxUpper]] })\n    },\n\n    draw_mark_paths: function(parentClass, selector) {\n        var that = this;\n        var plotData = this.plotData;\n        var outlierData = this.outlierData;\n\n        var mark_max_width = this.calculate_mark_max_width();\n        var color = this.model.get(\"color\");\n        var boxplot = this.d3el.selectAll(parentClass).data(plotData);\n\n        var fillcolor = this.model.get(\"box_fill_color\");\n        var start_time = this.model.get(\"start_time\");\n        // Create new\n        var new_boxplots = boxplot.enter()\n            .append(\"g\")\n            .attr (\"class\", \"boxplot\")\n            .attr (\"id\", function(d, i) { return \"boxplot\" + i; });\n\n        ///////////////////////////////////////////////////////////////////\n        //\n        //  We translate the whole element of 'boxplot' to the x location\n        //  and then scale each of these elements with Y scale.\n        //\n        //       ( )    <--- outliers (as circles)\n        //       ( )\n        //\n        //     -------  <--- whisker_max_end (path as the max)\n        //        |\n        //        |     <--- whisker_max (path from top of the box to max)\n        //        |\n        //    ---------\n        //    |       |\n        //    |       |\n        //    |       | <--- box (as a rect)\n        //    |       |\n        //    |       |\n        //    ---------\n        //        |\n        //        |     <--- whisker_min (path from bottom of the box to min)\n        //        |\n        //     -------  <--- whisker_min_end (path at min value)\n        //\n        ///////////////////////////////////////////////////////////////////\n\n        new_boxplots.append(\"path\").attr(\"class\", \"whisker_max\");\n        new_boxplots.append(\"path\").attr(\"class\", \"whisker_max_end\");\n        new_boxplots.append(\"path\").attr(\"class\", \"whisker_min\");\n        new_boxplots.append(\"path\").attr(\"class\", \"whisker_min_end\");\n        new_boxplots.append(\"rect\").attr(\"class\", \"box\");\n        new_boxplots.append(\"path\").attr(\"class\", \"median_line\");\n        new_boxplots.append(\"g\").attr(\"class\", \"outliers\");\n\n        var xOffset = 0;\n        var scaleX = this.scales.x;\n        if (scaleX.model.type === \"ordinal\") {\n            xOffset = scaleX.scale.rangeBand() / 2;\n        }\n\n        selector.selectAll(\".boxplot\").data(plotData)\n            .style(\"stroke\", this.model.get(\"stroke\"))\n            .style(\"opacity\", color)\n            .attr (\"transform\", function (d, i) {\n                return \"translate(\" + (d.x + xOffset) + \", 0)\";\n            });\n\n       //Box\n        var width = this.get_box_width();\n\n        selector.selectAll(\".box\").data(plotData)\n            .style(\"fill\", fillcolor)\n            .attr(\"x\", -width /2)\n            .attr(\"width\", width)\n            .attr(\"y\", function(d, i) {\n                return d.boxUpper;\n            })\n            .attr(\"height\", function (d, i) {\n                return (d.boxLower - d.boxUpper);\n            });\n\n        //Median line\n        selector.selectAll(\".median_line\").data(plotData)\n            .style(\"stroke-width\", 2)\n            .attr(\"d\", function(d, i) {\n\n            var x = 0;\n            var medianY = d.boxMedian;\n\n            return  \"M\"  + (x - width/2) + \",\" +\n                    medianY +  \" L\" + (x + width /2)  + \",\" +  medianY;\n          });\n\n          //Max and Min Whiskers\n          //Max to top of the Box\n          selector.selectAll(\".whisker_max\").data(plotData)\n              .attr(\"d\", function(d, i) {\n\n              var x = 0;\n              // The price points are sorted so the last element is the max\n              var maxY = d.whiskerMax;\n              var boxY = d.boxUpper;\n\n              return \"M\"  + x + \",\" +  maxY +  \" L\" + x + \",\" +  boxY;\n           }).attr(\"stroke-dasharray\", function(d, i) {\n              return  \"5,5\";\n           });\n\n          selector.selectAll(\".whisker_max_end\").data(plotData)\n              .attr(\"d\", function(d, i) {\n\n              var x = 0;\n              // The price points are sorted, so 1st element is min\n              var maxY = (d.whiskerMax);\n\n              return \"M\"  + (x - width/2) + \",\" +  maxY +  \" L\" + (x + width/2) + \",\" +  maxY;\n           });\n\n          //Min to the bottom of the box\n          //Max to top of the Box\n          selector.selectAll(\".whisker_min\").data(plotData)\n              .attr(\"d\", function(d, i) {\n\n              var x = 0;\n              // The price points are sorted, so 1st element is min\n              var minY = (d.whiskerMin);\n              var boxY = (d.boxLower);\n\n              return \"M\"  + x + \",\" +  minY +  \" L\" + x + \",\" +  boxY;\n          }).attr(\"stroke-dasharray\", function(d, i) {\n              return  \"5,5\";\n          });\n\n          selector.selectAll(\".whisker_min_end\").data(plotData)\n              .attr(\"d\", function(d, i) {\n\n              var x = 0;\n              // The price points are sorted, so 1st element is min\n              var minY = (d.whiskerMin);\n\n              return \"M\"  + (x - width/2) + \",\" +  minY +  \" L\" + (x + width/2) + \",\" +  minY;\n          });\n\n          boxplot.exit().remove();\n\n          // Add the outliers group\n          var outliers = selector.selectAll(\".outlier\")\n              .data(outlierData);\n\n          // Add/remove elements as needed\n          outliers.enter()\n            .append(\"circle\")\n              .attr(\"class\", \"outlier\");\n          outliers.exit()\n            .remove();\n\n          // Set outlier data\n          selector.selectAll(\".outlier\").data(outlierData)\n              .style(\"fill\", this.model.get(\"outlier_fill_color\"))\n              .attr(\"cx\", function(d) {\n                return d.x + xOffset;\n              })\n              .attr(\"r\", 3)\n              .attr(\"cy\", function(d) {\n                return d.y;\n              });\n\n          this.apply_styles(this.selected_indices);\n    },\n\n    calculate_mark_max_width: function() {\n\n        var that = this;\n        var min_distance = Infinity;\n\n        var x_scale = this.scales.x;\n        for(var i = 1; i < that.model.mark_data.length; i++) {\n            var dist = x_scale.scale(that.model.mark_data[i][0]) -\n                       x_scale.scale(that.model.mark_data[i-1][0]);\n            dist = (dist < 0) ? (-1*dist) : dist;\n            if(dist < min_distance) min_distance = dist;\n        }\n\n        var mark_width = 0;\n        if(min_distance == Infinity) {\n            mark_width = (x_scale.scale(this.model.max_x) -\n                          x_scale.scale(this.model.min_x)) / 2;\n        } else {\n            mark_width = min_distance;\n        }\n\n        return mark_width;\n    },\n\n    relayout: function() {\n        Boxplot.__super__.relayout.apply(this);\n        this.set_ranges();\n        this.compute_view_padding();\n        this.d3el.select(\".intselmouse\")\n            .attr(\"width\", this.width)\n            .attr(\"height\", this.height);\n\n        // We have to redraw every time that we relayout\n        this.draw();\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        var stroke = this.model.get(\"stroke\");\n        var colors = this.model.get(\"colors\");\n        this.rect_dim = inter_y_disp * 0.8;\n        var that = this;\n\n        this.legend_el = elem.selectAll(\".legend\" + this.uuid)\n                              .data([this.model.mark_data]);\n\n        var leg = this.legend_el.enter().append(\"g\")\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp) + \")\";\n            })\n            .attr(\"class\", \"legend\" + this.uuid)\n            .on(\"mouseover\", _.bind(this.highlight_axes, this))\n            .on(\"mouseout\", _.bind(this.unhighlight_axes, this));\n\n        // Add stroke color and set position\n        leg.selectAll(\"path\")\n            .attr(\"stroke\", stroke)\n            .attr(\"transform\", \"translate(\" + (that.rect_dim/2) + \",0)\");\n\n        // Draw icon and text\n        // this.draw_legend_icon(that.rect_dim, leg);\n        this.legend_el.append(\"text\")\n            .attr(\"class\", \"legendtext\")\n            .attr(\"x\", that.rect_dim * 1.2)\n            .attr(\"y\", that.rect_dim / 2)\n            .attr(\"dy\", \"0.35em\")\n            .text(function(d, i) { return that.model.get(\"labels\")[i]; })\n            .style(\"fill\", stroke);\n\n        var max_length = d3.max(this.model.get(\"labels\"), function(d) {\n            return d.length;\n        });\n\n        this.legend_el.exit().remove();\n        return [1, max_length];\n    }\n});\n\n\nmodule.exports = {\n    Boxplot: Boxplot\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar baseselector = require(\"./Selector\");\n\nvar IndexSelector = baseselector.BaseXSelector.extend({\n\n    render : function() {\n        IndexSelector.__super__.render.apply(this);\n        this.active = false;\n        this.dirty = false;\n        var that = this;\n        var scale_creation_promise = this.create_scales();\n        Promise.all([this.mark_views_promise, scale_creation_promise]).then(function() {\n            that.line = that.d3el.append(\"line\")\n              .attr(\"class\", \"selector indsel\")\n              .attr(\"x1\", 0)\n              .attr(\"y1\", 0)\n              .attr(\"x2\", 0)\n              .attr(\"y2\", that.height)\n              .attr(\"stroke-width\", that.model.get(\"line_width\"))\n              .attr(\"pointer-events\", \"none\")\n              .attr(\"visibility\", \"hidden\");\n            that.color_change();\n\n            //container for mouse events\n            that.background = that.d3el.append(\"rect\")\n              .attr(\"x\", 0)\n              .attr(\"y\", 0)\n              .attr(\"width\", that.width)\n              .attr(\"height\", that.height)\n              .attr(\"class\", \"selector selectormouse\")\n              .attr(\"pointer-events\", \"all\")\n              .attr(\"visibility\", \"hidden\");\n\n            that.background.on(\"mousemove\", _.bind(that.mousemove, that))\n                .on(\"click\", _.bind(that.initial_click, that));\n\n            that.create_listeners();\n            that.selected_changed();\n        });\n    },\n\n    create_listeners: function() {\n        IndexSelector.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:color\", this.color_change, this);\n    },\n\n    color_change: function() {\n        if(this.model.get(\"color\") !== null){\n            this.line.style(\"stroke\", this.model.get(\"color\"));\n        }\n    },\n\n    initial_click: function() {\n        this.line.attr(\"visibility\", \"visible\");\n        this.click();\n        this.background.on(\"click\", _.bind(this.click, this));\n    },\n\n    click: function () {\n        this.active = !this.active;\n    },\n\n    mousemove: function() {\n        if (!this.active) {\n            return;\n        }\n        this.dirty = true;\n        var mouse_pos = d3.mouse(this.background.node());\n        var xpixel = mouse_pos[0];\n        //update the index vertical line\n        this.line.attr({x1: xpixel, x2: xpixel});\n\n        this.model.set_typed_field(\"selected\", [this.invert_pixel(xpixel)]);\n        _.each(this.mark_views, function(mark_view) {\n             mark_view.invert_point(xpixel);\n        });\n        this.touch();\n        this.dirty = false;\n    },\n\n    invert_pixel: function(pixel) {\n        return this.scale.invert(pixel);\n    },\n\n    reset: function() {\n        this.active = false;\n        if(this.line !== undefined && this.line !== null) {\n            this.line.attr({x1: 0, x2: 0, visibility: \"hidden\"});\n        }\n\n        if(this.background !== undefined && this.background !== null) {\n            this.background.on(\"click\", _.bind(this.initial_click, this));\n        }\n        this.model.set_typed_field(\"selected\", {});\n\n        _.each(this.mark_views, function(mark_view) {\n            mark_view.invert_point();\n        });\n        this.touch();\n    },\n\n    update_scale_domain: function(ignore_gui_update) {\n        // Call the base class function to update the scale.\n        IndexSelector.__super__.update_scale_domain.apply(this);\n        if(ignore_gui_update !== true) {\n            this.selected_changed();\n        }\n    },\n\n    selected_changed: function(model, value) {\n        if(this.dirty) {\n            //this change was most probably triggered from the js side and\n            //should be ignored.\n            return;\n        }\n        //reposition the interval selector and set the selected attribute.\n        var selected = this.model.get_typed_field(\"selected\");\n        if(selected.length === 0) {\n            this.reset();\n        } else if (selected.length != 1) {\n            // invalid value for selected. Ignoring the value\n            return;\n        } else {\n            var pixel = this.scale.scale(selected[0]);\n            if(this.line !== undefined && this.line !== null) {\n                this.line.attr({x1: pixel, x2: pixel, visibility: \"visible\"});\n            }\n            //the selected may be called before the index selector is\n            //active for the first time.\n            this.background.on(\"click\", _.bind(this.click, this));\n            _.each(this.mark_views, function(mark_view) {\n                mark_view.invert_point(pixel);\n            });\n        }\n    },\n\n    relayout: function() {\n        IndexSelector.__super__.relayout.apply(this);\n        this.line.attr(\"y1\", 0)\n            .attr(\"y2\", this.height);\n        this.background.attr(\"width\", this.width)\n            .attr(\"height\", this.height);\n        this.set_range([this.scale]);\n    },\n\n    scale_changed: function() {\n        this.reset();\n        this.scale = this.parent.x_scale;\n    },\n\n    set_range: function(array) {\n        for(var iter = 0; iter < array.length; iter++) {\n            array[iter].set_range([0, this.width]);\n        }\n    },\n});\n\nmodule.exports = {\n    IndexSelector: IndexSelector,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar ordinalscale = require(\"./OrdinalScale\");\nvar colurutils = require(\"./ColorUtils\");\n\nvar OrdinalColorScale = ordinalscale.OrdinalScale.extend({\n\n    render: function(){\n        OrdinalColorScale.__super__.render.apply(this);\n        this.listenTo(this.model, \"domain_changed\", this.model_domain_changed, this);\n        this.listenTo(this.model, \"set_ticks\", this.model_ticks_changed, this);\n        this.model.on_some_change([\"colors\", \"scheme\"], this.colors_changed, this);\n        this.set_range();\n    },\n\n    set_range: function() {\n        if (this.model.get(\"colors\").length > 0) {\n            this.scale.range(colurutils.cycle_colors(this.model.get(\"colors\"), this.scale.domain().length));\n        } else {\n            this.scale.range(colurutils.get_ordinal_scale_range(this.model.get(\"scheme\"), this.scale.domain().length));\n        }\n        this.trigger(\"color_scale_range_changed\");\n    },\n\n    model_domain_changed: function() {\n        OrdinalColorScale.__super__.model_domain_changed.apply(this);\n        this.set_range();\n    },\n\n    colors_changed: function() {\n        this.set_range();\n    }\n});\n\nmodule.exports = {\n    OrdinalColorScale: OrdinalColorScale\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar BoxplotModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"BoxplotModel\",\n            _view_name: \"Boxplot\",\n\n            x: [],\n            y: [],\n            scales_metadata: {\n                x: { orientation: \"horizontal\", dimension: \"x\" },\n                y: { orientation: \"vertical\", dimension: \"y\" }\n            },\n            stroke: null,\n            box_fill_color: \"dodgerblue\",\n            outlier_fill_color: \"gray\",\n            opacities: [],\n            box_width: null, // auto calculate box width\n            auto_detect_outliers: true\n        });\n    },\n\n    initialize: function() {\n        BoxplotModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"x\", \"y\"], this.update_data, this);\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        var x_data = this.get_typed_field(\"x\");\n        var y_data = this.get_typed_field(\"y\");\n\n        y_data.forEach(function(elm) {\n            elm.sort(function(a, b) {\n                return a - b;\n            });\n        });\n\n        if(x_data.length > y_data.length) {\n            x_data = x_data.slice(0, y_data.length);\n        } else if(x_data.length < y_data.length) {\n            y_data = y_data.slice(0, x_data.length);\n        }\n\n        this.mark_data = _.zip(x_data, y_data);\n\n        this.update_domains();\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        // color scale needs an issue in DateScaleModel to be fixed. It\n        // should be moved here as soon as that is fixed.\n\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x;\n        var y_scale = scales.y;\n        var size_scale = scales.size;\n        var opacity_scale = scales.opacity;\n\n        if(!this.get(\"preserve_domain\").x && this.mark_data) {\n            x_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                return elem[0];\n            }), this.model_id + \"_x\");\n        } else {\n            x_scale.del_domain([], this.model_id + \"_x\");\n        }\n        if(!this.get(\"preserve_domain\").y && this.mark_data) {\n           //The values are sorted, so we are using that to calculate the min/max\n\n            var min = d3.min(this.mark_data.map(function(d) {\n                return d[1][0];\n            }));\n            var max = d3.max(this.mark_data.map(function(d) {\n                var values = d[1];\n                return values[values.length-1];\n            }));\n\n            y_scale.set_domain([min,max], this.model_id + \"_y\");\n\n        } else {\n            y_scale.del_domain([], this.model_id + \"_y\");\n        }\n    }\n});\n\n\nmodule.exports = {\n    BoxplotModel: BoxplotModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar scatterbase = require(\"./ScatterBase\");\n\n\nvar Label = scatterbase.ScatterBase.extend({\n\n    create_listeners: function() {\n        Label.__super__.create_listeners.apply(this);\n        this.model.on_some_change([\"font_weight\", \"font_size\", \"colors\",\n                                   \"align\", \"font_unit\"], this.update_style, this);\n        this.model.on_some_change([\"x\", \"y\", \"x_offset\", \"y_offset\",\n                                   \"rotate_angle\"], this.update_position, this);\n    },\n\n    update_default_opacities: function(animate) {\n        if (!this.model.dirty) {\n            var default_opacities = this.model.get(\"default_opacities\");\n            var len_opac = default_opacities.length;\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n            // update opacity scale range?\n            var that = this;\n            this.d3el.selectAll(\".label\")\n                .transition(\"update_default_opacities\")\n                .duration(animation_duration)\n                .style(\"opacity\", function(d, i) {\n                    return that.get_element_opacity(d, i);\n                });\n        }\n    },\n\n    update_default_size: function(animate) {\n        this.compute_view_padding();\n        // update size scale range?\n        if (!this.model.dirty) {\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n            var that = this;\n            this.d3el.selectAll(\".label\")\n                .transition(\"update_default_size\")\n                .duration(animation_duration)\n                .style(\"font-size\", function(d, i) {\n                    return that.get_element_size(d);\n                });\n        }\n    },\n\n    create_listeners: function() {\n        Label.__super__.create_listeners.apply(this);\n        this.model.on_some_change([\"font_weight\", \"default_size\", \"colors\",\n                                   \"align\", \"font_unit\"], this.update_style, this);\n        this.model.on_some_change([\"x\", \"y\", \"x_offset\", \"y_offset\",\n                                   \"rotate_angle\"], this.update_position, this);\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.update_position();\n    },\n\n    draw_elements: function(animate, elements_added) {\n        elements_added.append(\"text\")\n            .classed(\"label element\", true);\n\n        this.update_text();\n        this.update_style();\n        this.update_default_opacities(true);\n    },\n\n    update_text: function() {\n        this.d3el.selectAll(\".object_grp\")\n            .select(\".label\")\n            .text(function(d) { return d.text; });\n    },\n\n    get_element_size: function(data) {\n        var size_scale = this.scales.size;\n        var unit = this.model.get(\"font_unit\");\n        if(size_scale && data.size !== undefined) {\n            return size_scale.scale(data.size) + unit;\n        }\n        return this.model.get(\"default_size\") + unit;\n    },\n\n    get_element_rotation: function(data) {\n        var rotation_scale = this.scales.rotation;\n        return (!rotation_scale || !data.rotation) ? \"rotate(\" + this.model.get(\"rotate_angle\") + \")\" :\n            \"rotate(\" + rotation_scale.scale(data.rotation) + \")\";\n    },\n\n    update_position: function() {\n        var that = this;\n        var x_scale = this.x_scale;\n        var y_scale = this.y_scale;\n        var x = (x_scale.model.type === \"date\") ?\n            this.model.get_date_elem(\"x\") : this.model.get(\"x\");\n        var y = (y_scale.model.type === \"date\") ?\n            this.model.get_date_elem(\"y\") : this.model.get(\"y\");\n        var x_offset = this.model.get(\"x_offset\"),\n            y_offset = this.model.get(\"y_offset\");\n        this.d3el.selectAll(\".object_grp\")\n            .attr(\"transform\", function(d) {\n                return \"translate(\" + (x_scale.scale(d.x) + x_scale.offset + x_offset) +\n                                \",\" + (y_scale.scale(d.y) + y_scale.offset + y_offset) + \")\" +\n                       that.get_element_rotation(d);\n            });\n    },\n\n    update_style: function() {\n        var that = this;\n        this.d3el.selectAll(\".object_grp\")\n            .select(\"text\")\n            .attr(\"dominant-baseline\", \"central\")\n            .style(\"font-size\", function(d, i) {\n                return that.get_element_size(d);\n            })\n            .style(\"font-weight\", this.model.get(\"font_weight\"))\n            .style(\"text-anchor\", this.model.get(\"align\"));\n\n        this.d3el.selectAll(\".label\")\n            .style(\"fill\", function(d, i) {\n                    return that.get_element_color(d,i);\n            });\n    },\n\n    color_scale_updated: function(animate) {\n        var that = this;\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n        this.d3el.selectAll(\".object_grp\")\n            .select(\"text\")\n            .transition(\"color_scale_updated\")\n            .duration(animation_duration)\n            .style(\"fill\", function(d, i) {\n                  return that.get_element_color(d, i);\n            });\n    },\n\n    set_default_style: function(indices) {\n        // For all the elements with index in the list indices, the default\n        // style is applied.\n        if(!indices || indices.length === 0) {\n            return;\n        }\n        var elements = this.d3el.selectAll(\".element\").filter(function(data, index) {\n            return indices.indexOf(index) !== -1;\n        });\n        var that = this;\n        elements\n            .style(\"font-size\", function(d, i) {\n                return that.get_element_size(d);\n            })\n            .style(\"font-weight\", this.model.get(\"font_weight\"))\n            .style(\"text-anchor\", this.model.get(\"align\"))\n            .style(\"fill\", function(d, i) {\n                    return that.get_element_color(d, i);\n            });\n    },\n\n    set_drag_style: function(d, i, dragged_node) {\n        var dragged_size = (this.model.get(\"drag_size\") *\n            this.model.get(\"default_size\")) + this.model.get(\"font_unit\");\n        d3.select(dragged_node)\n          .select(\"text\")\n          .classed(\"drag_label\", true)\n          .transition(\"set_drag_style\")\n          .style(\"font-size\", (dragged_size));\n    },\n\n    reset_drag_style: function(d, i, dragged_node) {\n        d3.select(dragged_node)\n          .select(\"text\")\n          .classed(\"drag_label\", false)\n          .transition(\"reset_drag_style\")\n          .style(\"font-size\", this.get_element_size(d));\n    },\n});\n\nmodule.exports = {\n    Label: Label\n};\n\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./ScatterBaseModel\");\n\nvar LabelModel = basemodel.ScatterBaseModel.extend({\n\n    defaults: function () {\n        return _.extend(basemodel.ScatterBaseModel.prototype.defaults(), {\n            _model_name: \"LabelModel\",\n            _view_name: \"Label\",\n\n            x_offset: 0,\n            y_offset: 0,\n            rotate_angle: 0.0,\n            text: [],\n            font_size: 16.0,\n            font_unit: \"px\",\n            drag_size: 1.0,\n            font_weight: \"bold\",\n            align: \"start\",\n        });\n    },\n\n    initialize: function() {\n        // TODO: Normally, color, opacity and size should not require a redraw\n        LabelModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:text\", this.update_data, this);\n    },\n\n    update_mark_data: function() {\n        LabelModel.__super__.update_mark_data.apply(this);\n        var text = this.get_typed_field(\"text\");\n\n        this.mark_data.forEach(function(d, i){ d.text = text[i]; });\n    },\n\n    update_unique_ids: function() {\n        this.mark_data.forEach(function(data, index){\n                                   data.unique_id = \"Label\" + index;\n        });\n    },\n});\n\nmodule.exports = {\n    LabelModel: LabelModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar scalemodel = require(\"./ScaleModel\");\n\nvar OrdinalScaleModel = scalemodel.ScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(scalemodel.ScaleModel.prototype.defaults(), {\n            _model_name: \"OrdinalScaleModel\",\n            _view_name: \"OrdinalScale\",\n            min: null,\n            max: null,\n        });\n    },\n\n    initialize: function() {\n        OrdinalScaleModel.__super__.initialize.apply(this, arguments);\n    },\n\n    set_init_state: function() {\n        this.type = \"ordinal\";\n        this.min_from_data = true;\n        this.max_from_data = true;\n    },\n\n    set_listeners: function() {\n        this.on(\"change:domain\", this.domain_changed, this);\n        this.domain_changed();\n        this.on(\"change:reverse\", this.reverse_changed, this);\n        this.reverse_changed();\n    },\n\n    domain_changed: function() {\n        this.ord_domain = this.get(\"domain\");\n        if(this.ord_domain !== null && this.ord_domain.length !== 0) {\n            this.max_from_data = false;\n            this.min_from_data = false;\n            this.domain = this.ord_domain.map(function(d) { return d; });\n            this.trigger(\"domain_changed\");\n        } else {\n            this.max_from_data = true;\n            this.min_from_data = true;\n            this.domain = [];\n            this.update_domain();\n        }\n    },\n\n    reverse_changed: function(model, value, options) {\n        var prev_reverse = (model === undefined) ? false : model.previous(\"reverse\");\n        this.reverse = this.get(\"reverse\");\n\n        // the domain should be reversed only if the previous value of reverse\n        // is different from the current value. During init, domain should be\n        // reversed only if reverse is set to True.\n        var reverse_domain = (prev_reverse + this.reverse) % 2;\n        if(this.domain.length > 0 && reverse_domain === 1) {\n            this.domain.reverse();\n            this.trigger(\"domain_changed\", this.domain);\n        }\n    },\n\n    update_domain: function() {\n        var domain = [];\n        // TODO: check for hasOwnProperty\n        for (var id in this.domains) {\n            domain = _.union(domain, this.domains[id]);\n        }\n        if(this.domain.length !== domain.length ||\n           (_.intersection(this.domain, domain)).length !== domain.length) {\n            this.domain = domain;\n            this.trigger(\"domain_changed\", domain);\n        }\n    },\n\n    compute_and_set_domain: function(data_array, id) {\n        // Takes an array and calculates the domain for the particular\n        // view. If you have the domain already calculated on your side,\n        // call set_domain function.\n        if(!this.min_from_data && !this.max_from_data) {\n            return;\n        }\n        if(data_array.length === 0) {\n           this.set_domain([], id);\n           return;\n        }\n        var domain = _.flatten(data_array);\n        if(this.get(\"reverse\")) {\n            domain.reverse();\n        }\n        this.set_domain(domain, id);\n    }\n});\n\nmodule.exports = {\n    OrdinalScaleModel: OrdinalScaleModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar selector = require(\"./Selector\");\nvar utils = require(\"./utils\");\nvar sel_utils = require(\"./selector_utils\");\n\nvar BaseBrushSelector = {\n\n    brush_render: function() {\n        var that = this;\n        var scale_creation_promise = this.create_scales();\n        this.brushing = false;\n\n        Promise.all([this.mark_views_promise, scale_creation_promise]).then(function() {\n            that.brush = d3.svg.brush()\n              .on(\"brushstart\", _.bind(that.brush_start, that))\n              .on(\"brush\", _.bind(that.brush_move, that))\n              .on(\"brushend\", _.bind(that.brush_end, that));\n            that.set_brush_scale();\n\n            that.d3el.attr(\"class\", \"selector brushintsel\");\n            that.brushsel = that.d3el.call(that.brush);\n            that.adjust_rectangle();\n            that.color_change();\n            that.create_listeners();\n            that.selected_changed();\n        });\n    },\n\n    color_change: function() {\n         if (this.model.get(\"color\") !== null) {\n            this.brushsel.style(\"fill\", this.model.get(\"color\"));\n        }\n    },\n\n    brush_start: function () {\n        this.model.set(\"brushing\", true);\n        this.touch();\n        this.brushing = true;\n    },\n\n    brush_move: function () {\n        var extent = this.brush.empty() ? [] : this.brush.extent();\n        this.convert_and_save(extent);\n    },\n\n    brush_end: function () {\n        var extent = this.brush.empty() ? [] : this.brush.extent();\n        this.model.set(\"brushing\", false);\n        this.convert_and_save(extent);\n        this.brushing = false;\n    },\n\n    scale_changed: function() {\n        this.brush.clear();\n        this.create_scales();\n        this.set_brush_scale();\n    },\n\n    adjust_rectangle: function() {\n        if (this.model.get(\"orientation\") == \"vertical\") {\n            this.d3el.selectAll(\"rect\")\n              .attr(\"x\", 0)\n              .attr(\"width\", this.width);\n        } else {\n            this.d3el.selectAll(\"rect\")\n              .attr(\"y\", 0)\n              .attr(\"height\", this.height);\n        }\n    },\n\n    _update_brush: function() {\n        // Redraw the brush\n        this.brushsel = this.d3el.call(this.brush);\n        // Trigger brushstart-move-end events\n        // this.d3el.call(this.brush.event);\n    },\n\n    clear_brush: function() {\n        this.brush.clear();\n        this._update_brush();\n    },\n\n    update_mark_selected: function(extent_x, extent_y) {\n\n        if(extent_x === undefined || extent_x.length === 0) {\n            // Reset all the selected in marks\n            _.each(this.mark_views, function(mark_view) {\n                return mark_view.selector_changed();\n            });\n            return;\n        } if (extent_y === undefined) {\n            // 1d brush\n            var orient = this.model.get(\"orientation\");\n            var x = (orient == \"vertical\") ? [] : extent_x,\n                y = (orient == \"vertical\") ? extent_x : [];\n        } else {\n            // 2d brush\n            var x = extent_x, y = extent_y;\n        }\n        var point_selector = function(p) {\n            return sel_utils.point_in_rectangle(p, x, y);\n        };\n        var rect_selector = function(xy) {\n            return sel_utils.rect_inter_rect(xy[0], xy[1], x, y);\n        };\n\n        _.each(this.mark_views, function(mark_view) {\n            mark_view.selector_changed(point_selector, rect_selector);\n        }, this);\n    },\n}\n\nvar BrushSelector = selector.BaseXYSelector.extend(BaseBrushSelector).extend({\n\n    render: function() {\n        BrushSelector.__super__.render.apply(this);\n        this.brush_render();\n        // Put inside promise?\n        // this.is_x_date = (this.x_scale.model.type === \"date\");\n        // this.is_y_date = (this.y_scale.model.type === \"date\");\n    },\n\n    create_listeners: function() {\n        BrushSelector.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:color\", this.color_change, this);\n        // Move these to BaseXYSelector\n        this.listenTo(this.model, \"change:selected_x\", this.selected_changed);\n        this.listenTo(this.model, \"change:selected_y\", this.selected_changed);\n    },\n\n    empty_selection: function() {\n        this.update_mark_selected();\n        this.model.set(\"selected_x\", {});\n        this.model.set(\"selected_y\", {});\n        this.touch();\n    },\n\n    convert_and_save: function(extent) {\n        if(extent.length === 0) {\n            this.empty_selection();\n            return;\n        }\n        var extent_x = [extent[0][0], extent[1][0]];\n        var extent_y = [extent[0][1], extent[1][1]];\n\n        var x_ordinal = (this.x_scale.model.type === \"ordinal\"),\n            y_ordinal = (this.y_scale.model.type === \"ordinal\");\n        var pixel_extent_x = x_ordinal ? extent_x :\n                             extent_x.map(this.x_scale.scale),\n            pixel_extent_y = y_ordinal ? extent_y :\n                             extent_y.map(this.y_scale.scale);\n        extent_x = x_ordinal ?\n                   this.x_scale.invert_range(extent_x) : extent_x;\n        extent_y = y_ordinal ?\n                   this.y_scale.invert_range(extent_y) : extent_y;\n        this.update_mark_selected(pixel_extent_x, pixel_extent_y);\n\n        this.model.set_typed_field(\"selected_x\", extent_x);\n        this.model.set_typed_field(\"selected_y\", extent_y);\n        this.touch();\n    },\n\n    selected_changed: function(model, value) {\n        if(this.brushing) {\n            return;\n        }\n        //reposition the interval selector and set the selected attribute.\n        var selected_x = this.model.get_typed_field(\"selected_x\"),\n            selected_y = this.model.get_typed_field(\"selected_y\");\n        if(selected_x.length === 0 || selected_y.length === 0) {\n            this.clear_brush();\n            this.update_mark_selected();\n        } else if(selected_x.length != 2 || selected_y.length != 2) {\n            // invalid value for selected. Ignoring the value\n            return;\n        } else {\n            var extent = [[selected_x[0], selected_y[0]],\n                          [selected_x[1], selected_y[1]]];\n            this.brush.extent(extent);\n            this._update_brush();\n            var pixel_extent_x = selected_x.map(this.x_scale.scale).sort(\n                function(a, b) { return a - b; });\n            var pixel_extent_y = selected_y.map(this.y_scale.scale).sort(\n                function(a, b) { return a - b; });\n            this.update_mark_selected(pixel_extent_x, pixel_extent_y);\n        }\n    },\n\n    relayout: function() {\n        BrushSelector.__super__.relayout.apply(this);\n        this.d3el.select(\".background\")\n          .attr(\"width\", this.width)\n          .attr(\"height\", this.height);\n\n        this.set_x_range([this.x_scale]);\n        this.set_y_range([this.y_scale]);\n    },\n\n    adjust_rectangle: function() {\n    },\n\n    set_brush_scale: function() {\n        this.brush.y(this.y_scale.scale)\n          .x(this.x_scale.scale);\n    },\n\n    update_xscale_domain: function() {\n        // Call the base class function to update the scale.\n        BrushSelector.__super__.update_xscale_domain.apply(this);\n        if(this.brush !== undefined && this.brush !== null) {\n            this.brush.x(this.x_scale.scale);\n        }\n        // TODO:If there is a selection, update the visual element.\n\n    },\n\n    update_yscale_domain: function() {\n        // Call the base class function to update the scale.\n        BrushSelector.__super__.update_yscale_domain.apply(this);\n        if(this.brush !== undefined && this.brush !== null) {\n            this.brush.y(this.y_scale.scale);\n        }\n    },\n});\n\nvar BrushIntervalSelector = selector.BaseXSelector.extend(BaseBrushSelector).extend({\n\n    render: function() {\n        BrushIntervalSelector.__super__.render.apply(this);\n        this.brush_render();\n    },\n\n    create_listeners: function() {\n        BrushIntervalSelector.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:color\", this.change_color, this);\n    },\n\n    empty_selection: function() {\n        this.update_mark_selected();\n        this.model.set_typed_field(\"selected\", []);\n        this.touch();\n    },\n\n    convert_and_save: function(extent) {\n        if(extent.length === 0) {\n            this.empty_selection();\n            return;\n        }\n        var ordinal = (this.scale.model.type === \"ordinal\");\n        var pixel_extent = ordinal ? extent : extent.map(this.scale.scale);\n        extent = ordinal ? this.scale.invert_range(extent) : extent;\n\n        this.update_mark_selected(pixel_extent);\n        this.model.set_typed_field(\"selected\", extent);\n        this.touch();\n    },\n\n    update_scale_domain: function(ignore_gui_update) {\n        // Call the base class function to update the scale.\n        BrushIntervalSelector.__super__.update_scale_domain.apply(this);\n        if(this.brush !== undefined && this.brush !== null) {\n            this.set_brush_scale();\n        }\n        if(ignore_gui_update !== true) {\n            this.selected_changed();\n        }\n    },\n\n    set_brush_scale: function() {\n        if (this.model.get(\"orientation\") == \"vertical\") {\n                this.brush.y(this.scale.scale);\n            } else {\n                this.brush.x(this.scale.scale);\n            }\n    },\n\n    selected_changed: function(model, value) {\n        if(this.brushing) {\n            return;\n        }\n        //reposition the interval selector and set the selected attribute.\n        var selected = this.model.get_typed_field(\"selected\");\n        if(selected.length === 0) {\n            this.clear_brush();\n            this.update_mark_selected();\n        } else if(selected.length != 2) {\n            // invalid value for selected. Ignoring the value\n            return;\n        } else {\n            var extent = [selected[0], selected[1]];\n            this.brush.extent(extent);\n            this._update_brush();\n            var pixel_extent = extent.map(this.scale.scale).sort(\n                function(a, b) { return a - b; });\n            this.update_mark_selected(pixel_extent);\n        }\n    },\n\n    remove: function() {\n        this.brush.clear();\n        BrushIntervalSelector.__super__.remove.apply(this);\n    },\n\n    relayout: function() {\n        BrushIntervalSelector.__super__.relayout.apply(this);\n\n        this.adjust_rectangle();\n        this.d3el.select(\".background\")\n          .attr(\"width\", this.width)\n          .attr(\"height\", this.height);\n\n        this.set_range([this.scale]);\n    },\n});\n\nvar add_remove_classes = function(selection, add_classes, remove_classes) {\n    //adds the classes present in add_classes and removes the classes in\n    //the list remove_classes\n    //selection attribute should be a d3-selection\n    if(remove_classes) {\n        remove_classes.forEach(function(r_class) {\n            selection.classed(r_class, false);\n        });\n    }\n    if(add_classes) {\n        add_classes.forEach(function(a_class) {\n            selection.classed(a_class, true);\n        });\n    }\n};\n\nvar MultiSelector = selector.BaseXSelector.extend(BaseBrushSelector).extend({\n\n    render: function() {\n        MultiSelector.__super__.render.apply(this);\n\n        var that = this;\n        this.names = this.model.get(\"names\");\n        this.curr_index = 0;\n\n        var scale_creation_promise = this.create_scales();\n        Promise.all([this.mark_views_promise, scale_creation_promise]).then(function() {\n            that.d3el.attr(\"class\", \"multiselector\");\n            that.create_brush();\n            that.selecting_brush = false;\n            that.create_listeners();\n        });\n    },\n\n    create_listeners: function() {\n        MultiSelector.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:names\", this.labels_change, this);\n        this.listenTo(this.model, \"change:color\", this.color_change, this);\n    },\n\n    labels_change: function(model, value) {\n        var prev_names = model.previous(\"names\");\n        this.names = value;\n\n        var data = _.range(this.curr_index + 1);\n        var that = this;\n        var selected = utils.deepCopy(this.model.get(\"selected\"));\n        //TODO: Use do diff?\n        data.forEach(function(elem) {\n            var label = that.get_label(elem);\n            var prev_label = that.get_label(elem, prev_names);\n            if(prev_label !== label) {\n                that.d3el.select(\".brush_text_\" + elem).text(label);\n                selected[label] = selected[prev_label];\n                delete selected[prev_label];\n            }\n        });\n        this.model.set_typed_field(\"_selected\", selected);\n        this.touch();\n    },\n\n    create_brush: function(event) {\n        // Function to add new brushes.\n        var that = this;\n        var index = this.curr_index;\n\n        var brush = d3.svg.brush()\n          .on(\"brushstart\", function() { that.brush_start(); })\n          .on(\"brush\", function() { that.brush_move(index, this); })\n          .on(\"brushend\", function() { that.brush_end(index, this); });\n\n        var new_brush_g = this.d3el.append(\"g\")\n          .attr(\"class\", \"selector brushintsel active\");\n\n        new_brush_g.append(\"text\")\n          .text(this.get_label(this.curr_index))\n          .attr(\"class\", \"brush_text_\" + this.curr_index)\n          .style(\"text-anchor\", \"middle\")\n          .style(\"stroke\", \"yellow\")\n          .style(\"font-size\", \"16px\")\n          .style(\"display\", \"none\");\n\n        if (this.model.get(\"orientation\") == \"vertical\") {\n            brush.y(this.scale.scale);\n            new_brush_g.select(\"text\").attr(\"x\", 30);\n        } else {\n            brush.x(this.scale.scale);\n            new_brush_g.select(\"text\").attr(\"y\", 30);\n        }\n        new_brush_g.call(brush);\n\n        this.color_change();\n        this.adjust_rectangle();\n\n        var old_handler = new_brush_g.on(\"mousedown.brush\");\n        new_brush_g.on(\"mousedown.brush\", function() {\n            add_remove_classes(that.d3el.selectAll(\".selector\"), [\"inactive\"], [\"visible\"]);\n            add_remove_classes(d3.select(this), [\"active\"], [\"inactive\"]);\n            old_handler.call(this);\n            // Replacement for \"Accel\" modifier.\n            d3.select(this).on(\"mousedown.brush\", function() {\n                var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n                if(d3.event.shiftKey && accelKey && d3.event.altKey) {\n                    that.reset();\n                } else if(accelKey) {\n                    add_remove_classes(d3.select(this), [\"inactive\"], [\"active\"]);\n                    that.create_brush(d3.event);\n                } else if(d3.event.shiftKey && that.selecting_brush === false) {\n                    add_remove_classes(that.d3el.selectAll(\".selector\"), [\"visible\"], [\"active\", \"inactive\"]);\n                    that.selecting_brush = true;\n                } else {\n                    add_remove_classes(that.d3el.selectAll(\".selector\"), [\"inactive\"], [\"visible\"]);\n                    add_remove_classes(d3.select(this), [\"active\"], [\"inactive\"]);\n                    old_handler.call(this);\n                    that.selecting_brush = false;\n                }\n            });\n        });\n        this.curr_index = this.curr_index + 1;\n        /* if(this.curr_index > 1) {\n            // Have to create a duplicate event and re dispatch it for the\n            // event to get triggered on the new brush.\n            // if curr_index === 1, then it is the first brush being\n            // created. So no duplicate event needs to dispatched.\n            var duplicate_event = new event.constructor(event.type, event);\n            new_brush_g.node().dispatchEvent(duplicate_event);\n        } */\n    },\n\n    get_label: function(index, arr) {\n        //arr is optional. If you do not pass anything, this.names is\n        //considered arr.\n        if(arr === undefined || arr === null) {\n            arr = this.names;\n        }\n        return (arr.length > index) ? arr[index] : index;\n    },\n\n    brush_start: function() {\n        this.model.set(\"brushing\", true);\n        this.touch();\n    },\n\n    brush_move: function(item, brush_g) {\n        var brush = d3.event.target;\n        var extent = brush.empty() ? this.scale.scale.domain() : brush.extent();\n        var hide_names = !(this.model.get(\"show_names\"));\n        d3.select(brush_g).select(\"text\")\n          .style(\"display\", ((brush.empty() || hide_names) ? \"none\" : \"inline\"));\n        this.set_text_location(brush_g, extent);\n        this.convert_and_save(extent, item);\n    },\n\n    set_text_location: function(brush_g, extent) {\n        var mid = (extent[0] + extent[1]) / 2;\n        if(this.scale.model.type === \"date\") {\n            mid = new Date((extent[0].getTime() + extent[1].getTime()) / 2);\n        }\n        var orient = (this.model.get(\"orientation\") == \"vertical\") ? \"y\" : \"x\";\n        d3.select(brush_g).select(\"text\")\n          .attr(orient, this.scale.scale(mid));\n    },\n\n    brush_end: function (item, brush_g) {\n        var brush = d3.event.target;\n        var extent = brush.empty() ?\n            this.scale.scale.domain() : brush.extent();\n        this.model.set(\"brushing\", false);\n        this.convert_and_save(extent, item);\n    },\n\n    reset: function() {\n        this.d3el.selectAll(\".selector\")\n          .remove();\n        this.model.set(\"_selected\", {});\n        this.curr_index = 0;\n        this.touch();\n        this.create_brush();\n    },\n\n    convert_and_save: function(extent, item) {\n        var that = this;\n        var selected = utils.deepCopy(this.model.get(\"_selected\"));\n        selected[this.get_label(item)] = extent;\n        var pixel_extent = extent.map(this.scale.scale);\n        this.update_mark_selected(pixel_extent);\n        this.model.set(\"_selected\", selected);\n        this.touch();\n    },\n\n    scale_changed: function() {\n        this.d3el.selectAll(\".selector\")\n          .remove();\n        this.curr_index = 0;\n        this.create_scale();\n        this.create_brush();\n    },\n\n    color_change: function() {\n        if (this.model.get(\"color\") !== null) {\n            this.d3el.selectAll(\".selector\")\n              .style(\"fill\", this.model.get(\"color\"));\n        }\n    },\n\n    relayout: function() {\n        MultiSelector.__super__.relayout.apply(this);\n\n        this.adjust_rectangle();\n        this.d3el.select(\".background\")\n          .attr(\"width\", this.width)\n          .attr(\"height\", this.height);\n\n        this.set_range([this.scale]);\n    },\n\n    remove: function() {\n        this.model.off(\"change:names\", null, this);\n        MultiSelector.__super__.remove.apply(this);\n    }\n});\n\n\nmodule.exports = {\n    BrushSelector: BrushSelector,\n    BrushIntervalSelector: BrushIntervalSelector,\n    MultiSelector: MultiSelector\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\nvar baseselector = require(\"./Selector\");\nvar sel_utils = require(\"./selector_utils\");\n\nvar LassoSelector = baseselector.BaseXYSelector.extend({\n    render: function() {\n        LassoSelector.__super__.render.apply(this);\n        var scale_creation_promise = this.create_scales();\n        this.line = d3.svg.line();\n        this.all_vertices = {};\n        this.lasso_counter = 0;\n\n        var that = this;\n        Promise.all([this.mark_views_promise, scale_creation_promise]).then(function() {\n            var drag = d3.behavior.drag()\n                .on(\"dragstart\", _.bind(that.drag_start, that))\n                .on(\"drag\", _.bind(that.drag_move, that))\n                .on(\"dragend\", _.bind(that.drag_end, that));\n\n            d3.select(window).on(\"keydown\", _.bind(that.keydown, that));\n\n            that.d3el.attr(\"class\", \"lassoselector\");\n\n            //container for mouse events\n            that.background = that.d3el.append(\"rect\")\n                .attr(\"x\", 0)\n                .attr(\"y\", 0)\n                .attr(\"width\", that.width)\n                .attr(\"height\", that.height)\n                .attr(\"visibility\", \"hidden\")\n                .attr(\"pointer-events\", \"all\")\n                .style(\"cursor\", \"crosshair\")\n                .call(drag);\n\n            that.create_listeners();\n        });\n    },\n\n    create_listeners: function() {\n        LassoSelector.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:color\", this.change_color, this);\n    },\n\n    change_color: function(model, color) {\n        if (color) {\n            this.d3el.selectAll(\"path\").style(\"stroke\", color);\n        }\n    },\n\n    create_new_lasso: function() {\n        var lasso = this.d3el.append(\"path\")\n            .attr(\"id\", \"l\" + (++this.lasso_counter))\n            .on(\"click\", function() {\n                //toggle the opacity of lassos\n                var lasso = d3.select(this);\n                lasso.classed(\"selected\", !lasso.classed(\"selected\"));\n            });\n        var color = this.model.get(\"color\");\n        if (color) {\n            lasso.style(\"stroke\", color);\n        }\n    },\n\n    drag_start: function() {\n        this.current_vertices = [];\n        this.create_new_lasso();\n    },\n\n    drag_move: function() {\n        this.current_vertices.push(d3.mouse(this.background.node()));\n        this.d3el.select(\"#l\" + this.lasso_counter)\n            .attr(\"d\", this.line(this.current_vertices));\n    },\n\n    drag_end: function() {\n        var lasso_name = \"l\" + this.lasso_counter;\n        // Close the lasso\n        this.d3el.select(\"#\" + lasso_name)\n            .attr(\"d\", this.line(this.current_vertices) + \"Z\");\n        // Add the current vertices to the global lasso vertices\n        this.all_vertices[lasso_name] = this.current_vertices;\n        // Update selected for each mark\n        this.update_mark_selected(this.all_vertices)\n    },\n\n    update_mark_selected: function(vertices) {\n\n        if(vertices === undefined || vertices.length === 0) {\n            // Reset all the selected in marks\n            _.each(this.mark_views, function(mark_view) {\n                return mark_view.selector_changed();\n            });\n        }\n        var point_selector = function(p) {\n            for (var l in vertices) {\n                if (sel_utils.point_in_lasso(p, vertices[l])) { return true; }\n            } return false;\n        };\n        var rect_selector = function(xy) {\n            for (var l in vertices) {\n                if (sel_utils.lasso_inter_rect(xy[0], xy[1], vertices[l])) { return true; }\n            } return false;\n        };\n\n        _.each(this.mark_views, function(mark_view) {\n            mark_view.selector_changed(point_selector, rect_selector);\n        }, this);\n    },\n\n    relayout: function() {\n        LassoSelector.__super__.relayout.apply(this);\n        this.background.attr(\"width\", this.width).attr(\"height\", this.height);\n    },\n\n    keydown: function() {\n       // delete key pressed\n       if (d3.event.keyCode === 46) {\n           // Delete selected lassos\n           var lassos_to_delete = this.d3el.selectAll(\".selected\");\n           // Update the lasso vertices\n           var vertices = this.all_vertices;\n           lassos_to_delete.each(function() {\n               var lasso_name = d3.select(this).attr(\"id\");\n               delete vertices[lasso_name];\n           });\n           lassos_to_delete.remove();\n           this.update_mark_selected(this.all_vertices);\n      }\n    },\n\n    reset: function() {\n        this.lasso_counter = 0;\n        this.all_vertices = {};\n        this.d3el.selectAll(\"path\").remove();\n        this.update_mark_selected();\n    },\n});\n\n\nmodule.exports = {\n    LassoSelector: LassoSelector\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar interaction = require(\"./Interaction\");\n\n// TODO avoid code duplication for 'x' and 'y'\n\nvar PanZoom = interaction.Interaction.extend({\n\n    render: function() {\n        PanZoom.__super__.render.apply(this);\n        var that = this;\n        this.d3el\n          .style({\"cursor\": \"move\"})\n          .on(\"mousedown\", function() { that.mousedown(); })\n          .on(\"mousemove\", function() { that.mousemove(); })\n          .on(\"mouseup\", function() { that.mouseup(); })\n          .on(\"mousewheel\", function() { that.mousewheel(); })\n          .on(\"DOMMouseScroll.zoom\", function() { that.mousewheel(); })\n          .on(\"mousewheel.zoom\", null)\n          .on(\"wheel.zoom\", null);\n        this.active = false;\n\n        this.update_scales();\n        this.listenTo(this.model, \"change:scales\", this.update_scales, this);\n\n        this.set_ranges();\n        this.listenTo(this.parent, \"margin_updated\", this.set_ranges, this);\n    },\n\n    update_scales: function() {\n        var scales = this.model.get(\"scales\");\n        var that = this;\n        this.scale_promises = widgets.resolvePromisesDict({\n            \"x\": Promise.all((scales.x || []).map(function(model) {\n                    return that.create_child_view(model);\n                 })),\n            \"y\": Promise.all((scales.y || []).map(function(model) {\n                    return that.create_child_view(model);\n                 })),\n        });\n        widgets.resolvePromisesDict(this.scale_promises)\n            .then(_.bind(this.set_ranges, this));\n    },\n\n    set_ranges: function() {\n       var that = this;\n       var i;\n       this.scale_promises.then(function(scale_views) {\n           var xscale_views = scale_views.x;\n           for (i=0; i<xscale_views.length; i++) {\n               xscale_views[i].set_range(that.parent.padded_range(\"x\",\n                                                xscale_views[i].model));\n           }\n           var yscale_views = scale_views.y;\n           for (i=0; i<yscale_views.length; i++) {\n               yscale_views[i].set_range(that.parent.padded_range(\"y\",\n                                                yscale_views[i].model));\n           }\n       });\n    },\n\n    mousedown: function () {\n        var scales = this.model.get(\"scales\");\n        this.active = true;\n        this.d3el.style({\"cursor\": \"move\"});\n        this.previous_pos = d3.mouse(this.el);\n        // A copy of the original domains is required to avoid additional\n        // drift when Paning.\n        this.domains = {\n            \"x\": (scales.x || []).map(function(s) {\n                return s.domain.slice(0);\n            }),\n            \"y\": (scales.y || []).map(function(s) {\n                return s.domain.slice(0);\n            }),\n        };\n    },\n\n    mouseup: function () {\n        this.active = false;\n    },\n\n    mousemove: function() {\n        if (this.active && this.model.get(\"allow_pan\")) {\n            // If memory is set to true, intermediate positions between the\n            // last position of the mouse and the current one will be\n            // interpolated.\n            var mouse_pos = d3.mouse(this.el);\n            if (!(\"previous_pos\" in this)) {\n                this.previous_pos = mouse_pos;\n            }\n            var scales = this.model.get(\"scales\");\n            var that = this;\n            this.scale_promises.then(function(scale_views) {\n                var xscale_views = scale_views.x;\n                var xdomains = that.domains.x;\n                var xdiffs = xscale_views.map(function(view) {\n                    if (view.scale.invert) {\n                        // Categorical scales don't have an inversion.\n                        return view.scale.invert(mouse_pos[0]) -\n                               view.scale.invert(that.previous_pos[0]);\n                    }\n                });\n                var i, domain, min, max;\n                for (i=0; i<xscale_views.length; i++) {\n                    domain = xdomains[i];\n                    min = domain[0] - xdiffs[i];\n                    max = domain[1] - xdiffs[i];\n                    that.set_scale_attribute(scales.x[i], \"min\", min);\n                    that.set_scale_attribute(scales.x[i], \"max\", max);\n                    // TODO? Only do in mouseup?\n                    xscale_views[i].touch();\n                }\n\n                var yscale_views = scale_views.y;\n                var ydomains = that.domains.y;\n                var ydiffs = yscale_views.map(function(view) {\n                    if (view.scale.invert) {\n                        // Categorical scales don't have an inversion.\n                        return view.scale.invert(mouse_pos[1]) -\n                               view.scale.invert(that.previous_pos[1]);\n                    }\n                });\n                for (i=0; i<yscale_views.length; i++) {\n                    domain = ydomains[i];\n                    min = domain[0] - ydiffs[i];\n                    max = domain[1] - ydiffs[i];\n                    that.set_scale_attribute(scales.y[i], \"min\", min);\n                    that.set_scale_attribute(scales.y[i], \"max\", max);\n                    // TODO? Only do this on mouseup?\n                    yscale_views[i].touch();\n                }\n            });\n        }\n    },\n\n    mousewheel: function() {\n        if (this.model.get(\"allow_zoom\")) {\n            d3.event.preventDefault();\n            // With Firefox, wheelDelta is undefined.\n            var delta = d3.event.wheelDelta || d3.event.detail * (-40);\n            var mouse_pos = d3.mouse(this.el);\n            if (delta) {\n                if (delta > 0) {\n                    this.d3el.style({\"cursor\": \"zoom-in\"});\n                } else {\n                    this.d3el.style({\"cursor\": \"zoom-out\"});\n                }\n                var scales = this.model.get(\"scales\");\n                var that = this;\n                this.scale_promises.then(function(scale_views) {\n                    var i, domain, min, max;\n                    var xscale_views = scale_views.x;\n                    var xpos = xscale_views.map(function(view) {\n                         return view.scale.invert(mouse_pos[0]);\n                    });\n                    var factor = Math.exp(-delta * 0.001);\n                    for (i=0; i<xscale_views.length; i++) {\n                        domain = scales.x[i].domain;\n                        min = domain[0];\n                        max = domain[1];\n                        that.set_scale_attribute(scales.x[i], \"min\",\n                                    (1 - factor) * xpos[i] + factor * min);\n                        that.set_scale_attribute(scales.x[i], \"max\",\n                                    (1 - factor) * xpos[i] + factor * max);\n                        // TODO? Only do in mouseup?\n                        xscale_views[i].touch();\n                    }\n\n                    var yscale_views = scale_views.y;\n                    var ypos = yscale_views.map(function(view) {\n                        return view.scale.invert(mouse_pos[1]);\n                    });\n                    for (i=0; i<yscale_views.length; i++) {\n                        domain = scales.y[i].domain;\n                        min = domain[0];\n                        max = domain[1];\n                        that.set_scale_attribute(scales.y[i], \"min\",\n                                    (1 - factor) * ypos[i] + factor * min);\n                        that.set_scale_attribute(scales.y[i], \"max\",\n                                    (1 - factor) * ypos[i] + factor * max);\n                        // TODO? Only do this on mouseup?\n                        yscale_views[i].touch();\n                    }\n                });\n            }\n        }\n    },\n\n    set_scale_attribute: function(scale, attribute_name, value) {\n        // The difference of two dates is an int. So we want to cast it to\n        // a date when setting the attribute for the date scale\n        if(scale.type == \"date\") {\n            value = (value instanceof Date) ? value : new Date(value);\n            //TODO: Function for setting date can be made the same as for\n            //other scale once the _pack_models is fixes\n            scale.set_date_elem(attribute_name, value);\n        } else {\n            scale.set(attribute_name, value);\n        }\n    }\n});\n\nmodule.exports = {\n    PanZoom: PanZoom\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\nvar axis = require(\"./Axis\");\n\nvar ColorBar = axis.Axis.extend({\n\n    render: function() {\n        this.parent = this.options.parent;\n        this.margin = this.parent.margin;\n        this.vertical = this.model.get(\"orientation\") === \"vertical\";\n        this.height = this.parent.height - (this.margin.top + this.margin.bottom);\n        this.width = this.parent.width - (this.margin.left + this.margin.right);\n\n        var scale_promise = this.set_scale(this.model.get(\"scale\"));\n        this.side = this.model.get(\"side\");\n        this.x_offset = 100;\n        this.y_offset = 40;\n        this.bar_height = 20;\n        this.d3el.attr(\"class\", \"ColorBar\")\n            .attr(\"display\", (this.model.get(\"visible\") ? \"inline\" : \"none\"))\n            .attr(\"transform\", this.get_topg_transform());\n\n        this.ordinal = false;\n        this.num_ticks = this.model.get(\"num_ticks\");\n        var that = this;\n        scale_promise.then(function() {\n            that.create_listeners();\n            that.tick_format = that.generate_tick_formatter();\n            that.set_scales_range();\n            that.append_axis();\n        });\n    },\n\n    create_listeners: function() {\n        this.listenTo(this.model, \"change:scale\", function(model, value) {\n            this.update_scale(model.previous(\"scale\"), value);\n            // TODO: rescale_axis does too many things. Decompose\n            this.axis.scale(this.axis_scale.scale); // TODO: this is in redraw_axisline\n            this.rescale_axis();\n        }, this);\n\n        this.listenTo(this.model, \"change:tick_format\", this.tickformat_changed, this);\n        this.axis_scale.on(\"domain_changed\", this.redraw_axisline, this);\n        this.axis_scale.on(\"color_scale_range_changed\", this.redraw_axis, this);\n        this.axis_scale.on(\"highlight_axis\", this.highlight, this);\n        this.axis_scale.on(\"unhighlight_axis\", this.unhighlight, this);\n\n        this.parent.on(\"margin_updated\", this.parent_margin_updated, this);\n        this.listenTo(this.model, \"change:visible\", this.update_visibility, this);\n        this.listenTo(this.model, \"change:label\", this.update_label, this);\n        this.model.on_some_change([\"side\", \"orientation\"], this.update_display, this);\n    },\n\n    update_display: function() {\n        this.side = this.model.get(\"side\");\n        this.vertical = this.model.get(\"orientation\") === \"vertical\";\n        this.rescale_axis();\n        this.d3el.select(\"#colorBarG\" + this.cid)\n            .attr(\"transform\", this.get_colorbar_transform());\n        this.d3el.select(\"#colorBarG\" + this.cid)\n            .select(\".g-rect\")\n            .attr(\"transform\", this.vertical ? \"rotate(-90)\" : \"\");\n        this.redraw_axisline();\n    },\n\n    set_scale: function(model) {\n        // Sets the child scale\n        var that = this;\n        if (this.axis_scale) { this.axis_scale.remove(); }\n        return this.create_child_view(model).then(function(view) {\n            // Trigger the displayed event of the child view.\n            that.displayed.then(function() {\n                view.trigger(\"displayed\");\n            });\n            that.axis_scale = view;\n            // TODO: eventually removes what follows\n            if(that.axis_scale.model.type === \"date_color_linear\") {\n                that.axis_line_scale = d3.time.scale().nice();\n            } else if(that.axis_scale.model.type === \"ordinal\") {\n                that.axis_line_scale = d3.scale.ordinal();\n                that.ordinal = true;\n            } else {\n                that.axis_line_scale = d3.scale.linear();\n            }\n        });\n    },\n\n    append_axis: function() {\n        // The label is allocated a space of 100px. If the label\n        // occupies more than 100px then you are out of luck.\n        var that = this;\n        if(this.model.get(\"label\") !== undefined && this.model.get(\"label\") !== null) {\n            this.d3el.append(\"g\")\n                .attr(\"transform\", this.get_label_transform())\n                .attr(\"class\", \"axis label_g\")\n                .append(\"text\")\n                .append(\"tspan\")\n                .attr(\"id\", \"text_elem\")\n                .attr(\"dy\", \"0.5ex\")\n                .text(this.model.get(\"label\"))\n                .attr(\"class\", \"axislabel\")\n                .style(\"text-anchor\", this.vertical ? \"middle\" : \"end\");\n        }\n        var colorBar = this.d3el.append(\"g\")\n            .attr(\"id\",\"colorBarG\" + this.cid);\n\n        this.draw_color_bar();\n        this.set_axisline_domain();\n\n        this.g_axisline = colorBar.append(\"g\")\n            .attr(\"class\", \"axis\");\n\n        this.axis = d3.svg.axis()\n            .tickFormat(this.tick_format);\n        this.redraw_axisline();\n    },\n\n    draw_color_bar: function() {\n        var colorBar = this.d3el.select(\"#colorBarG\" + this.cid);\n        colorBar.attr(\"transform\", this.get_colorbar_transform());\n        var that = this;\n        colorBar.selectAll(\".g-rect\")\n            .remove();\n        colorBar.selectAll(\".g-defs\")\n            .remove();\n\n        this.colors = this.axis_scale.scale.range();\n        var colorSpacing = 100 / (this.colors.length - 1);\n\n        if(this.ordinal) {\n            var bar_width = this.get_color_bar_width() / this.colors.length;\n            var rects = colorBar.append(\"g\")\n                .attr(\"class\", \"g-rect axis\")\n                .selectAll(\"rect\")\n                .data(this.colors);\n\n            rects.enter()\n                .append(\"rect\")\n                .attr(\"y\", 0)\n                .attr(\"height\", this.bar_height)\n                .attr(\"width\", bar_width)\n                .style(\"fill\", function(d) { return d; });\n\n            if(this.vertical) {\n                rects.attr(\"x\", function(d, i) {\n                    return i * bar_width - (that.height - 2 * that.x_offset);\n                });\n            } else {\n                rects.attr(\"x\", function(d, i) {\n                    return i * bar_width;\n                });\n            }\n        } else {\n            colorBar.append(\"g\")\n                .attr(\"class\", \"g-defs\")\n                .append(\"defs\")\n                .append(\"linearGradient\")\n                .attr({\n                    id : \"colorBarGradient\" + this.cid,\n                    x1 : \"0%\",\n                    y1 : \"0%\",\n                    x2 : \"100%\",\n                    y2 : \"0%\"\n                })\n                .selectAll(\"stop\")\n                .data(this.colors)\n                .enter()\n                .append(\"stop\")\n                .attr({\n                    \"offset\": function(d,i) {\n                        return colorSpacing * (i) + \"%\";\n                    },\n                    \"stop-color\": function(d,i) { return that.colors[i]; },\n                    \"stop-opacity\": 1\n                });\n\n            colorBar.append(\"g\")\n                .attr(\"class\", \"g-rect axis\")\n                .append(\"rect\")\n                .attr({\n                    \"width\": this.get_color_bar_width(),\n                    \"height\": this.bar_height,\n                    x: (this.vertical) ? -(this.height - 2 * this.x_offset) : 0,\n                    y: 0,\n                    \"stroke-width\": 1\n                })\n                .style(\"fill\",\"url(#colorBarGradient\" + this.cid + \")\");\n        }\n        if(this.vertical) {\n            colorBar.select(\".g-rect\")\n                .attr(\"transform\", \"rotate(-90)\");\n        }\n    },\n\n    get_topg_transform: function() {\n        var em = 12;\n        if(this.vertical){\n            if(this.side === \"right\") {\n                return \"translate(\" + String(this.get_basic_transform() + this.margin.right / 2 - this.bar_height) + \", 0)\";\n            }\n                return \"translate(\" + String(this.get_basic_transform() - this.margin.left / 2 + this.bar_height) + \", 0)\";\n        } else {\n            if(this.side === \"top\") {\n                return \"translate(0, \" + String(this.get_basic_transform() - this.margin.top + this.bar_height + 2 * em) + \")\";\n            }\n            return \"translate(0, \" + String(this.get_basic_transform() + this.margin.bottom - this.bar_height - 2 * em) + \")\";\n        }\n    },\n\n    get_label_transform: function() {\n        if(this.vertical) {\n            return \"translate(\" + ((this.side === \"right\") ?\n                (this.bar_height / 2) : (-this.bar_height / 2)) + \", \" + (this.x_offset - 15) + \")\";\n        }\n        return \"translate(\" + (this.x_offset - 5) + \", \" + (this.bar_height / 2)+ \")\";\n    },\n\n    get_colorbar_transform: function() {\n        if(this.vertical) {\n            return \"translate(0, \" + String(this.x_offset) + \")\" ;\n        }\n        return \"translate(\" + String(this.x_offset) + \", 0)\";\n    },\n\n    set_axisline_scale_range: function() {\n        var range = (this.vertical) ?\n            [this.height - 2 * this.x_offset, 0] : [0, this.width -  2 * this.x_offset];\n        if(this.ordinal) {\n            this.axis_line_scale.rangeRoundBands(range, 0.05);\n        } else {\n            var mid = this.axis_scale.model.mid;\n            if (mid === undefined || mid === null) {\n                this.axis_line_scale.range(range);\n            } else {\n                this.axis_line_scale.range([range[0], (range[0] + range[1]) * 0.5, range[1]]);\n            }\n        }\n    },\n\n    set_scales_range: function() {\n        //Setting the range of the color scale\n        this.axis_scale.set_range();\n        this.set_axisline_scale_range();\n    },\n\n    get_color_bar_width: function() {\n        return (this.vertical) ? (this.height - (2 * this.x_offset)) : (this.width - 2 * this.x_offset);\n    },\n\n    update_label: function(model, value) {\n        this.d3el.select(\"#text_elem\")\n            .text(this.model.get(\"label\"));\n    },\n\n    rescale_axis: function() {\n        // rescale the axis\n        this.set_axisline_scale_range();\n        // shifting the entire g of the color bar first.\n        this.d3el.attr(\"transform\", this.get_topg_transform());\n        var that = this;\n        var bar_width = this.get_color_bar_width() / this.colors.length;\n        if(this.ordinal) {\n            var rectangles = this.d3el.select(\"#colorBarG\" + this.cid)\n                .select(\".g-rect\")\n                .selectAll(\"rect\")\n                .attr(\"width\", bar_width);\n            if(this.vertical) {\n                rectangles.attr(\"x\", function(d, i) {\n                    return (i * bar_width) - (that.height - 2 * that.x_offset);\n                });\n            } else {\n                rectangles.attr(\"x\", function(d, i) {\n                    return i * bar_width;\n                });\n            }\n        } else {\n            this.d3el.select(\"#colorBarG\" + this.cid)\n                .select(\".g-rect\")\n                .selectAll(\"rect\")\n                .attr(\"width\", this.get_color_bar_width())\n                .attr(\"x\", (this.vertical) ? -(this.height - 2 * this.x_offset) : 0);\n        }\n        if(this.model.get(\"label\") !== undefined && this.model.get(\"label\") !== null) {\n            this.d3el.select(\".label_g\")\n                .attr(\"transform\", this.get_label_transform())\n                .select(\"#text_elem\")\n                .style(\"text-anchor\", this.vertical ? \"middle\" : \"end\");\n        }\n        this.g_axisline.call(this.axis);\n    },\n\n    redraw_axisline: function() {\n        if (this.axis) {\n            this.set_axisline_domain();\n            // We need to set the range of the axis line scale here again.\n            // Only because, if the domain has changed from a two element\n            // array to a three element one, the range of the axis has to\n            // be changed accordingly.\n            this.set_axisline_scale_range();\n            this.axis.orient(this.side)\n                .scale(this.axis_line_scale);\n            this.set_tick_values();\n\n            var transform;\n            if(this.vertical) {\n                transform = \"translate(\" + ((this.side === \"right\") ?\n                    this.bar_height : 0) + \", 0)\";\n            } else {\n                transform = \"translate(0, \" + ((this.side === \"top\") ?\n                        0 : this.bar_height) + \")\";\n            }\n            this.g_axisline.attr(\"transform\", transform)\n                .call(this.axis);\n        }\n    },\n\n    set_axisline_domain: function() {\n        var domain = this.axis_scale.scale.domain();\n        if (this.ordinal) {\n            this.axis_line_scale.domain(domain);\n        } else {\n            var mid = this.axis_scale.model.mid;\n            if (mid === undefined || mid === null) {\n                this.axis_line_scale.domain([domain[0], domain[domain.length-1]]);\n            } else {\n                this.axis_line_scale.domain([domain[0], mid, domain[domain.length-1]]);\n            }\n        } \n    },\n\n    redraw_axis: function() {\n        this.draw_color_bar();\n        this.redraw_axisline();\n    }\n});\n\nmodule.exports = {\n    ColorAxis: ColorBar\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar PanZoomModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.BaseModel.prototype.defaults(), {\n            _model_name: \"PanZoomModel\",\n            _view_name: \"PanZoom\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n            scales: {},\n            allow_pan: true,\n            allow_zoom: true\n        });\n    },\n\n    initialize: function() {\n        PanZoomModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:scales\", this.snapshot_scales, this);\n        this.snapshot_scales();\n    },\n\n    reset_scales: function() {\n        var that = this;\n        widgets.resolvePromisesDict(this.get(\"scales\")).then(function(scales) {\n            _.each(Object.keys(scales), function(k) {\n                _.each(scales[k], function(s, i) {\n                    s.set_state(that.scales_states[k][i]);\n                }, that);\n            }, that);\n        });\n    },\n\n    snapshot_scales: function() {\n        // Save the state of the scales.\n        var that = this;\n        widgets.resolvePromisesDict(this.get(\"scales\")).then(function(scales) {\n            that.scales_states = Object.keys(scales).reduce(function(obj, key) {\n                obj[key] = scales[key].map(function(s) {\n                    return s.get_state()\n                });\n                return obj;\n            }, {});\n        });\n    }\n}, {\n    serializers: _.extend({\n        scales: { deserialize: widgets.unpack_models },\n    }, basemodel.BaseModel.serializers)\n});\n\nmodule.exports = {\n    PanZoomModel: PanZoomModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar mark = require(\"./Mark\");\nvar utils = require(\"./utils\");\nvar _ = require(\"underscore\");\n\nvar Pie = mark.Mark.extend({\n    render: function() {\n        var base_creation_promise = Pie.__super__.render.apply(this);\n        this.selected_indices = this.model.get(\"selected\");\n        this.selected_style = this.model.get(\"selected_style\");\n        this.unselected_style = this.model.get(\"unselected_style\");\n\n        this.display_el_classes = [\"slice\", \"text\"];\n        var that = this;\n        this.pie_g = this.d3el.append(\"g\").attr(\"class\", \"pie\");\n        this.pie_g.append(\"g\").attr(\"class\", \"slices\");\n        this.pie_g.append(\"g\").attr(\"class\", \"labels\");\n        this.pie_g.append(\"g\").attr(\"class\", \"lines\");\n\n        var radius = this.model.get(\"radius\");\n        var inner_radius = this.model.get(\"inner_radius\");\n\n        var display_labels = this.model.get(\"display_labels\");\n\n        if(display_labels === \"outside\") {\n            this.arc = d3.svg.arc()\n                .outerRadius(radius * 0.8)\n                .innerRadius(inner_radius * 0.8);\n\n            this.outer_arc = d3.svg.arc()\n                .innerRadius(radius * 0.9)\n                .outerRadius(radius * 0.9);\n        } else {\n            this.arc = d3.svg.arc()\n                .outerRadius(radius)\n                .innerRadius(inner_radius);\n        }\n\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        return base_creation_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        }, null);\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n            this.x_offset = x_scale.offset;\n        }\n        var y_scale = this.scales.y;\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n            this.y_offset = y_scale.offset;\n        }\n    },\n\n    set_positional_scales: function() {\n        // If no scale for \"x\" or \"y\" is specified, figure scales are used.\n        var x_scale = this.scales.x ? this.scales.x : this.parent.scale_x;\n        var y_scale = this.scales.y ? this.scales.y : this.parent.scale_y;\n\n        var that = this;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!that.model.dirty) { that.draw(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!that.model.dirty) { that.draw(); }\n        });\n    },\n\n    create_listeners: function() {\n        Pie.__super__.create_listeners.apply(this);\n        this.d3el\n          .on(\"mouseover\", _.bind(function() {\n              this.event_dispatcher(\"mouse_over\");\n          }, this))\n          .on(\"mousemove\", _.bind(function() {\n              this.event_dispatcher(\"mouse_move\");\n          }, this))\n          .on(\"mouseout\", _.bind(function() {\n              this.event_dispatcher(\"mouse_out\");\n          }, this));\n\n        this.listenTo(this.model, \"data_updated\", function() {\n            //animate on data update\n            var animate = true;\n            this.draw(animate);\n        }, this);\n        this.listenTo(this.model, \"change:colors\", this.update_colors, this);\n        this.listenTo(this.model, \"colors_updated\", this.update_colors, this);\n        this.model.on_some_change([\"inner_radius\", \"radius\"], function() {\n            this.compute_view_padding();\n            var animate = true;\n            this.update_radii(animate);\n        }, this);\n        this.model.on_some_change([\"stroke\", \"opacities\"], this.update_stroke_and_opacities, this);\n        this.model.on_some_change([\"x\", \"y\"], this.position_center, this);\n        this.model.on_some_change([\"display_labels\", \"label_color\", \"font_size\", \"font_weight\"],\n                                  this.update_labels, this);\n        this.model.on_some_change([\"start_angle\", \"end_angle\", \"sort\"], function() {\n            var animate = true;\n            this.draw(animate);\n        }, this);\n\n        this.model.on_some_change([\"display_values\", \"values_format\"],\n                                  this.update_values, this);\n\n        this.listenTo(this.model, \"labels_updated\", function() {\n            var animate = true;\n            this.draw(animate);\n        }, this);\n\n        this.listenTo(this.model, \"change:selected\", function() {\n            this.selected_indices = this.model.get(\"selected\");\n            this.apply_styles();\n        }, this);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        } else {\n            if(interactions.click !== undefined &&\n              interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click === \"select\") {\n                    this.event_listeners.parent_clicked = this.reset_selection;\n                    this.event_listeners.element_clicked = this.click_handler;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n            if(interactions.legend_click !== undefined &&\n              interactions.legend_click !== null) {\n                if(interactions.legend_click === \"tooltip\") {\n                    this.event_listeners.legend_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                }\n            } else {\n                this.event_listeners.legend_clicked = function() {};\n            }\n            if(interactions.legend_hover !== undefined &&\n              interactions.legend_hover !== null) {\n                if(interactions.legend_hover === \"highlight_axes\") {\n                    this.event_listeners.legend_mouse_over = _.bind(this.highlight_axes, this);\n                    this.event_listeners.legend_mouse_out = _.bind(this.unhighlight_axes, this);\n                }\n            } else {\n                this.reset_legend_hover();\n            }\n        }\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.position_center();\n        this.update_radii();\n    },\n\n    position_center: function(animate) {\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n        var x_scale = this.scales.x ? this.scales.x : this.parent.scale_x;\n        var y_scale = this.scales.y ? this.scales.y : this.parent.scale_y;\n        var x = (x_scale.model.type === \"date\") ?\n            this.model.get_date_elem(\"x\") : this.model.get(\"x\");\n        var y = (y_scale.model.type === \"date\") ?\n            this.model.get_date_elem(\"y\") : this.model.get(\"y\");\n        var transform = \"translate(\" + (x_scale.scale(x) + x_scale.offset) +\n                                \", \" + (y_scale.scale(y) + y_scale.offset) + \")\";\n        this.pie_g\n            .transition(\"position_center\").duration(animation_duration)\n            .attr(\"transform\", transform);\n    },\n\n    update_radii: function(animate) {\n        var animation_duration = animate === true ?\n            this.parent.model.get(\"animation_duration\") : 0;\n\n        var radius = this.model.get(\"radius\");\n        var inner_radius = this.model.get(\"inner_radius\");\n        var display_labels = this.model.get(\"display_labels\");\n\n        if(display_labels === \"inside\") {\n            this.arc.outerRadius(radius).innerRadius(inner_radius);\n        } else if(display_labels === \"outside\") {\n            this.arc.outerRadius(radius * 0.8).innerRadius(inner_radius * 0.8);\n            this.outer_arc.innerRadius(radius * 0.9).outerRadius(radius * 0.9);\n        }\n\n        var slices = this.pie_g.select(\".slices\");\n        var labels = this.pie_g.select(\".labels\");\n        var lines = this.pie_g.select(\".lines\");\n\n        var that = this;\n\n        slices.selectAll(\"path.slice\")\n            .transition(\"update_radii\").duration(animation_duration)\n            .attr(\"d\", this.arc);\n\n        if(display_labels === \"inside\") {\n            labels.selectAll(\"text\")\n                .transition(\"update_radii\").duration(animation_duration)\n                .attr(\"transform\", function(d) {\n                    return \"translate(\" + that.arc.centroid(d) + \")\";\n                });\n        } else if(display_labels === \"outside\") {\n            labels.selectAll(\"text\")\n                .transition(\"update_radii\").duration(animation_duration)\n                .attr(\"transform\", function(d) {\n                    var pos = that.outer_arc.centroid(d);\n                    pos[0] = radius * (that.mid_angle_location(d) === \"left\" ? -1 : 1);\n                    return \"translate(\" + pos + \")\";\n                });\n\n            lines.selectAll(\"polyline\")\n                .transition(\"update_radii\").duration(animation_duration)\n                .attr(\"points\", function(d) {\n                    var pos = that.outer_arc.centroid(d);\n                    pos[0] = radius * 0.95 * (that.mid_angle_location(d) === \"left\" ? -1 : 1);\n                    return [that.arc.centroid(d), that.outer_arc.centroid(d), pos];\n                });\n        }\n    },\n\n    mid_angle_location: function(arc_data) {\n        // decides if the location of the mid angle of the arc is toward left or right (to aid the\n        // placement of label text)\n        var mid_angle = (arc_data.startAngle + arc_data.endAngle) / 2;\n        return (mid_angle > Math.PI || (mid_angle < 0 && mid_angle > -Math.PI)) ? \"left\" : \"right\";\n    },\n\n    draw: function(animate) {\n        this.set_ranges();\n        this.position_center(animate);\n\n        var pie = d3.layout.pie()\n            .startAngle(this.model.get(\"start_angle\") * 2 * Math.PI/360)\n            .endAngle(this.model.get(\"end_angle\") * 2 * Math.PI/360)\n            .value(function(d) { return d.size; });\n\n        if(!this.model.get(\"sort\")) { pie.sort(null); }\n\n        var that = this;\n        var animation_duration = animate === true ?\n            this.parent.model.get(\"animation_duration\") : 0;\n\n        // update pie slices\n        var slices = this.pie_g.select(\".slices\")\n            .selectAll(\"path.slice\")\n            .data(pie(this.model.mark_data));\n\n        slices.enter()\n            .insert(\"path\")\n            .attr(\"class\", \"slice\")\n            .style(\"fill\", function(d) {\n                return that.get_colors(d.data.index);\n            })\n            .each(function(d) {\n                this._current = d;\n            });\n\n        slices.transition(\"draw\").duration(animation_duration)\n            .attrTween(\"d\", function(d) {\n                var interpolate = d3.interpolate(this._current, d);\n                this._current = d;\n                return function(t) { return that.arc(interpolate(t)); };\n            });\n\n        slices.exit()\n            .transition(\"draw\")\n            .remove();\n\n        // update labels\n        var labels = this.pie_g.select(\".labels\")\n            .selectAll(\"text\")\n            .data(pie(this.model.mark_data));\n\n        labels.enter()\n            .append(\"text\")\n            .attr(\"dy\", \".35em\")\n            .style(\"opacity\", 0)\n            .text(function(d) {\n                return d.data.label;\n            })\n            .each(function(d) {\n                this._current = d;\n            });\n\n        var label_trans = labels.transition(\"draw\")\n            .duration(animation_duration)\n            .style(\"opacity\", function(d) {\n                return d.data.value === 0 ? 0 : 1;\n            });\n\n        var display_labels = this.model.get(\"display_labels\");\n\n        if(display_labels === \"inside\") {\n            label_trans.attr(\"transform\", function(d) {\n                return \"translate(\" + that.arc.centroid(d) + \")\";\n            })\n            .style(\"text-anchor\", \"middle\");\n        } else if (display_labels === \"outside\") {\n            label_trans.attrTween(\"transform\", function(d) {\n                var interpolate = d3.interpolate(this._current, d);\n                var _this = this;\n                return function(t) {\n                    var d2 = interpolate(t);\n                    _this._current = d2;\n                    var pos = that.outer_arc.centroid(d2);\n                    pos[0] = that.model.get(\"radius\") *\n                        (that.mid_angle_location(d) === \"left\" ?  -1 : 1);\n                    return \"translate(\" + pos + \")\";\n                };\n            })\n            .styleTween(\"text-anchor\", function(d) {\n                var interpolate = d3.interpolate(this._current, d);\n                return function(t) {\n                    var d2 = interpolate(t);\n                    return that.mid_angle_location(d2) === \"left\" ? \"end\" : \"start\";\n                };\n            });\n        }\n\n        labels.exit().remove();\n\n        // for labels which are displayed outside draw the polylines\n        if (display_labels === \"outside\") {\n            var polylines = this.pie_g.select(\".lines\")\n                .selectAll(\"polyline\")\n                .data(pie(this.model.mark_data));\n\n            polylines.enter()\n                .append(\"polyline\")\n                .style(\"opacity\", 0)\n                .each(function(d) {\n                    this._current = d;\n                });\n\n            polylines.transition(\"draw\")\n                .duration(animation_duration)\n                .style(\"opacity\", function(d) {\n                    return d.data.value === 0 ? 0 : 0.5;\n                })\n                .style(\"visibility\", function(d) {\n                    return d.data.label === \"\" ? \"hidden\" : \"visible\";\n                })\n                .attrTween(\"points\", function(d) {\n                    this._current = this._current;\n                    var interpolate = d3.interpolate(this._current, d);\n                    var _this = this;\n                    return function(t) {\n                        var d2 = interpolate(t);\n                        _this._current = d2;\n                        var pos = that.outer_arc.centroid(d2);\n                        pos[0] = that.model.get(\"radius\") * 0.95 *\n                            (that.mid_angle_location(d2) === \"left\" ? -1 : 1);\n                        return [that.arc.centroid(d2), that.outer_arc.centroid(d2), pos];\n                    };\n                });\n\n            polylines.exit().remove();\n        }\n\n        slices.on(\"click\", function(d, i) {\n            return that.event_dispatcher(\"element_clicked\", {data: d, index: i});\n        });\n\n        this.update_labels();\n        this.update_values();\n        this.apply_styles();\n    },\n\n    update_stroke_and_opacities: function() {\n        var stroke = this.model.get(\"stroke\");\n        var opacities = this.model.get(\"opacities\");\n        this.pie_g.selectAll(\"path.slice\")\n            .style(\"stroke\", stroke)\n            .style(\"opacity\", function(d, i) { return opacities[i]; });\n    },\n\n    update_colors: function() {\n        var that = this;\n        var color_scale = this.scales.color;\n        this.pie_g.select(\".slices\")\n          .selectAll(\"path.slice\")\n          .style(\"fill\", function(d, i) {\n              return (d.data.color !== undefined && color_scale !== undefined) ?\n                  color_scale.scale(d.data.color) : that.get_colors(d.data.index);\n          });\n    },\n\n    update_labels: function() {\n        var display_labels = this.model.get(\"display_labels\");\n\n        var labels = this.pie_g.selectAll(\".labels text\")\n            .style(\"visibility\",  display_labels === \"none\" ? \"hidden\" : \"visible\")\n            .style(\"font-weight\", this.model.get(\"font_weight\"))\n            .style(\"font-size\", this.model.get(\"font_size\"));\n\n        var color = this.model.get(\"label_color\");\n        if(color !== undefined) {\n            labels.style(\"fill\", color);\n        }\n    },\n\n    update_values: function() {\n        var display_values = this.model.get(\"display_values\");\n        var values_format = d3.format(this.model.get(\"values_format\"));\n\n        var labels = this.pie_g.selectAll(\".labels text\")\n            .text(function(d) {\n                return d.data.label +\n                    (display_values ? \": \" + values_format(d.data.size) : \"\");\n            })\n    },\n\n    clear_style: function(style_dict, indices) {\n        // Function to clear the style of a dict on some or all the elements of the\n        // chart. If indices is null, clears the style on all elements. If\n        // not, clears on only the elements whose indices are matching.\n        var elements = this.pie_g.selectAll(\"path.slice\");\n        if(indices) {\n            elements = elements.filter(function(d, index) {\n                return indices.indexOf(index) !== -1;\n            });\n        }\n        var clearing_style = {};\n        for(var key in style_dict) {\n            clearing_style[key] = null;\n        }\n        elements.style(clearing_style);\n    },\n\n    set_style_on_elements: function(style, indices) {\n        // If the index array is undefined or of length=0, exit the\n        // function without doing anything\n        if(indices === undefined || indices === null || indices.length === 0) {\n            return;\n        }\n        var elements = this.pie_g.selectAll(\".slice\");\n        elements = elements.filter(function(data, index) {\n            return indices.indexOf(index) !== -1;\n        });\n        elements.style(style);\n    },\n\n    set_default_style: function(indices) {\n        // For all the elements with index in the list indices, the default\n        // style is applied.\n        this.update_colors();\n        this.update_stroke_and_opacities();\n    },\n\n    click_handler: function (args) {\n        var data = args.data;\n        var index = args.index;\n        var that = this;\n        var idx = this.model.get(\"selected\");\n        var selected = idx ? utils.deepCopy(idx) : [];\n            // index of slice i. Checking if it is already present in the list.\n        var elem_index = selected.indexOf(index);\n        // Replacement for \"Accel\" modifier.\n        var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n        if(elem_index > -1 && accelKey) {\n            // if the index is already selected and if accel key is\n            // pressed, remove the element from the list\n            selected.splice(elem_index, 1);\n        } else {\n            if(d3.event.shiftKey) {\n                //If shift is pressed and the element is already\n                //selected, do not do anything\n                if(elem_index > -1) {\n                    return;\n                }\n                //Add elements before or after the index of the current\n                //slice which has been clicked\n                var min_index = (selected.length !== 0) ?\n                    d3.min(selected) : -1;\n                var max_index = (selected.length !== 0) ?\n                    d3.max(selected) : that.model.mark_data.length;\n                if(index > max_index){\n                    _.range(max_index+1, index).forEach(function(i) {\n                        selected.push(i);\n                    });\n                } else if(index < min_index){\n                    _.range(index+1, min_index).forEach(function(i) {\n                        selected.push(i);\n                    });\n                }\n                } else if(!accelKey) {\n                selected = [];\n            }\n            // updating the array containing the slice indexes selected\n            // and updating the style\n            selected.push(index);\n        }\n        this.model.set(\"selected\",\n            ((selected.length === 0) ? null : selected),\n            {updated_view: this});\n        this.touch();\n        if(!d3.event) {\n            d3.event = window.event;\n        }\n        var e = d3.event;\n        if(e.cancelBubble !== undefined) { // IE\n            e.cancelBubble = true;\n        }\n        if(e.stopPropagation) {\n            e.stopPropagation();\n        }\n        e.preventDefault();\n        this.selected_indices = selected;\n        this.apply_styles();\n    },\n\n    reset_selection: function() {\n        this.model.set(\"selected\", null);\n        this.touch();\n        this.selected_indices = null;\n        this.clear_style(this.selected_style);\n        this.clear_style(this.unselected_style);\n        this.set_default_style();\n    },\n\n    compute_view_padding: function() {\n        var scales = this.model.get(\"scales\");\n        var r = d3.max([this.model.get(\"radius\"), this.model.get(\"inner_radius\")]);\n\n        var x_padding = (scales.x) ? (r+1) : 0;\n        var y_padding = (scales.y) ? (r+1) : 0;\n        if(x_padding !== this.x_padding || y_padding !== this.y_padding) {\n            this.x_padding = x_padding;\n            this.y_padding = y_padding;\n            this.trigger(\"mark_padding_updated\");\n        }\n    }\n});\n\nmodule.exports = {\n    Pie: Pie\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar PieModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"PieModel\",\n            _view_name: \"Pie\",\n\n            sizes: [],\n            color: null,\n            x: 0.5,\n            y: 0.5,\n            scales_metadata: {\n                color: { dimension: \"color\" }\n            },\n            sort: false,\n            colors: d3.scale.category10().range(),\n            stroke: null,\n            opacities: [],\n            radius: 180,\n            inner_radius: 0.1,\n            start_angle: 0.0,\n            end_angle: 360.0\n        });\n    },\n\n    initialize: function() {\n        PieModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:sizes\", this.update_data, this);\n        this.on(\"change:color\", function() {\n            this.update_color();\n            this.trigger(\"colors_updated\");\n        }, this);\n        this.on(\"change:labels\", this.update_labels, this);\n\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n        this.update_color();\n        this.update_labels();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        var sizes = this.get_typed_field(\"sizes\");\n        var color = this.get_typed_field(\"color\");\n        var labels = this.get(\"labels\");\n        this.mark_data = sizes.map(function(d, i) {\n            return {\n                size: d,\n                color: color[i],\n                // jshint eqnull: true\n                label: labels[i] == null ? \"\" : labels[i],\n                index: i\n            };\n        });\n        this.update_color();\n        this.update_domains();\n        this.trigger(\"data_updated\");\n    },\n\n    update_labels: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var labels = this.get(\"labels\");\n        this.mark_data.forEach(function(data, index) {\n            // jshint eqnull: true\n            data.label = labels[index] == null ? \"\" : labels[index];\n        });\n        this.trigger(\"labels_updated\");\n    },\n\n    update_color: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var color = this.get_typed_field(\"color\");\n        var color_scale = this.get(\"scales\").color;\n        if(color_scale) {\n            if(!this.get(\"preserve_domain\").color) {\n                color_scale.compute_and_set_domain(color, this.model_id + \"_color\");\n            } else {\n                color_scale.del_domain([], this.model_id + \"_color\");\n            }\n        }\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x;\n        var y_scale = scales.y;\n\n        if(x_scale) {\n            var x = (x_scale.type === \"date\") ?\n                this.get_date_elem(\"x\") : this.get(\"x\");\n            if(!this.get(\"preserve_domain\").x) {\n                x_scale.compute_and_set_domain([x], this.model_id + \"_x\");\n            } else {\n                x_scale.del_domain([], this.model_id + \"_x\");\n            }\n        }\n        if(y_scale) {\n            if(!this.get(\"preserve_domain\").y) {\n                y_scale.compute_and_set_domain([this.get(\"y\")], this.model_id + \"_y\");\n            } else {\n                y_scale.del_domain([], this.model_id + \"_y\");\n            }\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        return data.data;\n    }\n});\n\nmodule.exports = {\n    PieModel: PieModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar colorscale = require(\"./ColorScale\");\n\nvar DateColorScale = colorscale.ColorScale.extend({\n\n    create_d3_scale: function(){\n        this.scale = d3.time.scale();\n    }\n});\n\nmodule.exports = {\n    DateColorScale: DateColorScale\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar colorscale = require(\"./ColorScaleModel\");\n\nvar DateColorScaleModel = colorscale.ColorScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(colorscale.ColorScaleModel.prototype.defaults(), {\n            _model_name: \"DateColorScaleModel\",\n            _view_name: \"DateColorScale\"\n        });\n    },\n\n    set_init_state: function() {\n        this.type = \"date_color_linear\";\n        this.color_range = [];\n        this.mid = null;\n        this.global_min = (new Date()).setTime(0);\n        this.global_max = new Date();\n    },\n\n    min_max_changed: function() {\n        this.min = this.get_date_elem(\"min\");\n        this.max = this.get_date_elem(\"max\");\n        this.min_from_data = (this.min === null);\n        this.max_from_data = (this.max === null);\n        this.update_domain();\n    }\n});\n\nmodule.exports = {\n    DateColorScaleModel: DateColorScaleModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar linearscale = require(\"./LinearScale\");\n\nvar DateScale = linearscale.LinearScale.extend({\n    render: function() {\n        this.scale = d3.time.scale();\n        if(this.model.domain.length > 0)\n            this.scale.domain(this.model.domain);\n        this.offset = 0;\n        this.create_event_listeners();\n    },\n});\n\nmodule.exports = {\n    DateScale: DateScale,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar scatterbase = require(\"./ScatterBase\");\nvar markers = require(\"./Markers\");\nvar d3 = require(\"d3\");\n\nvar bqSymbol = markers.symbol;\n\n\nvar Scatter = scatterbase.ScatterBase.extend({\n\n    render: function() {\n\n        this.dot = bqSymbol()\n          .type(this.model.get(\"marker\"))\n          .size(this.model.get(\"default_size\"))\n          .skew(this.model.get(\"default_skew\"));\n\n        return Scatter.__super__.render.apply(this);\n    },\n\n    create_listeners: function() {\n        Scatter.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:colors\", this.update_colors, this);\n        this.listenTo(this.model, \"change:stroke\", this.update_stroke, this);\n        this.listenTo(this.model, \"change:stroke_width\", this.update_stroke_width, this);\n        this.listenTo(this.model, \"change:default_opacities\", this.update_default_opacities, this);\n        this.listenTo(this.model, \"change:default_skew\", this.update_default_skew, this);\n        this.listenTo(this.model, \"change:default_rotation\", this.update_xy_position, this);\n        this.listenTo(this.model, \"change:marker\", this.update_marker, this);\n        this.listenTo(this.model, \"change:default_size\", this.update_default_size, this);\n        this.listenTo(this.model, \"change:fill\", this.update_fill, this);\n        this.listenTo(this.model, \"change:display_names\", this.update_names, this);\n    },\n\n    update_colors: function(model, new_colors) {\n        if(!this.model.dirty) {\n            var that = this,\n                stroke = this.model.get(\"stroke\"),\n                len = new_colors.length;\n            this.d3el.selectAll(\".dot\")\n            .style(\"fill\", this.model.get(\"fill\") ?\n                function(d, i) {\n                    return that.get_element_color(d, i);\n                } : \"none\")\n            .style(\"stroke\", stroke ? stroke : function(d, i) {\n                return that.get_element_color(d, i);\n            });\n\n            if (this.legend_el) {\n                this.legend_el.select(\"path\")\n                .style(\"fill\", function(d, i) {\n                    return new_colors[i % len];\n                })\n                .style(\"stroke\", stroke ? stroke : function(d, i) {\n                        return new_colors[i % len];\n                    }\n                );\n                this.legend_el.select(\"text\")\n                .style(\"fill\", this.model.get(\"fill\") ? function(d, i) {\n                    return new_colors[i % len];\n                } : \"none\");\n            }\n        }\n        this.apply_styles()\n    },\n\n    update_fill: function(model, fill) {\n        var that = this,\n            colors = this.model.get(\"colors\"),\n            len = colors.length;\n        this.d3el.selectAll(\".dot\").style(\"fill\", fill  ? function(d, i) {\n            return that.get_element_color(d, i);\n        } : \"none\");\n        if (this.legend_el) {\n            this.legend_el.selectAll(\"path\")\n                .style(\"fill\", fill  ? function(d, i) {\n                    return colors[i % len];\n                } : \"none\");\n        }\n    },\n\n    update_stroke_width: function() {\n        var stroke_width = this.model.get(\"stroke_width\");\n\n        this.d3el.selectAll(\".dot\")\n          .style(\"stroke-width\", stroke_width);\n\n        if (this.legend_el) {\n            this.legend_el.selectAll(\"path\")\n              .style(\"stroke-width\", stroke_width);\n        }\n    },\n\n    update_stroke: function(model, fill) {\n        var that = this,\n            stroke = this.model.get(\"stroke\");\n        this.d3el.selectAll(\".dot\")\n            .style(\"stroke\", stroke ? stroke : function(d, i) {\n                return that.get_element_color(d, i);\n            });\n\n        if (this.legend_el) {\n            this.legend_el.selectAll(\"path\")\n                .style(\"stroke\", stroke);\n        }\n    },\n\n    update_default_opacities: function(animate) {\n        if (!this.model.dirty) {\n            var default_opacities = this.model.get(\"default_opacities\");\n            var colors = this.model.get(\"colors\");\n            var len = colors.length;\n            var len_opac = default_opacities.length;\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n            // update opacity scale range?\n            var that = this;\n            this.d3el.selectAll(\".dot\")\n                .transition(\"update_default_opacities\")\n                .duration(animation_duration)\n                .style(\"opacity\", function(d, i) {\n                    return that.get_element_opacity(d, i);\n                });\n            if (this.legend_el) {\n                this.legend_el.select(\"path\")\n                .style(\"opacity\", function(d, i) {\n                    return default_opacities[i % len_opac];\n                })\n                .style(\"fill\", function(d, i) {\n                    return colors[i % len];\n                });\n            }\n        }\n    },\n\n    update_marker: function(model, marker) {\n        if (!this.model.dirty) {\n            this.d3el.selectAll(\".dot\")\n                .transition(\"update_marker\")\n                .duration(this.parent.model.get(\"animation_duration\"))\n                .attr(\"d\", this.dot.type(marker));\n            if (this.legend_el) {\n                this.legend_el.select(\"path\")\n                    .attr(\"d\", this.dot.type(marker));\n            }\n        }\n    },\n\n    update_default_skew: function(animate) {\n        if (!this.model.dirty) {\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n            var that = this;\n            this.d3el.selectAll(\".dot\")\n                .transition(\"update_default_skew\")\n                .duration(animation_duration)\n                .attr(\"d\", this.dot.skew(function(d) {\n                    return that.get_element_skew(d);\n                }));\n        }\n    },\n\n    update_default_size: function(animate) {\n        this.compute_view_padding();\n        // update size scale range?\n        if (!this.model.dirty) {\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n            var that = this;\n            this.d3el.selectAll(\".dot\")\n                .transition(\"update_default_size\")\n                .duration(animation_duration)\n                .attr(\"d\", this.dot.size(function(d) {\n                    return that.get_element_size(d);\n                }));\n            // Label positions also need to change\n            this.update_names(animate);\n        }\n    },\n\n    update_names: function(animate) {\n        var that = this,\n            names = this.model.get_typed_field(\"names\"),\n            show_names = this.model.get(\"display_names\") && names.length !== 0,\n            animation_duration = animate ? this.parent.model.get(\"animation_duration\") : 0;\n\n        this.d3el.selectAll(\".object_grp\").select(\"text\")\n            .text(function(d) { return d.name; })\n            .transition(\"update_names\")\n            .duration(animation_duration)\n            .attr(\"transform\", function(d) {\n                var text_loc = Math.sqrt(that.get_element_size(d)) / 2.0;\n                return \"translate(\" + (text_loc) + \",\" + (-text_loc) + \")\";})\n            .attr(\"display\", function(d) {\n                return (show_names) ? \"inline\": \"none\";\n            });\n    },\n\n    color_scale_updated: function(animate) {\n        var that = this,\n            fill = this.model.get(\"fill\"),\n            stroke = this.model.get(\"stroke\");\n            var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n\n        this.d3el.selectAll(\".object_grp\")\n          .select(\"path\")\n          .transition(\"color_scale_updated\")\n          .duration(animation_duration)\n          .style(\"fill\", fill ?\n              function(d, i) {\n                  return that.get_element_color(d, i);\n              } : \"none\")\n          .style(\"stroke\", stroke ? stroke : function(d, i) {\n                  return that.get_element_color(d, i);\n              });\n    },\n\n    draw_elements: function(animate, elements_added) {\n        var that = this;\n\n        var animation_duration = animate === true ? this.parent.model.get(\"animation_duration\") : 0;\n        var elements = this.d3el.selectAll(\".object_grp\")\n\n        elements_added.append(\"path\").attr(\"class\", \"dot element\");\n        elements_added.append(\"text\").attr(\"class\", \"dot_text\");\n        elements.select(\"path\").transition(\"draw_elements\")\n            .duration(animation_duration)\n            .attr(\"d\", this.dot\n                .size(function(d) { return that.get_element_size(d); })\n                .skew(function(d) { return that.get_element_skew(d); }));\n\n        this.update_names(animate);\n        this.apply_styles();\n    },\n\n    draw_legend_elements: function(elements_added, rect_dim) {\n        var colors = this.model.get(\"colors\"),\n            len = colors.length,\n            stroke = this.model.get(\"stroke\");\n\n        elements_added.append(\"path\")\n          .attr(\"transform\", function(d, i) {\n              return \"translate( \" + rect_dim / 2 + \", \" + rect_dim / 2 + \")\";\n          })\n          .attr(\"d\", this.dot.size(64))\n          .style(\"fill\", this.model.get(\"fill\")  ?\n                function(d, i) {\n                    return colors[i % len];\n                } : \"none\")\n          .style(\"stroke\", stroke ? stroke :\n                function(d, i) {\n                    return colors[i % len];\n                }\n          );\n    },\n\n    set_default_style: function(indices) {\n        // For all the elements with index in the list indices, the default\n        // style is applied.\n        if(!indices || indices.length === 0) {\n            return;\n        }\n        var elements = this.d3el.selectAll(\".element\").filter(function(data, index) {\n            return indices.indexOf(index) !== -1;\n        });\n        var fill = this.model.get(\"fill\"),\n            stroke = this.model.get(\"stroke\"),\n            stroke_width = this.model.get(\"stroke_width\"),\n            that = this;\n        elements\n          .style(\"fill\", fill ? function(d, i) {\n             return that.get_element_color(d, i);\n          } : \"none\")\n          .style(\"stroke\", stroke ? stroke : function(d, i) {\n              return that.get_element_color(d, i);\n          }).style(\"opacity\", function(d, i) {\n              return that.get_element_opacity(d, i);\n          }).style(\"stroke-width\", stroke_width);\n    },\n\n    set_drag_style: function(d, i, dragged_node) {\n        d3.select(dragged_node)\n          .select(\"path\")\n          .classed(\"drag_scatter\", true)\n          .transition(\"set_drag_style\")\n          .attr(\"d\", this.dot.size(5 * this.model.get(\"default_size\")));\n\n        var drag_color = this.model.get(\"drag_color\");\n        if (drag_color) {\n            d3.select(dragged_node)\n              .select(\"path\")\n              .style(\"fill\", drag_color)\n              .style(\"stroke\", drag_color);\n        }\n    },\n\n    reset_drag_style: function(d, i, dragged_node) {\n        var stroke = this.model.get(\"stroke\"),\n            original_color = this.get_element_color(d, i);\n\n        d3.select(dragged_node)\n          .select(\"path\")\n          .classed(\"drag_scatter\", false)\n          .transition(\"reset_drag_style\")\n          .attr(\"d\", this.dot.size(this.get_element_size(d)));\n\n        if (this.model.get(\"drag_color\")) {\n            d3.select(dragged_node)\n              .select(\"path\")\n              .style(\"fill\", original_color)\n              .style(\"stroke\", stroke ? stroke : original_color);\n        }\n    },\n});\n\nmodule.exports = {\n    Scatter: Scatter\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar linearscalemodel = require(\"./LinearScaleModel\");\n\nvar DateScaleModel = linearscalemodel.LinearScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(linearscalemodel.LinearScaleModel.prototype.defaults(), {\n            _model_name: \"DateScaleModel\",\n            _view_name: \"DateScale\",\n\n            // min: null,\n            // max: null,\n            // mid: null\n        });\n    },\n\n    initialize: function() {\n        DateScaleModel.__super__.initialize.apply(this, arguments);\n    },\n\n    set_init_state: function() {\n        this.type = \"date\";\n        this.global_min = (new Date()).setTime(0);\n        this.global_max = new Date();\n    },\n\n    min_max_changed: function() {\n        this.min = this.get_date_elem(\"min\");\n        this.max = this.get_date_elem(\"max\");\n        this.min_from_data = (this.min === null);\n        this.max_from_data = (this.max === null);\n        this.update_domain();\n    }\n});\n\n\nmodule.exports = {\n    DateScaleModel: DateScaleModel\n};\n\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar LinesModel = markmodel.MarkModel.extend({\n\n    defaults: function () {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"LinesModel\",\n            _view_name: \"Lines\",\n            x: [],\n            y: [],\n            color: null,\n            scales_metadata: {\n                x: { orientation: \"horizontal\", dimension: \"x\" },\n                y: { orientation: \"vertical\", dimension: \"y\" },\n                color: { dimension: \"color\" }\n            },\n            colors: d3.scale.category10().range(),\n            fill_colors: d3.scale.category10().range(),\n            stroke_width: 2.0,\n            labels_visibility: \"none\",\n            curves_subset: [],\n            line_style: \"solid\",\n            interpolation: \"linear\",\n            close_path: false,\n            fill: \"none\",\n            marker: null,\n            marker_size: 64,\n            opacities: [],\n            fill_opacities: []\n        });\n    },\n\n    initialize: function() {\n        LinesModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"x\", \"y\", \"color\"], this.update_data, this);\n        this.on(\"change:labels\", this.update_labels, this);\n        // FIXME: replace this with on(\"change:preserve_domain\"). It is not done here because\n        // on_some_change depends on the GLOBAL backbone on(\"change\") handler which\n        // is called AFTER the specific handlers on(\"change:foobar\") and we make that\n        // assumption.\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        // Handling data updates\n        var that = this;\n        this.x_data = this.get_typed_field(\"x\");\n        this.y_data = this.get_typed_field(\"y\");\n        this.color_data = this.get_typed_field(\"color\");\n\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x, y_scale = scales.y;\n        var curve_labels = this.get(\"labels\");\n        if (this.x_data.length === 0 || this.y_data.length === 0) {\n            this.mark_data = [];\n        } else {\n            this.x_data = this.x_data[0] instanceof Array ?\n                this.x_data : [this.x_data];\n            this.y_data = this.y_data[0] instanceof Array ?\n                this.y_data : [this.y_data];\n            curve_labels = this.get_labels();\n\n            var y_length = this.y_data.length;\n\n            if (this.x_data.length == 1 && y_length > 1) {\n                // same x for all y\n                this.mark_data = curve_labels.map(function(name, i) {\n                    return {\n                        name: name,\n                        values: that.y_data[i].map(function(d, j) {\n                            return {x: that.x_data[0][j], y: d,\n                                    y0: that.y_data[Math.min(i + 1, y_length - 1)][j],\n                                    sub_index: j};\n                        }),\n                        color: that.color_data[i],\n                        index: i,\n                    };\n                });\n            } else {\n                this.mark_data = curve_labels.map(function(name, i) {\n                    var xy_data = d3.zip(that.x_data[i], that.y_data[i]);\n                    return {\n                        name: name,\n                        values: xy_data.map(function(d, j) {\n                            return {x: d[0], y: d[1],\n                                    y0: that.y_data[Math.min(i + 1, y_length - 1)][j],\n                                    sub_index: j};\n                        }),\n                        color: that.color_data[i],\n                        index: i,\n                    };\n                });\n            }\n        }\n        this.update_domains();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_labels: function() {\n        // update the names in mark_data\n        var labels = this.get_labels();\n        this.mark_data.forEach(function(element, i) {\n            element.name = labels[i];\n        });\n        this.trigger(\"labels_updated\");\n    },\n\n    get_labels: function() {\n        // Function to set the labels appropriately.\n        // Setting the labels to the value sent and filling in the\n        // remaining values.\n        var curve_labels = this.get(\"labels\");\n        var data_length = (this.x_data.length == 1) ?\n            (this.y_data.length) : Math.min(this.x_data.length, this.y_data.length);\n        if(curve_labels.length > data_length) {\n            curve_labels = curve_labels.slice(0, data_length);\n        }\n        else if(curve_labels.length < data_length) {\n            _.range(curve_labels.length, data_length).forEach(function(index) {\n                curve_labels[index] = \"C\" + (index+1);\n            });\n        }\n        return curve_labels;\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x, y_scale = scales.y;\n        var color_scale = scales.color;\n\n        if(!this.get(\"preserve_domain\").x) {\n            x_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                return elem.values.map(function(d) { return d.x; });\n            }), this.model_id + \"_x\");\n        } else {\n            x_scale.del_domain([], this.model_id + \"_x\");\n        }\n\n        if(!this.get(\"preserve_domain\").y) {\n            y_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                return elem.values.map(function(d) { return d.y; });\n            }), this.model_id + \"_y\");\n        } else {\n            y_scale.del_domain([], this.model_id + \"_y\");\n        }\n        if(color_scale !== null && color_scale !== undefined) {\n            if(!this.get(\"preserve_domain\").color) {\n                color_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                    return elem.color;\n                }), this.model_id + \"_color\");\n            } else {\n                color_scale.del_domain([], this.model_id + \"_color\");\n            }\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        return data;\n    },\n});\n\nvar FlexLineModel = LinesModel.extend({\n\n    defaults: function() {\n        return _.extend(LinesModel.prototype.defaults(), {\n            _model_name: \"FlexLineModel\",\n            _view_name: \"FlexLine\",\n\n            x: [],\n            y: [],\n            color: null,\n            scales_metadata: {\n                x: { orientation: \"horizontal\", dimension: \"x\" },\n                y: { orientation: \"vertical\", dimension: \"y\" },\n                color: { dimension: \"color\" }\n            },\n            colors: d3.scale.category10().range(),\n            fill_colors: d3.scale.category10().range(),\n            stroke_width: 2.0,\n            labels_visibility: \"none\",\n            curves_subset: [],\n            line_style: \"solid\",\n            interpolation: \"linear\",\n            close_path: false,\n            fill: \"none\",\n            marker: null,\n            marker_size: 64,\n            opacities: [],\n            fill_opacities: [],\n        });\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        // Handling data updates\n        var that = this;\n        this.x_data = this.get_typed_field(\"x\");\n        this.y_data = this.get_typed_field(\"y\");\n\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x, y_scale = scales.y;\n        var curve_labels = this.get(\"labels\");\n        if (this.x_data.length === 0 || this.y_data.length === 0) {\n            this.mark_data = [];\n            this.data_len = 0;\n        } else {\n            this.x_data = this.x_data[0] instanceof Array ?\n                this.x_data : [this.x_data];\n            this.y_data = this.y_data[0] instanceof Array ?\n                this.y_data : [this.y_data];\n            curve_labels = this.get_labels();\n            var color_data = this.get_typed_field(\"color\");\n            var width_data = this.get_typed_field(\"width\");\n            this.data_len = Math.min(this.x_data[0].length, this.y_data[0].length);\n\n            this.mark_data = [{\n                name: curve_labels[0],\n                values: _.range(this.data_len - 1).map(function(val, index) {\n                    return {\n                        x1: that.x_data[0][index],\n                        y1: that.y_data[0][index],\n                        x2: that.x_data[0][index + 1],\n                        y2: that.y_data[0][index + 1],\n                        color: color_data[index],\n                        size: width_data[index]\n                    };\n                })\n            }];\n        }\n\n        this.update_domains();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x, y_scale = scales.y;\n        var color_scale = scales.color;\n        var width_scale = scales.width;\n\n        if(!this.get(\"preserve_domain\").x) {\n            x_scale.compute_and_set_domain(this.x_data[0].slice(0, this.data_len), this.model_id + \"_x\");\n        } else {\n            x_scale.del_domain([], this.model_id + \"_x\");\n        }\n\n        if(!this.get(\"preserve_domain\").y) {\n            y_scale.compute_and_set_domain(this.y_data[0].slice(0, this.data_len), this.model_id + \"_y\");\n        } else {\n            y_scale.del_domain([], this.model_id + \"_y\");\n        }\n\n        if(color_scale !== null && color_scale !== undefined) {\n            if(!this.get(\"preserve_domain\").color) {\n                color_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                    return elem.values.map(function(d) {\n                        return d.color;\n                    });\n                }), this.model_id + \"_color\");\n            } else {\n                color_scale.del_domain([], this.model_id + \"_color\");\n            }\n        }\n        if(width_scale !== null && width_scale !== undefined) {\n            if(!this.get(\"preserve_domain\").width) {\n                width_scale.compute_and_set_domain(this.mark_data.map(function(elem) {\n                    return elem.values.map(function(d) {\n                        return d.size;\n                    });\n                }), this.model_id + \"_width\");\n            } else {\n                width_scale.del_domain([], this.model_id + \"_width\");\n            }\n        }\n    }\n});\n\nmodule.exports = {\n    LinesModel: LinesModel,\n    FlexLineModel: FlexLineModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./ScatterBaseModel\");\n\nvar ScatterModel = basemodel.ScatterBaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.ScatterBaseModel.prototype.defaults(), {\n            _model_name: \"ScatterModel\",\n            _view_name: \"Scatter\",\n            skew: null,\n            marker: \"circle\",\n            stroke: null,\n            stroke_width: 1.5,\n            default_skew: 0.5,\n            default_size: 64,\n            names: [],\n            display_names: true,\n            fill: true,\n            drag_color: null,\n            drag_size: 5.0,\n            names_unique: true,\n        });\n    },\n\n    initialize: function() {\n        // TODO: Normally, color, opacity and size should not require a redraw\n        ScatterModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:skew\", this.update_data, this);\n        this.on_some_change([\"names\", \"names_unique\"], function() {\n            this.update_unique_ids();\n            this.trigger(\"data_updated\");\n        }, this);\n    },\n\n    update_mark_data: function() {\n        ScatterModel.__super__.update_mark_data.apply(this);\n        var skew = this.get_typed_field(\"skew\");\n\n        this.mark_data.forEach(function(d, i){ d.skew = skew[i]; });\n    },\n\n    update_unique_ids: function() {\n        var names = this.get_typed_field(\"names\");\n        var show_labels = (names.length !== 0);\n        names = (show_labels) ? names : this.mark_data.map(function(data, index) {\n            return \"Dot\" + index;\n        });\n        var unique_ids = [];\n        if(this.get(\"names_unique\")) {\n            unique_ids = names.slice(0);\n        } else {\n            unique_ids = _.range(this.mark_data.length);\n        }\n\n        this.mark_data.forEach(function(data, index){\n            data.name = names[index];\n            data.unique_id = unique_ids[index];\n        });\n    },\n});\n\nmodule.exports = {\n    ScatterModel: ScatterModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar baseselector = require(\"./Selector\");\nvar mark = require(\"./Mark\");\nvar sel_utils = require(\"./selector_utils\");\n\nvar FastIntervalSelector = baseselector.BaseXSelector.extend({\n\n    render: function() {\n        FastIntervalSelector.__super__.render.apply(this);\n        this.freeze_but_move = true;\n        this.freeze_dont_move = false;\n        this.active = false;\n        this.dirty = false;\n        this.size = this.model.get(\"size\");\n\n        this.width = this.parent.width - this.parent.margin.left - this.parent.margin.right;\n        this.height = this.parent.height - this.parent.margin.top - this.parent.margin.bottom;\n\n        var that = this;\n        var scale_creation_promise = this.create_scales();\n        Promise.all([this.mark_views_promise, scale_creation_promise]).then(function() {\n            //container for mouse events\n            that.background = that.d3el.append(\"rect\")\n              .attr(\"x\", 0)\n              .attr(\"y\", 0)\n              .attr(\"width\", that.width)\n              .attr(\"height\", that.height)\n              .attr(\"class\", \"selector selectormouse\")\n              .attr(\"pointer-events\", \"all\")\n              .attr(\"visibility\", \"hidden\");\n\n            that.background.on(\"mousemove\", _.bind(that.mousemove, that))\n              .on(\"click\", _.bind(that.click, that))\n              .on(\"dblclick\", _.bind(that.dblclick, that));\n\n            that.rect = that.d3el.append(\"rect\")\n              .attr(\"class\", \"selector intsel\")\n              .attr(\"x\", 0)\n              .attr(\"y\", 0)\n              .attr(\"width\", that.size)\n              .attr(\"height\", that.height)\n              .attr(\"pointer-events\", \"none\")\n              .attr(\"display\", \"none\");\n\n            that.color_change();\n            that.selected_changed();\n            that.create_listeners();\n        });\n    },\n\n    create_listeners: function() {\n        FastIntervalSelector.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:color\", this.color_change, this);\n    },\n\n    color_change: function() {\n        if(this.model.get(\"color\") !== null) {\n            this.rect.style(\"fill\", this.model.get(\"color\"));\n        }\n    },\n\n    click: function () {\n        this.active = true;\n        this.rect.style(\"display\", \"inline\");\n        this.freeze_but_move = this.model.get(\"size\") ?\n            true : !this.freeze_but_move;\n    },\n\n    dblclick: function () {\n        this.freeze_dont_move = !this.freeze_dont_move;\n    },\n\n    mousemove: function() {\n        if (this.freeze_dont_move || !this.active) {\n            return;\n        }\n        this.dirty = true;\n        var mouse_pos = d3.mouse(this.background.node());\n        var int_len = this.size > 0 ?\n            this.size : parseInt(this.rect.attr(\"width\"));\n        var vert_factor = (this.height - mouse_pos[1]) / this.height;\n        var interval_size = this.freeze_but_move ?\n            int_len : Math.round(vert_factor * this.width);\n\n        var start;\n        if (mouse_pos[0] - interval_size / 2 < 0) {\n            start = 0;\n        } else if ((mouse_pos[0] + interval_size / 2) > this.width) {\n            start = this.width - interval_size;\n        } else {\n            start = mouse_pos[0] - interval_size / 2;\n        }\n\n        //update the interval location and size\n        this.rect.attr(\"x\", start);\n        this.rect.attr(\"width\", interval_size);\n        var pixel_extent = [start, start + interval_size];\n        this.model.set_typed_field(\"selected\",\n                                   this.scale.invert_range(pixel_extent));\n        this.update_mark_selected(pixel_extent);\n        this.touch();\n        this.dirty = false;\n    },\n\n    update_mark_selected: function(extent_x, extent_y) {\n\n        if(extent_x === undefined || extent_x.length === 0) {\n            // Reset all the selected in marks\n            _.each(this.mark_views, function(mark_view) {\n                return mark_view.selector_changed();\n            });\n        } if (extent_y === undefined) {\n            // 1d brush\n            var orient = this.model.get(\"orientation\");\n            var x = (orient == \"vertical\") ? [] : extent_x,\n                y = (orient == \"vertical\") ? extent_x : [];\n        } else {\n            // 2d brush\n            var x = extent_x, y = extent_y;\n        }\n        var point_selector = function(p) {\n            return sel_utils.point_in_rectangle(p, x, y);\n        };\n        var rect_selector = function(xy) {\n            return sel_utils.rect_inter_rect(xy[0], xy[1], x, y);\n        };\n\n        _.each(this.mark_views, function(mark_view) {\n            mark_view.selector_changed(point_selector, rect_selector);\n        }, this);\n    },\n\n    scale_changed: function() {\n        this.reset();\n        this.create_scale();\n    },\n\n    relayout: function() {\n        FastIntervalSelector.__super__.relayout.apply(this);\n\n        this.adjust_rectangle();\n        this.background\n          .attr(\"width\", this.width)\n          .attr(\"height\", this.height);\n\n        this.set_range([this.scale]);\n    },\n\n    reset: function() {\n        this.rect.attr(\"x\", 0)\n          .attr(\"width\", 0);\n        this.model.set_typed_field(\"selected\", []);\n        this.update_mark_selected();\n        this.touch();\n    },\n\n    update_scale_domain: function(ignore_gui_update) {\n        // Call the base class function to update the scale.\n        FastIntervalSelector.__super__.update_scale_domain.apply(this);\n        if(ignore_gui_update !== true) {\n            this.selected_changed();\n        }\n    },\n\n    selected_changed: function(model, value) {\n        //TODO: should the size get overridden if it was set previously and\n        //then selected was changed from the python side?\n        if(this.dirty) {\n            //this change was most probably triggered from the js side and\n            //should be ignored.\n            return;\n        }\n        //reposition the interval selector and set the selected attribute.\n        var selected = this.model.get_typed_field(\"selected\");\n        if(selected.length === 0) {\n            this.reset();\n        } else if (selected.length != 2) {\n            // invalid value for selected. Ignoring the value\n            return;\n        } else {\n            var pixels = selected.map(this.scale.scale);\n            pixels = pixels.sort(function(a, b) { return a - b; });\n\n            this.rect.attr({\n                x: pixels[0],\n                width: (pixels[1] - pixels[0])\n            }).style(\"display\", \"inline\");\n            this.active = true;\n            this.update_mark_selected(pixels)\n        }\n    },\n\n    adjust_rectangle: function() {\n        if (this.model.get(\"orientation\") == \"vertical\") {\n            this.d3el.selectAll(\"rect\")\n              .attr(\"x\", 0)\n              .attr(\"width\", this.width);\n        } else {\n            this.d3el.selectAll(\"rect\")\n              .attr(\"y\", 0)\n              .attr(\"height\", this.height);\n        }\n    },\n});\n\nmodule.exports = {\n    FastIntervalSelector: FastIntervalSelector\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar linearscale = require(\"./LinearScale\");\n\nvar LogScale = linearscale.LinearScale.extend({\n    render: function() {\n        this.scale = d3.scale.log();\n        if(this.model.domain.length > 0) {\n            this.scale.domain(this.model.domain);\n        }\n        this.offset = 0;\n        this.create_event_listeners();\n    }\n});\n\nmodule.exports = {\n    LogScale: LogScale\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar linearscalemodel = require(\"./LinearScaleModel\");\n\nvar LogScaleModel = linearscalemodel.LinearScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(linearscalemodel.LinearScaleModel.prototype.defaults(), {\n            _model_name: \"LogScaleModel\",\n            _view_name: \"LogScale\",\n            domain: []\n        });\n    },\n\n    initialize: function() {\n        LogScaleModel.__super__.initialize.apply(this, arguments);\n    },\n\n    set_init_state: function() {\n        this.type = \"log\";\n        this.global_min = Number.MIN_VALUE;\n        this.global_max = Number.POSITIVE_INFINITY;\n    }\n\n});\n\nmodule.exports = {\n    LogScaleModel: LogScaleModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\n\nvar SquareMarketMap = widgets.DOMWidgetView.extend({\n\n    render: function() {\n        this.width = this.model.get(\"width\");\n        this.height = this.model.get(\"height\");\n        this.margin = this.model.get('margin');\n\n        this.el.style[\"width\"] = this.width + this.margin.left + this.margin.right;\n        this.el.style[\"height\"] = this.height + this.margin.top + this.margin.bottom;\n\n        var sector_data = this.model.get('data');\n        this.colors = this.model.get('colors');\n        this.mode = this.model.get('mode');\n\n        var color= d3.scale.category10();\n        var that = this;\n        this.d3el.append(\"div\")\n            .style(\"position\", \"relative\")\n            .style(\"width\", (this.width + this.margin.left + this.margin.right) + \"px\")\n            .style(\"height\", (this.height + this.margin.top + this.margin.bottom) + \"px\")\n            .style(\"left\", this.margin.left + \"px\")\n            .style(\"top\", this.margin.top + \"px\");\n\n        this.margin = this.model.get(\"margin\");\n\n        this.tree_map = d3.layout.treemap()\n            .size([this.width, this.height])\n            .sticky(true)\n            .padding(null)\n            .mode(this.mode)\n            .value(function(d) {return d.size;});\n\n        var element = this.d3el.datum(sector_data).selectAll(\".node\")\n            .data(this.tree_map.nodes)\n            .enter().append(\"div\")\n            .attr(\"class\", \"node\")\n            .call(this.position)\n            .style({\n                \"background\": function(d, i) {\n                    return d.children ? color(d.name): null;\n                },\n                \"border\": \"solid white\"\n            })\n            .text(function(d) { return d.children ? null : d.name; })\n            .style({\n                'font': '11px sans-serif',\n                'position': 'absolute',\n                'text-align': 'center',\n                'overflow': 'hidden',\n                'color': 'white',\n            });\n    },\n\n    position: function(){\n        this.style(\"left\", function(d) { return d.x + \"px\"; })\n            .style(\"top\", function(d) { return d.y + \"px\"; })\n            .style(\"width\", function(d) {\n                return Math.max(0, d.dx - 1) + \"px\";\n            })\n            .style(\"height\", function(d) {\n                return Math.max(0, d.dy - 1) + \"px\";\n            });\n    }\n});\n\nmodule.exports = {\n    SquareMarketMap: SquareMarketMap\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar FigureModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.BaseModel.prototype.defaults(), {\n            _model_name: \"FigureModel\",\n            _view_name: \"Figure\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n            title: \"\",\n            axes: [],\n            marks: [],\n            interaction: null,\n            scale_x: undefined,\n            scale_y: undefined,\n            fig_color: null,\n            title_style: {},\n            background_style: {},\n            legend_style: {},\n            legend_text: {},\n\n            preserve_aspect: false,\n            min_aspect_ratio: 0,\n            max_aspect_ratio: 100,\n\n            fig_margin: {\n                top: 60,\n                bottom: 60,\n                left: 60,\n                right: 60\n            },\n\n            padding_x: 0.0,\n            padding_y: 0.025,\n            legend_location: \"top-right\",\n            animation_duration: 0\n        });\n    },\n\n    initialize: function() {\n        FigureModel.__super__.initialize.apply(this, arguments);\n        this.on(\"msg:custom\", this.handle_custom_messages, this);\n    },\n\n    handle_custom_messages: function(msg) {\n        if (msg.type === 'save_png') {\n            this.trigger(\"save_png\", msg.filename, msg.scale);\n        }\n        else if (msg.type === 'save_svg') {\n            this.trigger(\"save_svg\", msg.filename);\n        }\n    },\n\n    save_png: function() {\n        // TODO: Any view of this Figure model will pick up this event\n        // and render a png. Remove this eventually.\n        this.trigger(\"save_png\");\n    }\n}, {\n    serializers: _.extend({\n        marks: { deserialize: widgets.unpack_models },\n        axes:  { deserialize: widgets.unpack_models },\n        interaction: { deserialize: widgets.unpack_models },\n        scale_x: { deserialize: widgets.unpack_models },\n        scale_y: { deserialize: widgets.unpack_models },\n        layout:  { deserialize: widgets.unpack_models },\n    }, basemodel.BaseModel.serializers)\n});\n\nmodule.exports = {\n    FigureModel: FigureModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar mark = require(\"./Mark\");\nvar utils = require(\"./utils\");\n\nvar Map = mark.Mark.extend({\n\n    render: function() {\n        var base_render_promise = Map.__super__.render.apply(this);\n        this.map = this.d3el.append(\"svg\")\n            .attr(\"viewBox\", \"0 0 1200 980\");\n        this.width = this.parent.plotarea_width;\n        this.height = this.parent.plotarea_height;\n        this.map_id = widgets.uuid();\n        this.enable_hover = this.model.get(\"enable_hover\");\n        this.display_el_classes = [\"event_layer\"];\n        var that = this;\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n        return base_render_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.draw();\n        });\n    },\n\n    set_ranges: function() {\n    },\n\n    set_positional_scales: function() {\n        var geo_scale = this.scales.projection;\n        this.listenTo(geo_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    initialize_additional_scales: function() {\n        var color_scale = this.scales.color;\n        if(color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                this.update_style();\n            });\n            color_scale.on(\"color_scale_range_changed\",\n                           this.update_style, this);\n        }\n    },\n\n    remove_map: function() {\n        d3.selectAll(\".world_map.map\" + this.map_id).remove();\n    },\n\n    draw: function() {\n        this.set_ranges();\n        var that = this;\n        this.remove_map();\n        this.transformed_g = this.map.append(\"g\")\n            .attr(\"class\", \"world_map map\" + this.map_id);\n        this.fill_g = this.transformed_g.append(\"g\");\n        this.highlight_g = this.transformed_g.append(\"g\");\n        this.stroke_g = this.transformed_g.append(\"g\");\n        var projection = this.scales.projection;\n        //Bind data and create one path per GeoJSON feature\n        this.fill_g.selectAll(\"path\")\n            .data(that.model.geodata)\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", projection.path)\n            .style(\"fill\", function(d, i) {\n                return that.fill_g_colorfill(d, i);\n            });\n        this.stroke_g.selectAll(\"path\")\n            .data(that.model.geodata)\n            .enter()\n            .append(\"path\")\n            .attr(\"class\", \"event_layer\")\n            .attr(\"d\", projection.path)\n            .style(\"fill-opacity\", 0.0)\n            .on(\"click\", function(d, i) {\n                return that.event_dispatcher(\"element_clicked\", {\"data\": d, \"index\": i});\n            });\n        if(this.validate_color(this.model.get(\"stroke_color\"))) {\n            this.stroke_g.selectAll(\"path\")\n                .style(\"stroke\", this.model.get(\"stroke_color\"));\n        }\n        this.zoom = d3.behavior.zoom()\n            .scaleExtent([1, 8])\n            .on(\"zoom\", function() {\n               that.zoomed(that, false);\n            });\n        this.parent.bg.call(this.zoom);\n\n        this.parent.bg.on(\"dblclick.zoom\", null);\n        this.parent.bg.on(\"dblclick\", function() {\n            that.zoomed(that, true);\n        });\n    },\n\n    validate_color: function(color) {\n        return color !== \"\";\n    },\n\n    mouseover_handler: function() {\n        if (!this.model.get(\"hover_highlight\")) {\n            return;\n        }\n        var el = d3.select(d3.event.target);\n        if(this.is_hover_element(el)) {\n            var data = el.data()[0];\n            var idx = this.model.get(\"selected\");\n            var select = idx ? utils.deepCopy(idx) : [];\n            var node = this.highlight_g.append(function() {\n                return el.node().cloneNode(true);\n            });\n            node.classed(\"hovered\", true);\n            node.classed(\"event_layer\", false);\n\n            if(this.validate_color(this.model.get(\"hovered_styles\").hovered_stroke) &&\n                select.indexOf(data.id) === -1) {\n                node.style(\"stroke\", this.model.get(\"hovered_styles\").hovered_stroke)\n                    .style(\"stroke-width\", this.model.get(\"hovered_styles\").hovered_stroke_width);\n            }\n            var that = this;\n            if(this.validate_color(this.model.get(\"hovered_styles\").hovered_fill) &&\n                select.indexOf(data.id) === -1) {\n                node.style(\"fill-opacity\", 1.0)\n                    .style(\"fill\", function() {\n                        return that.model.get(\"hovered_styles\").hovered_fill;\n                    });\n            }\n        }\n    },\n\n    mouseout_handler: function() {\n        if (!this.model.get(\"hover_highlight\")) {\n            return;\n        }\n        var el = d3.select(d3.event.target);\n        if(this.is_hover_element(el)) {\n            var that = this;\n            el.transition(\"mouseout_handler\")\n            .style(\"fill\", function(d, i) {\n                return that.fill_g_colorfill(d, i);\n            })\n            .style(\"stroke\", function(d, i) {\n                return that.hoverfill(d, i);\n            });\n            that.highlight_g.selectAll(\".hovered\").remove();\n        }\n    },\n\n    click_handler: function() {\n        var el = d3.select(d3.event.target);\n        if(this.is_hover_element(el)) {\n            var data = el.data()[0];\n            var idx = this.model.get(\"selected\");\n            var selected = idx ? utils.deepCopy(idx) : [];\n            var elem_index = selected.indexOf(data.id);\n            if(elem_index > -1) {\n                selected.splice(elem_index, 1);\n                el.transition(\"click_handler\")\n                    .style(\"fill-opacity\", 0.0);\n                this.highlight_g.selectAll(\".hovered\").remove();\n                var choice = \"#c\".concat(data.id.toString());\n                d3.select(choice).remove();\n            } else {\n                this.highlight_g.selectAll(\".hovered\").remove();\n                this.highlight_g.append(function() {\n                    return el.node().cloneNode(true);\n                })\n                .attr(\"id\", \"c\" + data.id)\n                .classed(\"selected\", true)\n                .classed(\"event_layer\", false);\n\n                if (this.validate_color(this.model.get(\"selected_styles\").selected_fill)) {\n                    this.highlight_g.selectAll(\".selected\")\n                        .style(\"fill-opacity\", 1.0)\n                        .style(\"fill\", this.model.get(\"selected_styles\").selected_fill);\n                }\n\n                if (this.validate_color(this.model.get(\"selected_styles\").selected_stroke)) {\n                    this.highlight_g.selectAll(\".selected\")\n                        .style(\"stroke\", this.model.get(\"selected_styles\").selected_stroke)\n                        .style(\"stroke-width\", this.model.get(\"selected_styles\").selected_stroke_width);\n                }\n                selected.push(data.id);\n                this.model.set(\"selected\", selected);\n                this.touch();\n            }\n        this.model.set(\"selected\",\n            ((selected.length === 0) ? null : selected),\n            {updated_view: this});\n        this.touch();\n        }\n    },\n\n    zoomed: function(that, reset) {\n        var t = reset ? [0, 0] : d3.event.translate;\n        var s = reset ? 1 : d3.event.scale;\n        var h = that.height / 3;\n        var w = reset ? that.width : 2 * that.width;\n\n        t[0] = Math.min(that.width / 2 * (s - 1), Math.max(w / 2 * (1 - s), t[0]));\n        t[1] = Math.min(that.height / 2 * (s - 1) + this.height * s, Math.max(h / 2 * (1 - s) - that.width * s, t[1]));\n\n        that.zoom.translate(t);\n        if (reset) {\n            that.zoom.scale(s);\n        }\n        that.transformed_g.style(\"stroke-width\", 1 / s)\n            .attr(\"transform\", \"translate(\" + t + \")scale(\" + s + \")\");\n    },\n\n    create_listeners: function() {\n        var that = this;\n        this.d3el.on(\"mouseover\", _.bind(function() { this.event_dispatcher(\"mouse_over\"); }, this))\n            .on(\"mousemove\", _.bind(function() { this.event_dispatcher(\"mouse_move\"); }, this))\n            .on(\"mouseout\", _.bind(function() { this.event_dispatcher(\"mouse_out\"); }, this));\n\n        this.listenTo(this.model, \"data_updated\", this.draw, this);\n        this.listenTo(this.model, \"change:color\", this.update_style, this);\n        this.listenTo(this.model, \"change:stroke_color\", this.change_stroke_color, this);\n        this.listenTo(this.model, \"change:colors\", this.change_map_color, this);\n        this.listenTo(this.model, \"change:selected\", this.change_selected, this);\n        this.listenTo(this.model, \"change:selected_styles\", function() {\n            that.change_selected_fill();\n            that.change_selected_stroke();\n        });\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        }\n        else {\n            if(interactions.click !== undefined &&\n               interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click === \"select\") {\n                    this.event_listeners.parent_clicked = this.reset_selection;\n                    this.event_listeners.element_clicked = this.click_handler;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = function() {\n                        this.mouseover_handler();\n                        return this.refresh_tooltip();\n                    };\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = function() {\n                        this.mouseout_handler();\n                        return this.hide_tooltip();\n                    };\n                }\n            } else {\n                this.reset_hover();\n            }\n            if(interactions.legend_click !== undefined &&\n              interactions.legend_click !== null) {\n                if(interactions.legend_click === \"tooltip\") {\n                    this.event_listeners.legend_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                }\n            } else {\n                this.event_listeners.legend_clicked = function() {};\n            }\n        }\n    },\n\n    change_selected_fill: function() {\n        if (!this.validate_color(this.model.get(\"selected_styles\").selected_fill)) {\n            this.highlight_g.selectAll(\".selected\")\n                .style(\"fill-opacity\", 0.0);\n        } else {\n            this.highlight_g.selectAll(\".selected\")\n                .style(\"fill-opacity\", 1.0)\n                .style(\"fill\", this.model.get(\"selected_styles\").selected_fill);\n        }\n    },\n\n    change_selected_stroke: function() {\n        if (!this.validate_color(this.model.get(\"selected_styles\").selected_stroke)) {\n            this.highlight_g.selectAll(\".selected\")\n                .style(\"stroke-width\", 0.0);\n        } else {\n            this.highlight_g.selectAll(\".selected\")\n                .style(\"stroke-width\", this.model.get(\"selected_styles\").selected_stroke_width)\n                .style(\"stroke\", this.model.get(\"selected_styles\").selected_stroke);\n        }\n    },\n\n    change_selected: function() {\n        this.highlight_g.selectAll(\"path\").remove();\n        var that = this;\n        var idx = this.model.get(\"selected\");\n        var select = idx ? idx : [];\n        var temp = this.stroke_g.selectAll(\"path\").data();\n        this.stroke_g.selectAll(\"path\").style(\"stroke\", function(d, i) {\n            return that.hoverfill(d, i);\n        });\n        var nodes = this.stroke_g.selectAll(\"path\");\n        for (var i=0; i<temp.length; i++) {\n            if(select.indexOf(temp[i].id) > -1) {\n                that.highlight_g.append(function() {\n                    return nodes[0][i].cloneNode(true);\n                }).attr(\"id\", temp[i].id)\n                .style(\"fill-opacity\", function() {\n                    if (that.validate_color(that.model.get(\"selected_styles\").selected_fill)) {\n                        return 1.0;\n                    } else {\n                        return 0.0;\n                    }\n                })\n                .style(\"fill\", that.model.get(\"selected_styles\").selected_fill)\n                .style(\"stroke-opacity\", function() {\n                    if (that.validate_color(that.model.get(\"selected_styles\").selected_stroke)) {\n                        return 1.0;\n                    } else {\n                        return 0.0;\n                    }\n                })\n                .style(\"stroke\", that.model.get(\"selected_styles\").selected_stroke)\n                .style(\"stroke-width\", that.model.get(\"selected_styles\").selected_stroke_width)\n                .classed(\"selected\", true);\n            }\n        }\n    },\n\n    reset_selection: function() {\n        this.model.set(\"selected\", []);\n        this.touch();\n        this.highlight_g.selectAll(\".selected\").remove();\n        d3.select(this.d3el.parentNode)\n            .selectAll(\"path\")\n            .classed(\"selected\", false);\n        d3.select(this.d3el.parentNode)\n            .selectAll(\"path\")\n            .classed(\"hovered\", false);\n\n        var that = this;\n        this.stroke_g.selectAll(\"path\").style(\"stroke\", function(d, i) {\n            return that.hoverfill(d, i);\n        });\n        this.fill_g.selectAll(\"path\").classed(\"selected\", false)\n            .style(\"fill\", function(d, i) {\n                return that.fill_g_colorfill(d, i);\n            });\n    },\n\n    change_stroke_color: function() {\n        this.stroke_g.selectAll(\"path\")\n            .style(\"stroke\", this.model.get(\"stroke_color\"));\n    },\n\n    change_map_color: function() {\n\tvar that = this;\n        if (!this.is_object_empty(this.model.get(\"color\"))) {\n            return;\n        }\n        this.fill_g.selectAll(\"path\").style(\"fill\", function(d, i) {\n            return that.fill_g_colorfill(d, i)\n        });\n    },\n\n    update_style: function() {\n        var color_data = this.model.get(\"color\");\n        var that = this;\n        if (!this.is_object_empty(color_data)) {\n            this.fill_g.selectAll(\"path\").style(\"fill\", function(d, i) {\n                return that.fill_g_colorfill(d, i);\n            });\n        }\n    },\n\n    is_object_empty: function(object) {\n        var is_empty = true;\n        for(var keys in object) {\n            is_empty = false;\n            break;\n        }\n        return is_empty;\n    },\n\n    hoverfill: function(d, j) {\n        var idx = this.model.get(\"selected\");\n        var select = idx ? idx : [];\n        if (select.indexOf(d.id) > -1 &&\n            this.validate_color(this.model.get(\"selected_styles\").selected_stroke)) {\n            return this.model.get(\"selected_styles\").selected_stroke;\n        } else {\n            return this.model.get(\"stroke_color\");\n        }\n    },\n\n    fill_g_colorfill: function(d, j) {\n        var color_scale = this.scales.color;\n        var idx = this.model.get(\"selected\");\n        var selection = idx ? idx : [];\n        var color_data = this.model.get(\"color\");\n        var colors = this.model.get(\"colors\");\n\n        if (selection.indexOf(d.id) > -1) {\n\t\t    return this.model.get(\"selected_styles\").selected_fill;\n        } else if (this.is_object_empty(color_data)) {\n\t\t    return colors[d.id] || colors.default_color;\n        } else if (color_data[d.id] === undefined ||\n                   color_data[d.id] === null ||\n                   color_data[d.id] === \"nan\" ||\n                   color_scale === undefined) {\n            return colors.default_color;\n        } else {\n            return color_scale.scale(color_data[d.id]);\n        }\n    },\n});\n\nmodule.exports = {\n    Map: Map,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar utils = require(\"./utils\");\nvar _ = require(\"underscore\");\n\nvar Tooltip = widgets.DOMWidgetView.extend({\n\n    initialize: function() {\n        this.d3el = d3.select(this.el);\n        Tooltip.__super__.initialize.apply(this, arguments);\n    },\n\n    render: function() {\n        this.parent = this.options.parent;\n        this.update_formats();\n        this.create_listeners();\n        this.create_table();\n    },\n\n    create_listeners: function() {\n        this.listenTo(this.parent, \"update_tooltip\", this.update_tooltip);\n        this.model.on_some_change([\"fields\", \"show_labels\", \"labels\"], this.create_table, this);\n        this.listenTo(this.model, \"change:formats\", this.update_formats);\n    },\n\n    update_formats: function() {\n        var fields = this.model.get(\"fields\");\n        var formats = this.model.get(\"formats\");\n        this.tooltip_formats = fields.map(function(field, index) {\n            var fmt = formats[index];\n            if(fmt === undefined || fmt === \"\") {\n                return function(d) { return d; };\n            } else {\n                if(utils.is_valid_time_format(fmt)) {\n                    return d3.time.format(fmt);\n                }\n                else {\n                    return d3.format(fmt);\n                }\n            }\n        });\n    },\n\n    update_tooltip: function(data) {\n        //data is a dictionary passed by the parent along with the update_\n        //tooltip event. Responsibility of the mark to pass the data\n        var that = this;\n        this.d3el.select(\"table\")\n            .selectAll(\"tr\")\n            .select(\".datavalue\")\n            .text(function(datum, index) {\n                return that.tooltip_formats[index](data[datum]);\n            });\n    },\n\n    create_table: function() {\n        var fields = this.model.get(\"fields\");\n        var labels = _.clone(this.model.get(\"labels\"));\n        var ind = labels.length;\n        for (; ind < fields.length; ind++) {\n            labels[ind] = fields[ind];\n        }\n\n        this.d3el.select(\"table\").remove();\n        var tooltip_table = this.d3el.append(\"table\")\n            .selectAll(\"tr\").data(fields);\n\n        tooltip_table.exit().remove();\n        var table_rows = tooltip_table.enter().append(\"tr\")\n                            .attr(\"class\", \"datarow\");\n        if(this.model.get(\"show_labels\")) {\n            table_rows.append(\"td\")\n                .text(function(datum, index) { return labels[index]; })\n                .attr(\"class\", \"tooltiptext datafield\");\n        }\n        table_rows.append(\"td\")\n            .attr(\"class\", \"tooltiptext datavalue\");\n        this.update_formats();\n    }\n});\n\nmodule.exports = {\n    Tooltip: Tooltip\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar TooltipModel = widgets.DOMWidgetModel.extend({\n\n    defaults: function() {\n        return _.extend(widgets.DOMWidgetModel.prototype.defaults(), {\n            _model_name: \"TooltipModel\",\n            _view_name: \"Tooltip\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n            fields: [],\n            formats: [],\n            show_labels: true,\n            labels: []\n        });\n    }\n});\n\nmodule.exports = {\n    TooltipModel: TooltipModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar lines = require(\"./Lines\");\n\nvar FlexLine = lines.Lines.extend({\n\n    render: function() {\n        var base_render_promise = lines.Lines.__super__.render.apply(this);\n        var that = this;\n\n        return base_render_promise.then(function() {\n            var x_scale = that.scales.x, y_scale = that.scales.y;\n            that.create_listeners();\n            that.draw();\n        });\n    },\n\n    set_ranges: function() {\n        FlexLine.__super__.set_ranges.apply(this);\n        var width_scale = this.scales.width;\n        if(width_scale) {\n            width_scale.set_range([0.5, this.model.get(\"stroke_width\")]);\n        }\n    },\n\n    create_listeners: function() {\n        FlexLine.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:colors\", this.update_colors, this);\n        this.listenTo(this.model, \"change:labels_visibility\", this.update_legend_labels, this);\n        this.listenTo(this.model, \"change:color change:width\", this.update_and_draw, this);\n    },\n\n    draw_legend: function(elem, x_disp, y_disp, inter_x_disp, inter_y_disp) {\n        var g_elements = elem.selectAll(\".legend\" + this.uuid)\n            .data(this.model.mark_data, function(d, i) { return d.name; });\n\n        var that = this;\n        var rect_dim = inter_y_disp * 0.8;\n        g_elements.enter().append(\"g\")\n            .attr(\"class\", \"legend\" + this.uuid)\n            .attr(\"transform\", function(d, i) {\n                return \"translate(0, \" + (i * inter_y_disp + y_disp)  + \")\";\n            }).on(\"mouseover\", _.bind(this.make_axis_bold, this))\n            .on(\"mouseout\", _.bind(this.make_axis_non_bold, this))\n        .append(\"line\")\n            .style(\"stroke\", function(d,i) { return that.get_colors(i); })\n            .attr({x1: 0, x2: rect_dim, y1: rect_dim / 2 , y2: rect_dim / 2});\n\n        g_elements.append(\"text\")\n            .attr(\"class\",\"legendtext\")\n            .attr(\"x\", rect_dim * 1.2)\n            .attr(\"y\", rect_dim / 2)\n            .attr(\"dy\", \"0.35em\")\n            .text(function(d, i) {return that.model.get(\"labels\")[i]; })\n            .style(\"fill\", function(d,i) { return that.get_colors(i); });\n        var max_length = d3.max(this.model.get(\"labels\"), function(d) {\n            return d.length;\n        });\n\n        g_elements.exit().remove();\n        return [this.model.mark_data.length, max_length];\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    initialize_additional_scales: function() {\n        var color_scale = this.scales.color;\n        if(color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                this.draw();\n            });\n            color_scale.on(\"color_scale_range_changed\", this.draw, this);\n        }\n    },\n\n    draw: function() {\n        this.set_ranges();\n        var curves_sel = this.d3el.selectAll(\".curve\")\n            .data(this.model.mark_data, function(d, i) { return d.name; });\n\n        curves_sel.enter().append(\"g\")\n            .attr(\"class\", \"curve\");\n\n        curves_sel.exit()\n            .transition(\"draw\")\n            .duration(this.parent.model.get(\"animation_duration\"))\n            .remove();\n\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n\n        var that = this;\n        curves_sel[0].forEach(function(elem, index) {\n            var lines = d3.select(elem).selectAll(\"line\")\n                .data(that.model.mark_data[index].values);\n            lines.enter().append(\"line\");\n            lines.attr(\"class\", \"line-elem\")\n                .attr({\n                    x1: function(d) { return x_scale.scale(d.x1); },\n                    x2: function(d) { return x_scale.scale(d.x2); },\n                    y1: function(d) { return y_scale.scale(d.y1); },\n                    y2: function(d) { return y_scale.scale(d.y2); }\n                })\n                .attr(\"stroke\", function(d) {\n                    return that.get_element_color(d);\n                }).attr(\"stroke-width\", function(d) {\n                    return that.get_element_width(d);\n                });\n        });\n    },\n\n    get_element_color: function(d) {\n        var color_scale = this.scales.color;\n        if(color_scale !== undefined && d.color !== undefined) {\n            return color_scale.scale(d.color);\n        }\n        return this.model.get(\"colors\")[0];\n    },\n\n    get_element_width: function(d) {\n        var width_scale = this.scales.width;\n        if(width_scale !== undefined && d.size !== undefined) {\n            return width_scale.scale(d.size);\n        }\n        return this.model.get(\"stroke_width\");\n    },\n\n    relayout: function() {\n        lines.Lines.__super__.relayout.apply(this);\n        this.set_ranges();\n\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n\n        var that = this;\n        this.d3el.selectAll(\".curve\").selectAll(\".line-elem\")\n            .transition(\"relayout\")\n            .duration(this.parent.model.get(\"animation_duration\"))\n            .attr({\n                x1: function(d) { return x_scale.scale(d.x1); },\n                x2: function(d) { return x_scale.scale(d.x2); },\n                y1: function(d) { return y_scale.scale(d.y1); },\n                y2: function(d) { return y_scale.scale(d.y2); },\n        });\n    },\n\n    create_labels: function() {\n        //do nothing\n    }\n});\n\nmodule.exports = {\n    FlexLine: FlexLine\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\nvar topojson = require(\"topojson\");\n\nvar MapModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"MapModel\",\n            _view_name: \"Map\",\n\n            color: {},\n            hover_highlight: true,\n            hovered_styles: {\n                hovered_fill: \"Orange\",\n                hovered_stroke: null,\n                hovered_stroke_width: 2.0\n            },\n\n            stroke_color: null,\n            default_color: null,\n            scales_metadata: {\n                color: { dimension: \"color\" },\n                projection: { dimension: \"geo\" }\n            },\n            selected: [],\n            selected_styles: {\n                selected_fill: \"Red\",\n                selected_stroke: null,\n                selected_stroke_width: 2.0\n            },\n            map_data: undefined\n        });\n    },\n\n    initialize: function() {\n        MapModel.__super__.initialize.apply(this, arguments);\n        this.on(\"change:map_data\", this.update_data, this);\n        this.on(\"change:color\", this.color_data_updated, this);\n        this.update_data();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        var data = this.get(\"map_data\");\n        if (data.type == 'Topology') {\n            this.geodata = topojson.feature(data, data.objects.subunits).features;\n        } else {\n            this.geodata = data.features;\n        }\n        this.color_data_updated();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_properties: function(d) {\n        if (!d.properties) {\n            d.properties = {\"color\": this.color_data[d.id]};\n        } else {\n            d.properties.color = this.color_data[d.id];\n        }\n    },\n\n    color_data_updated: function() {\n        var that = this;\n        this.update_domains();\n        this.geodata.map(function(d) {\n            return that.update_properties(d)\n        });\n    },\n\n    update_domains: function() {\n        var scales = this.get(\"scales\");\n        var that = this;\n        var color_scale = scales.color;\n        this.color_data = this.get(\"color\");\n        if(color_scale !== null && color_scale !== undefined) {\n            if(!this.get(\"preserve_domain\").color) {\n                color_scale.compute_and_set_domain(\n                    Object.keys(this.color_data).map(function (d) {\n                        return that.color_data[d];\n                    }), this.model_id + \"_color\");\n            } else {\n                color_scale.del_domain([], this.model_id + \"_color\");\n            }\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        return _.extend(data.properties, {'id': data.id});\n    }\n});\n\nmodule.exports = {\n    MapModel: MapModel\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.topojson = global.topojson || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction noop() {}\n\nfunction transformAbsolute(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n  };\n}\n\nfunction transformRelative(transform) {\n  if (!transform) return noop;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0;\n    point[1] = y1 - y0;\n    x0 = x1;\n    y0 = y1;\n  };\n}\n\nfunction reverse(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n\nfunction bisect(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n\nfunction feature(topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function(o) { return feature$1(topology, o); })\n  } : feature$1(topology, o);\n}\n\nfunction feature$1(topology, o) {\n  var f = {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties || {},\n    geometry: object(topology, o)\n  };\n  if (o.id == null) delete f.id;\n  return f;\n}\n\nfunction object(topology, o) {\n  var absolute = transformAbsolute(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n      points.push(p = a[k].slice());\n      absolute(p, k);\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    p = p.slice();\n    absolute(p, 0);\n    return p;\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0].slice());\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var t = o.type;\n    return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n        : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n        : null;\n  }\n\n  var geometryType = {\n    Point: function(o) { return point(o.coordinates); },\n    MultiPoint: function(o) { return o.coordinates.map(point); },\n    LineString: function(o) { return line(o.arcs); },\n    MultiLineString: function(o) { return o.arcs.map(line); },\n    Polygon: function(o) { return polygon(o.arcs); },\n    MultiPolygon: function(o) { return o.arcs.map(polygon); }\n  };\n\n  return geometry(o);\n}\n\nfunction stitchArcs(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n\nfunction mesh(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nfunction meshArcs(topology, o, filter) {\n  var arcs = [];\n\n  function arc(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function line(arcs) {\n    arcs.forEach(arc);\n  }\n\n  function polygon(arcs) {\n    arcs.forEach(line);\n  }\n\n  function geometry(o) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n    else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n  }\n\n  if (arguments.length > 1) {\n    var geomsByArc = [],\n        geom;\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n    };\n\n    geometry(o);\n\n    geomsByArc.forEach(arguments.length < 3\n        ? function(geoms) { arcs.push(geoms[0].i); }\n        : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n  } else {\n    for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n  }\n\n  return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n}\n\nfunction cartesianTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n}\n\nfunction ring(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = ring[i];\n    area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return area / 2;\n}\n\nfunction merge(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nfunction mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      components = [];\n\n  objects.forEach(function(o) {\n    if (o.type === \"Polygon\") register(o.arcs);\n    else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n  });\n\n  function register(polygon) {\n    polygon.forEach(function(ring$$) {\n      ring$$.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring$$) {\n    return Math.abs(ring(object(topology, {type: \"Polygon\", arcs: [ring$$]}).coordinates[0]));\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var component = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      components.push(component);\n      while (polygon = neighbors.pop()) {\n        component.push(polygon);\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: components.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring$$) {\n          ring$$.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitchArcs(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n\nfunction neighbors(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nfunction compareArea(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nfunction minAreaHeap() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compareArea(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n      if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n\nfunction presimplify(topology, triangleArea) {\n  var absolute = transformAbsolute(topology.transform),\n      relative = transformRelative(topology.transform),\n      heap = minAreaHeap();\n\n  if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n  topology.arcs.forEach(function(arc) {\n    var triangles = [],\n        maxArea = 0,\n        triangle,\n        i,\n        n,\n        p;\n\n    // To store each point’s effective area, we create a new array rather than\n    // extending the passed-in point to workaround a Chrome/V8 bug (getting\n    // stuck in smi mode). For midpoints, the initial effective area of\n    // Infinity will be computed in the next step.\n    for (i = 0, n = arc.length; i < n; ++i) {\n      p = arc[i];\n      absolute(arc[i] = [p[0], p[1], Infinity], i);\n    }\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = arc.slice(i - 1, i + 2);\n      triangle[1][2] = triangleArea(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the area of the current point is less than that of the previous point\n      // to be eliminated, use the latter's area instead. This ensures that the\n      // current point cannot be eliminated without eliminating previously-\n      // eliminated points.\n      if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n      else maxArea = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    arc.forEach(relative);\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = triangleArea(triangle);\n    heap.push(triangle);\n  }\n\n  return topology;\n}\n\nvar version = \"1.6.27\";\n\nexports.version = version;\nexports.mesh = mesh;\nexports.meshArcs = meshArcs;\nexports.merge = merge;\nexports.mergeArcs = mergeArcs;\nexports.feature = feature;\nexports.neighbors = neighbors;\nexports.presimplify = presimplify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar widgets = require(\"@jupyter-widgets/base\");\n\nvar GeoScale = widgets.WidgetView.extend({\n\n    render: function() {\n        this.set_projection();\n        this.listenTo(this.model, \"attribute_changed\", this.reset_scale);\n    },\n\n    set_projection: function() {\n        this.path = d3.geo.path().projection(this.model.projection);\n        this.scale = this.model.projection;\n    },\n\n    reset_scale: function() {\n        this.set_projection();\n        this.trigger(\"domain_changed\", null);\n    }\n});\n\nvar Mercator = GeoScale.extend({\n});\n\nvar Albers = GeoScale.extend({\n});\n\nvar AlbersUSA = GeoScale.extend({\n});\n\nvar EquiRectangular = GeoScale.extend({\n});\n\nvar Orthographic = GeoScale.extend({\n});\n\nvar Gnomonic = GeoScale.extend({\n});\n\nvar Stereographic = GeoScale.extend({\n});\n\nmodule.exports = {\n    GeoScale: GeoScale,\n    Mercator: Mercator,\n    Albers: Albers,\n    AlbersUSA: AlbersUSA,\n    EquiRectangular: EquiRectangular,\n    Orthographic: Orthographic,\n    Gnomonic: Gnomonic,\n    Stereographic: Stereographic,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar scalemodel = require(\"./ScaleModel\");\n\nvar GeoScaleModel = scalemodel.ScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(scalemodel.ScaleModel.prototype.defaults(), {\n            _model_name: \"GeoScaleModel\",\n            _view_name: \"GeoScale\"\n        });\n    }\n});\n\nvar MercatorModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"MercatorModel\",\n            _view_name: \"Mercator\",\n            scale_factor: 190.0,\n            center: [0, 60],\n            rotate: [0, 0]\n        });\n    },\n\n    initialize: function() {\n        MercatorModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"scale_factor\", \"center\", \"rotate\"], this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.mercator()\n            .center(this.get(\"center\"))\n            .scale(this.get(\"scale_factor\"))\n            .rotate(this.get(\"rotate\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nvar AlbersModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"AlbersModel\",\n            _view_name: \"Albers\",\n            scale_factor: 250.0,\n            /*rotate: [96, 0],*/\n            center: [0, 60],\n            parallels: [29.5, 45.5],\n            precision: 0.1\n        });\n    },\n\n    initialize: function() {\n        AlbersModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"rotate\", \"center\", \"parallels\", \"scale_factor\", \"precision\"],\n            this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.albers()\n            .rotate(this.get(\"rotate\"))\n            .center(this.get(\"center\"))\n            .parallels(this.get(\"parallels\"))\n            .scale(this.get(\"scale_factor\"))\n            .precision(this.get(\"precision\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nvar AlbersUSAModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"AlbersUSAModel\",\n            _view_name: \"AlbersUSA\",\n            scale_factor: 1200,\n            translate: [600, 490]  // center of the SVG viewbox (see Map.js)\n        });\n    },\n\n    initialize: function() {\n        AlbersUSAModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"scale_factor\", \"translate\"], this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.albersUsa()\n            .scale(this.get(\"scale_factor\"))\n            .translate(this.get(\"translate\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nvar EquiRectangularModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"EquiRectangularModel\",\n            _view_name: \"EquiRectangular\",\n            scale_factor: 145.0\n        });\n    },\n\n    initialize: function() {\n        EquiRectangularModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"scale_factor\", \"center\"], this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.equirectangular()\n            .center(this.get(\"center\"))\n            .scale(this.get(\"scale_factor\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nvar OrthographicModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"OrthographicModel\",\n            _view_name: \"Orthographic\",\n            scale_factor: 145.0,\n            center: [0, 60],\n            rotate: [0, 0],\n            clip_angle: 90.0,\n            precision: 0.1\n        });\n    },\n\n    initialize: function() {\n        OrthographicModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"scale_factor\", \"center\", \"clip_angle\", \"rotate\", \"precision\"], this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.orthographic()\n            .center(this.get(\"center\"))\n            .scale(this.get(\"scale_factor\"))\n            .clipAngle(this.get(\"clip_angle\"))\n            .rotate(this.get(\"rotate\"))\n            .precision(this.get(\"precision\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nvar GnomonicModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"GnomonicModel\",\n            _view_name: \"Gnomonic\",\n            scale_factor: 145.0,\n           center: [0, 60],\n           precision: 0.1,\n           clip_angle: 89.999\n        });\n    },\n\n    initialize: function() {\n        GnomonicModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"scale_factor\", \"precision\", \"clip_angle\"], this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.gnomonic()\n            .clipAngle(this.get(\"clip_angle\"))\n            .scale(this.get(\"scale_factor\"))\n            .precision(this.get(\"precision\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nvar StereographicModel = GeoScaleModel.extend({\n\n    defaults: function() {\n        return _.extend(GeoScaleModel.prototype.defaults(), {\n            _model_name: \"StereographicModel\",\n            _view_name: \"StereographicModel\",\n            scale_factor: 245,\n            center: [0, 60],\n            precision: 0.1,\n            rotate: [96, 0],\n            clip_angle: 179.9999\n        });\n    },\n\n    initialize: function() {\n        StereographicModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"scale_factor\", \"center\", \"clip_angle\", \"rotate\", \"precision\"], this.create_projection, this);\n        this.create_projection();\n    },\n\n    create_projection: function() {\n        this.projection = d3.geo.stereographic()\n            .scale(this.get(\"scale_factor\"))\n            .rotate(this.get(\"rotate\"))\n            .clipAngle(this.get(\"clip_angle\"))\n            .center(this.get(\"center\"))\n            .precision(this.get(\"precision\"));\n        this.attribute_changed();\n    },\n\n    attribute_changed: function() {\n        this.trigger(\"attribute_changed\");\n    }\n});\n\nmodule.exports = {\n    GeoScaleModel: GeoScaleModel,\n    MercatorModel: MercatorModel,\n    AlbersModel: AlbersModel,\n    AlbersUSAModel: AlbersUSAModel,\n    EquiRectangularModel: EquiRectangularModel,\n    OrthographicModel: OrthographicModel,\n    GnomonicModel: GnomonicModel,\n    StereographicModel: StereographicModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar figure = require(\"./Figure\");\nvar popperreference = require(\"./PopperReference\");\nvar popper = require(\"popper.js\");\n\nif (popper.__esModule) {\n    popper = popper.default;\n}\n\nvar MarketMap = figure.Figure.extend({\n\n    render: function(options) {\n        this.id = widgets.uuid();\n        var min_width = String(this.model.get(\"layout\").get(\"min_width\"));\n        var min_height = String(this.model.get(\"layout\").get(\"min_height\"));\n\n        var impl_dimensions = this._get_height_width(min_height.slice(0, -2), min_width.slice(0, -2));\n        this.width = impl_dimensions[\"width\"];\n        this.height = impl_dimensions[\"height\"];\n\n        this.scales = {};\n        this.set_top_el_style();\n        var that = this;\n        this.margin = this.model.get(\"map_margin\");\n        this.num_rows = this.model.get(\"rows\");\n        this.num_cols = this.model.get(\"cols\");\n        this.row_groups = this.model.get(\"row_groups\");\n        this.enable_select = this.model.get(\"enable_select\");\n\n        this.update_data();\n        // set the number of rows and columns in the map\n        this.set_area_dimensions(this.data.length);\n\n        if (this.model.get('theme')) {\n            this.svg.classed(this.model.get('theme'), true);\n        }\n        this.fig = this.svg.append(\"g\")\n                .attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n        this.fig_map = this.fig.append(\"g\");\n        this.fig_axes = this.fig.append(\"g\");\n        this.fig_click = this.fig.append(\"g\");\n        this.fig_hover = this.fig.append(\"g\");\n        this.fig_names = this.fig.append(\"g\")\n            .style(\"display\", (this.model.get(\"show_groups\") ? \"inline\" : \"none\"));\n\n        this.fig_map.classed(\"g-map\", true);\n        this.fig_axes.classed(\"g-axes\", true);\n        this.fig_click.classed(\"g-click\", true);\n        this.fig_hover.classed(\"g-hover\", true);\n        this.fig_names.classed(\"g-names\", true);\n        this.axis = [];\n\n        // code for tool tip to be displayed\n        this.tooltip_div = d3.select(document.createElement(\"div\"))\n            .attr(\"class\", \"mark_tooltip\")\n            .style(\"opacity\", 0)\n            .style(\"pointer-events\", \"none\")\n\n        var freeze_tooltip_loc = this.model.get(\"freeze_tooltip_location\");\n        if (freeze_tooltip_loc) {\n            this.popper_reference = new popperreference.ElementReference(this.svg.node());\n        } else {\n            this.popper_reference = new popperreference.PositionReference({x: 0, y: 0, width: 20, height: 20});\n        }\n\n        this.popper = new popper(this.popper_reference, this.tooltip_div.node(), {\n            placement: 'auto',\n        });\n\n        this.update_default_tooltip();\n\n        this.selected_stroke = this.model.get(\"selected_stroke\");\n        this.hovered_stroke = this.model.get(\"hovered_stroke\");\n\n        this.update_plotarea_dimensions();\n\n        this.title = this.fig.append(\"text\")\n          .attr(\"class\", \"mainheading\")\n          .attr({x: (0.5 * (this.plotarea_width)), y: -(this.margin.top / 2.0), dy: \"1em\"})\n          .text(this.model.get(\"title\"))\n          .style(this.model.get(\"title_style\"));\n\n        var scale_creation_promise = this.create_scale_views();\n        scale_creation_promise.then(function() {\n            that.create_listeners();\n            that.axis_views = new widgets.ViewList(that.add_axis, null, that);\n            that.axis_views.update(that.model.get(\"axes\"));\n            that.model.on(\"change:axes\", function(model, value, options) {\n                that.axis_views.update(value);\n            });\n        });\n        this.displayed.then(function() {\n            document.body.appendChild(that.tooltip_div.node())\n            that.relayout();\n            that.draw_group_names();\n            that.create_tooltip_widget();\n        });\n    },\n\n    set_top_el_style: function() {\n        this.el.style[\"user-select\"] = \"none\";\n        this.el.style[\"ms-user-select\"] = \"none\";\n        this.el.style[\"moz-user-select\"] = \"none\";\n        this.el.style[\"khtml-user-select\"] = \"none\";\n        this.el.style[\"webkit-user-select\"] = \"none\";\n    },\n\n    update_plotarea_dimensions: function() {\n        this.plotarea_width = this.width - this.margin.left - this.margin.right;\n        this.plotarea_height = this.height - this.margin.top - this.margin.bottom;\n        this.column_width = parseFloat((this.plotarea_width / this.num_cols).toFixed(2));\n        this.row_height = parseFloat((this.plotarea_height / this.num_rows).toFixed(2));\n    },\n\n    reset_drawing_controls: function() {\n        // Properties useful in drawing the map\n        this.prev_x = 0;\n        this.prev_y = -1;\n        this.y_direction = 1;  // for y direction 1 means going to the right\n        this.x_direction = 1;  // for x direction 1 means going down\n        this.group_iter = 1;\n    },\n\n    create_listeners: function() {\n        this.listenTo(this.model, \"change:scales\", this.create_scale_views, this);\n        this.listenTo(this.model, \"change:color\", this.recolor_chart, this);\n        this.listenTo(this.model, \"change:colors\", this.colors_updated, this);\n        this.listenTo(this.model, \"change:show_groups\", this.show_groups, this);\n        this.listenTo(this.model, \"change:selected_stroke\", this.update_selected_stroke, this);\n        this.listenTo(this.model, \"change:hovered_stroke\", this.update_hovered_stroke, this);\n        this.listenTo(this.model, \"change:font_style\", this.update_font_style, this);\n        this.model.on_some_change([\"title\", \"title_style\"], this.update_title, this);\n        this.listenTo(this.model, \"change:selected\", function() {\n            this.clear_selected();\n            this.apply_selected();\n        }, this);\n        this.model.on_some_change([\"names\", \"groups\", \"ref_data\"], function() {\n            this.update_data();\n            this.compute_dimensions_and_draw();\n        }, this);\n        this.listenTo(this.model, \"change:rows\", function(model, value) {\n            this.num_rows = value;\n            this.compute_dimensions_and_draw();\n        }, this);\n        this.listenTo(this.model, \"change:cols\", function(model, value) {\n            this.num_cols = value;\n            this.compute_dimensions_and_draw();\n        }, this);\n        this.listenTo(this.model, \"change:row_groups\", function(model, value) {\n            this.row_groups = value;\n            this.compute_dimensions_and_draw();\n        }, this);\n        this.listenTo(this.model, \"change:tooltip_widget\", this.create_tooltip_widget, this);\n        this.listenTo(this.model, \"change:tooltip_fields\", this.update_default_tooltip, this);\n        this.listenTo(this.model, \"change:tooltip_formats\", this.update_default_tooltip, this);\n    },\n\n    update_title: function(model, value) {\n        this.title.text(this.model.get(\"title\"))\n           .style(this.model.get(\"title_style\"));\n    },\n\n    relayout: function() {\n        var that = this;\n\n        var impl_dimensions = this._get_height_width(this.el.clientHeight, this.el.clientWidth);\n        this.width = impl_dimensions[\"width\"];\n        this.height = impl_dimensions[\"height\"];\n\n        window.requestAnimationFrame(function () {\n            // update ranges\n            that.margin = that.model.get(\"map_margin\");\n            that.update_plotarea_dimensions();\n\n            // transform figure\n            that.fig.attr(\"transform\", \"translate(\" + that.margin.left + \",\" +\n                                                      that.margin.top + \")\");\n            that.title.attr({\n                x: (0.5 * (that.plotarea_width)),\n                y: -(that.margin.top / 2.0),\n                dy: \"1em\"\n            });\n\n            that.draw_map();\n\n            // Drawing the selected cells\n            that.clear_selected();\n            that.apply_selected();\n\n            // When map is expanded or contracted, there should not be any\n            // accidental hovers. To prevent this, the following call is made.\n            that.fig_hover.selectAll(\"rect\")\n                .remove();\n            that.hide_tooltip();\n            that.trigger(\"margin_updated\");\n        });\n    },\n\n    update_data: function() {\n        var that = this;\n        this.data = this.model.get_typed_field(\"names\");\n        this.ref_data = this.model.get(\"ref_data\");\n        this.group_data = this.model.get_typed_field(\"groups\");\n        this.groups = _.uniq(this.group_data, true);\n        var display_text = this.model.get_typed_field(\"display_text\");\n        display_text = (display_text === undefined || display_text.length === 0) ? this.data : display_text;\n\n        this.colors = this.model.get(\"colors\");\n        var num_colors = this.colors.length;\n        this.colors_map = function(d) { return that.get_color(d, num_colors);};\n        var color_data = this.model.get_typed_field(\"color\");\n        var mapped_data = this.data.map(function(d, i) {\n            return {\n                display: display_text[i],\n                name: d,\n                color: color_data[i],\n                group: that.group_data[i],\n                ref_data: (that.ref_data === null || that.ref_data === undefined) ? null : that.ref_data[i]\n            };\n        });\n\n        this.update_domains();\n        this.grouped_data = _.groupBy(mapped_data, function(d, i) { return that.group_data[i]; });\n        this.groups = [];\n        this.running_sums = [];\n        this.running_sums[0] = 0;\n        var count = 0;\n        for (var key in this.grouped_data) {\n            this.groups.push(key);\n            count += this.grouped_data[key].length;\n            this.running_sums.push(count);\n        }\n        this.running_sums.pop();\n    },\n\n    update_domains: function() {\n        var color_scale_model = this.model.get(\"scales\").color;\n        var color_data = this.model.get_typed_field(\"color\");\n        if(color_scale_model && color_data.length > 0) {\n            color_scale_model.compute_and_set_domain(color_data, this.model.model_id);\n        }\n    },\n\n    set_area_dimensions: function(num_items) {\n        this.num_rows = this.model.get(\"rows\");\n        this.num_cols = this.model.get(\"cols\");\n        this.row_groups = this.model.get(\"row_groups\");\n\n        if (this.num_cols !== undefined && this.num_cols !== null && this.num_cols !== 0) {\n            // When the number of row groups is greater than 1, the number\n            // of columns has to be an odd number. This is to\n            // ensure the continuity of the waffles when groups are spread\n            // across multiple row groups\n            if(this.row_groups > 1 && this.num_cols % 2 === 0)\n                this.num_cols++;\n            this.num_rows = Math.floor(num_items / this.num_cols);\n            this.num_rows = (num_items % this.num_cols === 0) ? this.num_rows : (this.num_rows + 1);\n        } else if(this.num_rows !== undefined && this.num_rows !== null && this.num_rows !== 0) {\n            this.num_cols = Math.floor(num_items / this.num_rows);\n            this.num_cols = (num_items % this.num_rows === 0) ? this.num_cols : (this.num_cols + 1);\n            if(this.row_groups > 1 && this.num_cols % 2 === 0)\n                this.num_cols++;\n        } else {\n            this.num_cols = Math.floor(Math.sqrt(num_items));\n            if(this.row_groups > 1 && this.num_cols % 2 === 0)\n                this.num_cols++;\n            this.num_rows = Math.floor(num_items / this.num_cols);\n            this.num_rows = (num_items % this.num_cols === 0) ? this.num_rows : (this.num_rows + 1);\n        }\n\n        // row_groups cannot be greater than the number of rows\n        this.row_groups = Math.min(this.row_groups, this.num_rows);\n        // if there is only one row_group, then the number of columns are\n        // not necessarily equal to the variable this.num_cols as we draw\n        // row first. So we need to adjust the this.num_cols variable\n        // according to the num_rows.\n        if(this.row_groups == 1) {\n            this.num_cols = Math.floor(num_items / this.num_rows);\n            this.num_cols = (num_items % this.num_rows === 0) ? this.num_cols : (this.num_cols + 1);\n        }\n        // depending on the number of rows, we need to decide when to\n        // switch direction. The below functions tells us where to swtich\n        // direction.\n        this.set_row_limits();\n    },\n\n    compute_dimensions_and_draw: function() {\n        this.set_area_dimensions(this.data.length);\n        this.update_plotarea_dimensions();\n        this.draw_map();\n\n        this.clear_selected();\n        this.apply_selected();\n\n        // when data is changed\n        this.fig_hover.selectAll(\"rect\")\n            .remove();\n        this.hide_tooltip();\n    },\n\n    update_default_tooltip: function() {\n        this.tooltip_fields = this.model.get(\"tooltip_fields\");\n        var formats = this.model.get(\"tooltip_formats\");\n        this.tooltip_formats = this.tooltip_fields.map(function(field, index) {\n            var fmt = formats[index];\n            if(fmt === undefined || fmt === \"\") {return function(d) { return d; }; }\n            else return d3.format(fmt);\n        });\n    },\n\n    create_scale_views: function() {\n        for (var key in this.scales) {\n            this.stopListening(this.scales[key]);\n        }\n        var scale_models = this.model.get(\"scales\");\n        var that = this;\n        var scale_promises = {};\n        _.each(scale_models, function(model, key) {\n            scale_promises[key] = that.create_child_view(model);\n        });\n        return widgets.resolvePromisesDict(scale_promises).then(function(d) {\n            that.scales = d;\n            that.set_scales();\n        });\n    },\n\n    set_scales: function() {\n        var that = this;\n        var color_scale = this.scales.color;\n        if(color_scale) {\n            color_scale.set_range();\n            color_scale.on(\"color_scale_range_changed\", that.update_map_colors, that);\n            this.update_domains();\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                that.update_map_colors();\n            });\n            this.update_map_colors();\n        }\n    },\n\n    show_groups: function(model, value) {\n        this.fig_names.style(\"display\", (value ? \"inline\" : \"none\"));\n        this.fig_map.selectAll(\".market_map_text\").style(\"opacity\", (value ? 0.2 : 1));\n        this.fig_map.selectAll(\".market_map_rect\").style(\"stroke-opacity\", (value ? 0.2 : 1));\n    },\n\n    draw_map: function() {\n        this.reset_drawing_controls();\n        // Removing pre existing elements from the map\n        this.fig_map.selectAll(\".element_group\").remove();\n        this.fig_names.selectAll(\".names_object\").remove();\n        this.rect_groups = this.fig_map.selectAll(\".element_group\")\n            .data(this.groups);\n        var color_scale = this.scales.color;\n\n        var that = this;\n        this.rect_groups.enter()\n            .append(\"g\")\n            .attr(\"class\", \"element_group\")\n            .attr(\"transform\", function(d, i) { return that.get_group_transform(i); });\n\n        this.rect_groups.exit().remove();\n        this.end_points = [];\n        this.rect_groups[0].forEach(function(d, i) {\n            var data = that.grouped_data[that.groups[i]];\n            var color = that.colors_map(i);\n            var return_arr = that.get_new_cords();\n            var ends = that.get_end_points(return_arr[2], data.length, return_arr[0], return_arr[1], return_arr[3], return_arr[4]);\n            ends.forEach(function(point) { that.end_points.push(point); });\n            var element_count = that.running_sums[i];\n\n            var groups = d3.select(d)\n                .selectAll(\".rect_element\")\n                .data(data);\n\n            // Appending the <g> <rect> and <text> elements to the newly\n            // added nodes\n            var new_groups = groups.enter()\n                .append(\"g\")\n                .classed(\"rect_element\", true);\n\n            new_groups.append(\"rect\")\n                .attr(\"x\", 0)\n                .attr(\"y\", 0)\n                .classed(\"market_map_rect\", true);\n\n            new_groups.append(\"text\")\n                .classed(\"market_map_text\", true)\n                .style({\"text-anchor\": \"middle\",\n                        \"fill\" : \"black\",\n                        \"pointer-events\": \"none\",\n                        \"dominant-baseline\": \"central\"})\n                .style(that.model.get(\"font_style\"));\n\n            // Update the attributes of the entire set of nodes\n            groups.attr(\"transform\", function(data, ind) { return that.get_cell_transform(ind); })\n                .on(\"click\", function(data, ind) { that.cell_click_handler(data, (element_count + ind), this);})\n                .on(\"mouseover\", function(data, ind) { that.mouseover_handler(data, (element_count + ind), this);})\n                .on(\"mousemove\", function(data) { that.mousemove_handler(data); })\n                .on(\"mouseout\", function(data, ind) { that.mouseout_handler(data, (element_count + ind), this);})\n                .attr(\"class\", function(data, index) { return d3.select(this).attr(\"class\") + \" \" + \"rect_\" + (element_count + index); });\n\n            groups.selectAll(\".market_map_rect\")\n                .attr(\"width\", that.column_width)\n                .attr(\"height\", that.row_height)\n                .style(\"stroke-opacity\", (that.model.get(\"show_groups\") ? 0.2 : 1.0))\n                .style({'stroke': that.model.get(\"stroke\"), \"fill\": function(elem, j) {\n                    return (color_scale && elem.color !== undefined && elem.color !== null) ?\n                        color_scale.scale(elem.color) :\n                        that.colors_map(i);}});\n\n            groups.selectAll(\".market_map_text\")\n                .attr(\"x\", that.column_width / 2.0)\n                .attr(\"y\", that.row_height / 2.0)\n                .text(function(data, j) { return data.display; })\n                .style(\"opacity\", (that.model.get(\"show_groups\") ? 0.2 : 1.0));\n\n            // Removing the old nodes\n            groups.exit().remove();\n            var path = that.create_bounding_path(d, ends);\n            var min_x = d3.min(ends, function(end_point) { return end_point.x;});\n            var min_y = d3.min(ends, function(end_point) { return end_point.y;});\n\n            that.fig_names.append(\"foreignObject\")\n                .attr(\"class\", \"names_object\")\n                .attr(\"x\", min_x)\n                .attr(\"y\", min_y)\n                .append(\"xhtml:div\")\n                .attr(\"class\", \"names_div\")\n                .style({\"display\": \"flex\", \"flex-direction\": \"row\", \"align-content\": \"center\", \"align-items\": \"center\", \"width\": \"100%\",\n                       \"height\": \"100%\", \"justify-content\": \"center\", \"word-wrap\": \"break-word\", \"font\": \"24px sans-serif\", \"color\": \"black\"})\n                .text(that.groups[i]);\n        });\n        this.draw_group_names();\n    },\n\n    draw_group_names: function() {\n        // Get all the bounding rects of the paths around each of the\n        // sectors. Get their client bounding rect.\n        var paths = this.svg.selectAll(\".bounding_path\")[0];\n        var clientRects = paths.map(function(path) { return path.getBoundingClientRect(); });\n        var text_elements = this.fig_names.selectAll(\".names_object\").data(clientRects);\n        text_elements.attr(\"width\", function(d) { return d.width;})\n            .attr(\"height\", function(d) { return d.height;});\n    },\n\n    recolor_chart: function() {\n        var that = this;\n        this.update_data();\n        this.rect_groups = this.fig.selectAll(\".element_group\")\n            .data(this.groups);\n        var color_scale = this.scales.color;\n\n        this.rect_groups[0].forEach(function(d, i) {\n            var data = that.grouped_data[that.groups[i]];\n            var color = that.colors_map(i);\n            var groups = d3.select(d)\n                .selectAll(\".rect_element\")\n                .data(data)\n                .select('rect')\n                .style({'stroke': that.model.get('stroke'), 'fill': function(elem, j)\n                       { return (color_scale && elem.color !== undefined && elem.color !== null) ?\n                           color_scale.scale(elem.color) :\n                           that.colors_map(i);}});\n        });\n    },\n\n    update_font_style: function(model, value) {\n        this.svg.selectAll(\".market_map_text\")\n            .style(value);\n    },\n\n    update_map_colors: function() {\n        var that = this;\n        var color_scale = this.scales.color;\n        if(this.rect_groups !== undefined && this.rect_groups !== null) {\n            this.rect_groups[0].forEach(function(d, i) {\n                var data = that.grouped_data[that.groups[i]];\n                var color = that.colors_map(i);\n                var groups = d3.select(d)\n                    .selectAll(\".rect_element\")\n                    .data(data)\n                    .select('rect')\n                    .style({'stroke': that.model.get('stroke'), 'fill': function(elem, j) {\n                        return (color_scale && elem.color !== undefined &&\n                               elem.color !== null) ?\n                            color_scale.scale(elem.color) :\n                            that.colors_map(i);}});\n            });\n        }\n    },\n\n    cell_click_handler: function(data, id, cell) {\n        if (this.model.get(\"enable_select\")) {\n            var selected = this.model.get(\"selected\").slice();\n            var index = selected.indexOf(data.name);\n\n            if (index == -1) { // not already selected, so add to selected\n                selected.push(data.name);\n            }\n            else { // already in selected list, so delete from selected\n                selected.splice(index, 1);\n            }\n            this.model.set(\"selected\", selected);\n            this.touch();\n        }\n    },\n\n    apply_selected: function() {\n        var selected = this.model.get(\"selected\");\n        var that = this;\n        if (selected === undefined || selected === null || selected.length === 0)\n            this.clear_selected();\n        else {\n            selected.forEach(function(data) {\n                var selected_cell = that.fig_map\n                    .selectAll(\".rect_element\")\n                    .filter(function(d, i) {return d.name === data;});\n\n                that.fig_click\n                    .append(\"rect\")\n                    .data(selected_cell.data())\n                    .attr(\"transform\", selected_cell.attr(\"transform\"))\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 0)\n                    .attr(\"width\", that.column_width)\n                    .attr(\"height\", that.row_height)\n                    .style({\"stroke\": that.selected_stroke,\n                            \"stroke-width\": \"3px\",\n                            \"fill\": \"none\"});\n                });\n        }\n    },\n\n    clear_selected: function() {\n        this.fig_click.selectAll(\"rect\").remove();\n    },\n\n    mouseover_handler: function(data, id, cell) {\n        var transform = d3.select(cell).attr(\"transform\");\n        if(this.model.get(\"enable_hover\")) {\n            this.fig_hover.append(\"rect\")\n                .attr(\"class\", \"hover_\" + id)\n                .attr(\"transform\", transform)\n                .attr(\"x\", 0)\n                .attr(\"y\", 0)\n                .attr(\"width\", this.column_width)\n                .attr(\"height\", this.row_height)\n                .style({'stroke': this.hovered_stroke, 'stroke-width': '3px', 'fill': 'none',\n                        'pointer-events': 'none'\n                    });\n            this.show_tooltip(d3.event, data);\n            this.send({event: \"hover\", data: data.name, ref_data: data.ref_data});\n        }\n    },\n\n    update_selected_stroke: function(model, value) {\n        this.selected_stroke = value;\n        this.fig_click.selectAll(\"rect\").style({\"stroke\": value});\n    },\n\n    update_hovered_stroke: function(model, value) {\n        this.hovered_stroke = value;\n        // I do not need to update anything else because when hovered color\n        // is being updated you are not hovering over anything.\n    },\n\n    mouseout_handler: function(data, id, cell) {\n        this.fig_hover.select(\".hover_\" + id)\n            .remove();\n        this.hide_tooltip();\n    },\n\n    show_tooltip: function(event, data) {\n        var mouse_pos = d3.mouse(this.el);\n        var that = this;\n        if(!this.tooltip_view && (!this.tooltip_fields || this.tooltip_fields.length == 0))\n        {\n            return;\n        } else {\n            var tooltip_div = this.tooltip_div;\n            tooltip_div.transition()\n                .style(\"opacity\", 0.9)\n                .style(\"display\", null);\n\n            this.move_tooltip();\n            tooltip_div.select(\"table\").remove();\n\n            var ref_data = data.ref_data;\n            if(!this.tooltip_view) {\n                var tooltip_table = tooltip_div.append(\"table\")\n                    .selectAll(\"tr\").data(this.tooltip_fields);\n\n                tooltip_table.exit().remove();\n                var table_rows = tooltip_table.enter().append(\"tr\");\n\n                table_rows.append(\"td\")\n                    .attr(\"class\", \"tooltiptext\")\n                    .text(function(datum) { return datum;});\n\n                table_rows.append(\"td\")\n                    .attr(\"class\", \"tooltiptext\")\n                    .text(function(datum, index) { return (ref_data === null || ref_data === undefined) ? null : that.tooltip_formats[index](ref_data[datum]);});\n            }\n            this.popper.enableEventListeners();\n            this.move_tooltip();\n        }\n    },\n\n    mousemove_handler: function(data) {\n        this.move_tooltip(data);\n    },\n\n    move_tooltip: function(data) {\n        this.popper_reference.x = d3.event.clientX;\n        this.popper_reference.y = d3.event.clientY;\n        this.popper.scheduleUpdate();\n    },\n\n    hide_tooltip: function() {\n         this.tooltip_div.style(\"pointer-events\", \"none\");\n         this.tooltip_div.transition()\n            .style(\"opacity\", 0)\n            .style(\"display\", \"none\");\n        this.popper.disableEventListeners();\n    },\n\n    create_tooltip_widget: function() {\n        var tooltip_model = this.model.get(\"tooltip_widget\");\n        if((this.tooltip_view !== null && this.tooltip_view !== undefined)) {\n            //remove the previous tooltip\n            this.tooltip_view.remove();\n            this.tooltip_view = null;\n        }\n        var that = this;\n        if(tooltip_model) {\n            var tooltip_widget_creation_promise = this.create_child_view(tooltip_model);\n            tooltip_widget_creation_promise.then(function(view) {\n                that.tooltip_view = view;\n                that.tooltip_div.node().appendChild(view.el);\n                view.trigger(\"displayed\", {\"add_to_dom_only\": true});\n            });\n        }\n    },\n\n    get_group_transform: function(index) {\n        return \"translate(\" + '0' + \", 0)\";\n    },\n\n    get_cell_transform: function(index) {\n        if(!this.past_border_y()){\n            if(this.past_border_x()) {\n                this.y_direction = -1 * this.y_direction;\n                this.prev_x += this.x_direction;\n            } else {\n                this.x_direction = -1 * this.x_direction;\n                this.prev_y += this.y_direction;\n                this.group_iter += 1;\n            }\n        } else {\n            this.prev_y += this.y_direction;\n        }\n        return \"translate(\" + (this.prev_x * this.column_width) + \", \" +\n                              (this.prev_y * this.row_height) + \")\";\n    },\n\n    get_new_cords: function() {\n        var new_x = this.prev_x;\n        var new_y = this.prev_y;\n        var y_direction = this.y_direction;\n        var x_direction = this.x_direction;\n        var group_iter = this.group_iter;\n        if(!this.past_border_y()){\n            if(this.past_border_x()) {\n                y_direction = -1 * this.y_direction;\n                new_x += this.x_direction;\n            } else {\n                x_direction = -1 * this.x_direction;\n                new_y += this.y_direction;\n                group_iter += 1;\n            }\n        } else {\n            new_y += this.y_direction;\n        }\n        return [new_x, new_y, group_iter, x_direction, y_direction, new_x * this.column_width, new_y * this.row_height];\n    },\n\n    past_border_y: function() {\n        if(this.y_direction == 1) {\n            return (this.prev_y + 1) < this.row_limits[this.group_iter];\n        } else {\n            return (this.prev_y - 1) > this.row_limits[this.group_iter -1] - 1;\n        }\n    },\n\n    past_border_x: function() {\n        if(this.x_direction == 1) {\n            return (this.prev_x + 1) < this.num_cols;\n        } else {\n            return (this.prev_x - 1) > -1;\n        }\n    },\n\n    colors_updated: function() {\n        this.colors = this.model.get(\"colors\");\n        this.recolor_chart();\n    },\n\n    get_color: function(index, length) {\n        return this.colors[index % length];\n    },\n\n    set_row_limits: function() {\n        var step = Math.floor(this.num_rows / this.row_groups);\n        this.row_limits = [];\n        for(var iter = this.row_groups - 1; iter > -1; iter--){\n            this.row_limits.unshift(iter * step);\n        }\n        this.row_limits[this.row_groups] = this.num_rows;\n    },\n\n    get_end_points: function(group_iter, num_cells, start_col, start_row, x_direction, y_direction) {\n        //start_row is the 0-based index and not a 1-based index, i.e., it\n        //is not the column number in the truest sense\n        // Function to get the end points of the rectangle representing the\n        // groups.\n        // Requires the direction variables to be updated before this\n        // function is called\n        var top_row = this.row_limits[group_iter - 1];\n        var bottom_row = this.row_limits[group_iter];\n        var across = false;\n\n        var init_x = x_direction;\n        var init_y = y_direction;\n        var end_points = [];\n        var current_row;\n\n        var rows_remaining = (init_y == 1) ? (bottom_row - start_row) : (start_row - top_row + 1);\n        var cols_remaining = (init_x == 1) ? (this.num_cols - 1 - start_col) : (start_col); // this is the num of columns remaining\n        //after the cuirrent column has been filled\n        var elem_remaining = num_cells;\n        //this holds the number of continuous cols that will be filled\n        //between the current top and bottom rows\n        var num_rows = bottom_row - top_row;\n\n        if(elem_remaining !== 0) {\n            // starting corener of the path\n            this.calc_end_point_source(start_col, start_row, init_x, init_y).forEach(function(d) { end_points.push(d); });\n            var elem_filled = Math.min(rows_remaining, elem_remaining);\n\n            if(elem_filled === elem_remaining) {\n                // There are enough elements only to fill one column\n                // partially. We add the three end points and exit\n                // The adjacent corner from the starting corner. This is\n                // required because the elements are filled in the first\n                // row itself.\n                this.calc_end_point_source(start_col, start_row, (-1) * init_x, init_y).forEach(function(d) { end_points.push(d); });\n\n                current_row = start_row + (elem_remaining - 1) * init_y;\n                this.calc_end_point_dest(start_col, current_row, (-1) * init_x, init_y).forEach(function(e) { end_points.push(e); });\n                this.calc_end_point_dest(start_col, current_row, init_x, init_y).forEach(function(e) { end_points.push(e); });\n\n                /*\n                console.log(\"new set\");\n                end_points.forEach(function(point) { console.log(point); });\n                console.log(\"end set\");\n               */\n\n                return end_points;\n            }\n            elem_remaining = elem_remaining - elem_filled;\n            if(cols_remaining === 0) {\n                // Since this is the last column, the adjacent corner from\n                // the starting corner is added here too\n                this.calc_end_point_source(start_col, start_row, init_x * (-1), init_y).forEach(function(d) { end_points.push(d); });\n            }\n            else if(rows_remaining !== (bottom_row - top_row)) {\n                // If the starting row is not the starting row of a group,\n                // the poirnt adjacent to the starting point needs to be\n                // added.\n                this.calc_end_point_source(start_col, start_row, init_x * (-1), init_y).forEach(function(d) { end_points.push(d); });\n\n                if(elem_remaining > num_rows) {\n                    // If next row is completely filled, then the top row\n                    // element of the next column is an end point. That is\n                    // being added here.\n                    this.calc_end_point_dest(start_col + init_x, (init_y == 1) ? top_row :\n                                         bottom_row - 1, init_x * (-1), init_y * (-1)).forEach(function(d) { end_points.push(d); });\n                }\n            }\n            else if(elem_remaining < num_rows) {\n                // one continuous row in this case\n                this.calc_end_point_source(start_col, start_row, (-1) * init_x, init_y).forEach(function(d) { end_points.push(d); });\n            }\n            start_row = start_row + (init_y * (elem_filled - 1));\n            //first set of end points are added here\n            this.calc_end_point_dest(start_col, start_row, (-1) * init_x, init_y).forEach(function(d) { end_points.push(d); });\n            if(elem_remaining === 0) {\n                this.calc_end_point_dest(start_col, start_row, init_x, init_y).forEach(function(d) { end_points.push(d); });\n\n                /*\n                console.log(\"new set\");\n                end_points.forEach(function(point) { console.log(point); });\n                console.log(\"end set\");\n               */\n\n                return end_points;\n            }\n            if(cols_remaining !== 0 && elem_remaining > num_rows)\n                start_col = start_col + init_x;\n        }\n\n        while(elem_remaining > num_rows) {\n            var no_cont_cols;\n            if(num_rows * cols_remaining < elem_remaining) {\n                no_cont_cols = cols_remaining;\n                var leftover_elem = elem_remaining - (no_cont_cols) * num_rows;\n                no_cont_cols += Math.floor(leftover_elem / (this.row_limits[group_iter + 1] - this.row_limits[group_iter]));\n            } else {\n                no_cont_cols = Math.floor(elem_remaining / num_rows);\n            }\n\n            if(no_cont_cols > cols_remaining){\n                start_col = (init_x === 1) ? this.num_cols - 1 : 0;\n                if(cols_remaining !== 0) {\n                    this.calc_end_point_dest(start_col, top_row, init_x, -1)\n                        .forEach(function(d) { end_points.push(d); });\n                }\n                no_cont_cols = cols_remaining;\n                cols_remaining = this.num_cols;\n                group_iter += 1;\n                top_row = bottom_row;\n                bottom_row = this.row_limits[group_iter];\n                start_row = top_row;\n                init_x = -1 * init_x;\n                init_y = Math.pow(-1, no_cont_cols) * init_y * (-1);\n                this.calc_end_point_dest(start_col, bottom_row - 1, (-1) * init_x, 1)\n                    .forEach(function(d) { end_points.push(d); });\n            } else if (no_cont_cols === cols_remaining) {\n                start_col = (init_x === 1) ? this.num_cols - 1 : 0;\n                if(cols_remaining !== 0) {\n                    this.calc_end_point_dest(start_col, top_row, init_x, -1)\n                        .forEach(function(d) { end_points.push(d); });\n                }\n                no_cont_cols = cols_remaining;\n                cols_remaining = this.num_cols;\n                group_iter += 1;\n                if(group_iter < this.row_limits.length) {\n                    top_row = bottom_row;\n                    bottom_row = this.row_limits[group_iter];\n                    start_row = top_row;\n                    init_x = -1 * init_x;\n                    init_y = Math.pow(-1, no_cont_cols) * init_y * (-1);\n                    across = true;\n                }\n                else {\n                    init_y = 1;\n                    init_x = 1;\n                }\n            } else {\n                // The number of elements are such that the row group is\n                // not exhausted.\n                init_y = Math.pow(-1, (no_cont_cols)) * init_y;\n                //As I am moving down this time, next time I will move up\n                //and I might not reach the top row, it might be an end\n                //point.\n                start_row = (init_y === 1) ? top_row : bottom_row - 1;\n                start_col = start_col + (init_x) * (no_cont_cols - 1);\n                this.calc_end_point_source(start_col, start_row, (-1) * init_x, init_y).forEach(function(d) { end_points.push(d); });\n            }\n            elem_remaining -= (no_cont_cols * (num_rows));\n            num_rows = bottom_row - top_row;\n            //reset direction\n            //this is an end point\n        }\n        //all elements are exhausted\n        if(elem_remaining === 0) {\n            // The column is exactly filled. In this case, the only end\n            // point I need to add is the outer edge w.r.t. the direction\n            // in which we are travelling\n            start_row = (init_y === 1) ? bottom_row - 1 : top_row;\n            init_x = (across) ? ((-1) * init_x) : init_x;\n            this.calc_end_point_dest(start_col, start_row, init_x, init_y).forEach(function(d) { end_points.push(d); });\n        }\n        else {\n            // The previous column was exactly filled and the last column\n            // is partially filled\n            init_y = -1 * init_y; // Since we are in the next column, the direction of y has to be reversed\n            start_row = (init_y === 1) ? top_row : bottom_row - 1;\n            start_col = (across) ? start_col : (start_col + (init_x));\n\n            // this is the outer edge of the start of the last column w.r.t\n            // the current direction of travel.\n            this.calc_end_point_source(start_col, start_row, init_x * (-1), init_y).forEach(function(d) { end_points.push(d); });\n\n            // The points corresponding to the cell at which we stop.\n            current_row = start_row + (elem_remaining - 1) * init_y;  // this is the row in which we end\n            // Two points need to be added. The boundary of the last cell\n            // in the y-direction.\n            this.calc_end_point_dest(start_col, current_row, init_x, init_y).forEach(function(d) { end_points.push(d); });\n            this.calc_end_point_dest(start_col, current_row, (-1) * init_x, init_y).forEach(function(d) { end_points.push(d); });\n        }\n\n        /*\n        console.log(\"new set\");\n        end_points.forEach(function(point) { console.log(point); });\n        console.log(\"end set\");\n       */\n\n        return end_points;\n    },\n\n    create_bounding_path: function(elem, end_points) {\n        var start_x = end_points[0].x;\n        var start_y = end_points[0].y;\n        var values = [];\n        var editing_copy = end_points.slice();\n        values.push(end_points[0]);\n        editing_copy.splice(0, 1);\n        //do union based on which direction you are trying to move in and\n        //draw the path\n        //best way seems to be horizaontal followed by vertical\n        var props = ['x', 'y'];\n        var iter = 0;\n        var prop = props[iter % 2];\n        var other_prop = props[(iter + 1) % 2];\n        var curr_elem = values[0];\n        var match = curr_elem[prop];\n        var dim = curr_elem[other_prop];\n        var max_iter = 2 * editing_copy.length;\n        var final_val = 0;\n        while(editing_copy.length > 1 && max_iter > 0){\n            var filtered_array = editing_copy.filter(function(elem) { return elem[prop] == match; });\n            if(filtered_array.length > 0) {\n                iter++;\n                var min_elem = d3.min(filtered_array, function(elem) { return elem[other_prop]; });\n                var max_elem = d3.max(filtered_array, function(elem) { return elem[other_prop]; });\n                if(min_elem < dim && max_elem > dim) {\n                    if(prop == 'y') {\n                        if(this.x_direction == 1) {\n                            final_val = max_elem;\n                        }\n                        else {\n                            final_val = min_elem;\n                        }\n                    } else {\n                        // There are elements greater than and lesser than\n                        // reference value. I am trying to see if there are\n                        // multiple elements greater or lesser. If there is\n                        // only one in one of the directions, that is the\n                        // direction I draw the line in.\n                        var lesser_arr = filtered_array.filter(function(elem) { return elem[other_prop] < dim; });\n                        var greater_arr = filtered_array.filter(function(elem) { return elem[other_prop] > dim; });\n\n                        if(lesser_arr.length == 1) {\n                            final_val = min_elem;\n                        } else if(greater_arr.length == 1) {\n                            final_val = max_elem;\n                        } else {\n                            final_val = d3.max(lesser_arr, function(elem) {return elem[other_prop]; });\n                        }\n                    }\n                } else {\n                    if(min_elem > dim) {\n                        final_val = min_elem;\n                    } else {\n                        final_val = max_elem;\n                    }\n                }\n                var match_elem = editing_copy.filter(function(elem) { return elem[prop] == match && elem[other_prop] == final_val;});\n                match_elem.forEach(function(elem) { editing_copy.splice(editing_copy.indexOf(elem), 1);} );\n                var value = {};\n                value[prop] = match;\n                value[other_prop] = final_val;\n                values.push(value);\n            }\n            else {\n                final_val = dim;\n            }\n            //swap prop and other_prop\n            var temp = prop;\n            prop = other_prop;\n            other_prop = temp;\n\n            dim = match;\n            match = final_val;\n            max_iter--;\n        }\n        if(editing_copy.length > 0)\n            values.push(editing_copy[0]);\n        values.push(end_points[0]);\n        var line = d3.svg.line()\n            .interpolate('linear')\n            .x(function(d) { return d.x;})\n            .y(function(d) { return d.y;});\n        var bounding_path = d3.select(elem)\n            .append('path')\n            .attr(\"class\", \"bounding_path\")\n            .attr('d', function() {return line(values);})\n            .attr('fill', 'none')\n            .style('stroke', this.model.get('group_stroke'))\n            .style('stroke-width', 3);\n        return bounding_path;\n    },\n\n    calc_end_point_source: function(curr_x, curr_y, x_direction, y_direction) {\n        curr_y = (y_direction == 1) ? curr_y : curr_y + 1;\n        curr_x = (x_direction == 1) ? curr_x : curr_x + 1;\n        return[{'x': curr_x * this.column_width, 'y': curr_y * this.row_height}];\n    },\n\n    calc_end_point_dest: function(curr_x, curr_y, x_direction, y_direction) {\n        curr_y = (y_direction == -1) ? curr_y : curr_y + 1;\n        curr_x = (x_direction == -1) ? curr_x : curr_x + 1;\n        return[{'x': curr_x * this.column_width, 'y': curr_y * this.row_height}];\n    },\n});\n\nmodule.exports = {\n    MarketMap: MarketMap,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\nvar mark = require(\"./Mark\");\n\nvar GridHeatMap = mark.Mark.extend({\n\n    render: function() {\n        var base_render_promise = GridHeatMap.__super__.render.apply(this);\n        var that = this;\n\n        // TODO: create_listeners is put inside the promise success handler\n        // because some of the functions depend on child scales being\n        // created. Make sure none of the event handler functions make that\n        // assumption.\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        this.selected_indices = this.model.get(\"selected\");\n        this.selected_style = this.model.get(\"selected_style\");\n        this.unselected_style = this.model.get(\"unselected_style\");\n        this.anchor_style = this.model.get(\"anchor_style\");\n        this.display_el_classes = [\"heatmapcell\"];\n        return base_render_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        });\n    },\n\n    initialize_additional_scales: function() {\n        var color_scale = this.scales.color;\n        if(color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                this.apply_styles();\n            });\n            color_scale.on(\"color_scale_range_changed\", this.apply_styles, this);\n        }\n    },\n\n    set_ranges: function() {\n        var row_scale = this.scales.row;\n        if(row_scale) {\n            // The y_range is reversed because we want the first row\n            // to start at the top of the plotarea and not the bottom.\n            var row_range = this.parent.padded_range(\"y\", row_scale.model);\n            row_scale.set_range(row_range);\n            // row_scale.set_range([row_range[1], row_range[0]]);\n        }\n        var col_scale = this.scales.column;\n        if(col_scale) {\n            col_scale.set_range(this.parent.padded_range(\"x\", col_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.column, y_scale = this.scales.row;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    expand_scale_domain: function(scale, data, mode, start) {\n        // This function expands the domain so that the heatmap has the\n        // minimum area needed to draw itself.\n        var current_pixels, min_diff;\n        if(mode === \"expand_one\") {\n            current_pixels = data.map(function(el) {\n                return scale.scale(el);\n            });\n            var diffs = current_pixels.slice(1).map(function(el, index) {\n                return el - current_pixels[index];\n            });\n            //TODO: Explain what is going on here.\n            min_diff = 0;\n            if(diffs[0] < 0) {\n                start = !(start);\n                // diffs are negative. So max instead of min\n                min_diff = d3.max(diffs);\n            } else {\n                min_diff = d3.min(diffs);\n            }\n            var new_pixel = 0;\n            if(start) {\n                new_pixel = current_pixels[current_pixels.length - 1] + min_diff;\n                return [data[0], scale.invert(new_pixel)];\n            } else {\n                new_pixel = current_pixels[0] - min_diff;\n                return [scale.invert(new_pixel), data[current_pixels.length - 1]];\n            }\n        } else if(mode === \"expand_two\") {\n            current_pixels = data.map(function(el) {\n                return scale.scale(el);\n            });\n            min_diff = d3.min(current_pixels.slice(1).map(function(el, index) {\n                return el - current_pixels[index];\n            }));\n            var new_end = current_pixels[current_pixels.length - 1] + min_diff;\n            var new_start = current_pixels[0] - min_diff;\n            return [scale.invert(new_start), scale.invert(new_end)];\n        }\n    },\n\n    create_listeners: function() {\n        GridHeatMap.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:stroke\", this.update_stroke, this);\n        this.listenTo(this.model, \"change:opacity\", this.update_opacity, this);\n\n        this.d3el.on(\"mouseover\", _.bind(function() { this.event_dispatcher(\"mouse_over\"); }, this))\n            .on(\"mousemove\", _.bind(function() { this.event_dispatcher(\"mouse_move\"); }, this))\n            .on(\"mouseout\", _.bind(function() { this.event_dispatcher(\"mouse_out\"); }, this));\n        this.listenTo(this.model, \"data_updated\", this.draw, this);\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n        this.model.on_some_change([\"display_format\", \"font_style\"],\n                                  this.update_labels, this);\n        this.listenTo(this.model, \"change:selected\", this.update_selected);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n    },\n\n    click_handler: function (args) {\n        var data = args.data;\n        var num_cols = this.model.colors[0].length;\n        var index = args.row_num * num_cols + args.column_num;\n        var row = args.row_num;\n        var column = args.column_num;\n        var that = this;\n        var idx = this.model.get(\"selected\") ? utils.deepCopy(this.model.get(\"selected\")) : [];\n        var selected = utils.deepCopy(this._cell_nums_from_indices(idx));\n        var elem_index = selected.indexOf(index);\n        var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n        //TODO: This is a shim for when accelKey is supported by chrome.\n        // index of slice i. Checking if it is already present in the\n        // list\n        if(elem_index > -1 && accelKey) {\n        // if the index is already selected and if ctrl key is\n        // pressed, remove the element from the list\n            idx.splice(elem_index, 1);\n        } else {\n            if(!accelKey) {\n                selected = [];\n                idx = [];\n            }\n            idx.push([row, column]);\n            selected.push(that._cell_nums_from_indices([[row, column]])[0]);\n            if(d3.event.shiftKey) {\n                //If shift is pressed and the element is already\n                //selected, do not do anything\n                if(elem_index > -1) {\n                    return;\n                }\n                //Add elements before or after the index of the current\n                //slice which has been clicked\n                var row_index = (selected.length !== 0) ?\n                    that.anchor_cell_index[0] : row;\n                var col_index = (selected.length !== 0) ?\n                    that.anchor_cell_index[1] : column;\n                _.range(Math.min(row, row_index), Math.max(row, row_index)+1).forEach(function(i) {\n                    _.range(Math.min(column, col_index), Math.max(column, col_index)+1).forEach(function(j) {\n                        var cell_num = that._cell_nums_from_indices([[i, j]])[0];\n                        if (selected.indexOf(cell_num) === -1) {\n                            selected.push(cell_num);\n                            idx.push([i, j]);\n                        }\n                    })\n                });\n            } else {\n                // updating the array containing the slice indexes selected\n                // and updating the style\n                this.anchor_cell_index = [row, column];\n            }\n        }\n        this.model.set(\"selected\",\n            ((idx.length === 0) ? null : idx),\n            {updated_view: this});\n        this.touch();\n        if(!d3.event) {\n            d3.event = window.event;\n        }\n        var e = d3.event;\n        if(e.cancelBubble !== undefined) { // IE\n            e.cancelBubble = true;\n        }\n        if(e.stopPropagation) {\n            e.stopPropagation();\n        }\n        e.preventDefault();\n        this.selected_indices = idx;\n        this.apply_styles();\n\n    },\n\n    update_selected: function(model, value) {\n        this.selected_indices = value;\n        this.apply_styles();\n    },\n\n    set_style_on_elements: function(style, indices, elements) {\n        // If the index array is undefined or of length=0, exit the\n        // function without doing anything\n        if(!indices || indices.length === 0 && (!elements || elements.length === 0) ) {\n            return;\n        }\n        // Also, return if the style object itself is blank\n        if(Object.keys(style).length === 0) {\n            return;\n        }\n        elements = (!elements || elements.length === 0) ? this._filter_cells_by_index(indices) : elements;\n        elements.style(style);\n    },\n\n    set_default_style: function(indices, elements) {\n        // For all the elements with index in the list indices, the default\n        // style is applied.\n        //\n\n        if(!indices || indices.length === 0 && (!elements || elements.length === 0) ) {\n            return;\n        }\n        elements = (!elements || elements.length === 0) ? this._filter_cells_by_index(indices) : elements;\n        var stroke = this.model.get(\"stroke\");\n        var opacity = this.model.get(\"opacity\");\n        var that = this;\n\n        elements.style(\"fill\", function(d) {\n             return that.get_element_fill(d);\n          })\n          .style(\"opacity\", opacity)\n          .style(\"stroke\", stroke);\n    },\n\n    clear_style: function(style_dict, indices, elements) {\n        // Function to clear the style of a dict on some or all the elements of the\n        // chart.If indices is null, clears the style on all elements. If\n        // not, clears on only the elements whose indices are mathcing.\n        //\n        // If elements are passed, then indices are ignored and the style\n        // is cleared only on the elements that are passed.\n        //\n        // This can be used if we decide to accommodate more properties than\n        // those set by default. Because those have to cleared specifically.\n        //\n        if(Object.keys(style_dict).length === 0) {\n            // No style to clear\n            return;\n        }\n\n        if(!elements || elements.length === 0) {\n            if(indices) {\n                elements = this._filter_cells_by_index(indices);\n            } else {\n                elements = this.display_cells;\n            }\n        }\n\n        var clearing_style = {};\n        for(var key in style_dict) {\n            clearing_style[key] = null;\n        }\n        elements.style(clearing_style);\n    },\n\n    _filter_cells_by_cell_num: function(cell_numbers) {\n        if (cell_numbers === null || cell_numbers === undefined) {\n            return [];\n        }\n        return this.display_cells.filter(function(el) {\n           return (cell_numbers.indexOf(el._cell_num) !== -1);});\n    },\n\n    selected_style_updated: function(model, style) {\n        this.selected_style = style;\n        this.clear_style(model.previous(\"selected_style\"), this.selected_indices, this.selected_elements);\n        this.style_updated(style, this.selected_indices, this.selected_elements);\n    },\n\n    unselected_style_updated: function(model, style) {\n        this.unselected_style = style;\n        this.clear_style(model.previous(\"unselected_style\"), [], this.unselected_elements);\n        this.style_updated(style, [], this.unselected_elements);\n    },\n\n    apply_styles: function() {\n        var num_rows = this.model.colors.length;\n        var num_cols = this.model.colors[0].length;\n\n        this.clear_style(this.selected_style);\n        this.clear_style(this.unselected_style);\n        this.clear_style(this.anchor_style);\n\n        this.set_default_style([], this.display_cells);\n        var that = this;\n\n        var selected_cell_nums = this._cell_nums_from_indices(this.selected_indices);\n        var unsel_cell_nums = (selected_cell_nums === null || selected_cell_nums.length === 0) ? []\n                                : _.difference(_.range(num_rows*num_cols), selected_cell_nums);\n\n        this.selected_elements = this._filter_cells_by_cell_num(selected_cell_nums);\n        this.set_style_on_elements(this.selected_style, this.selected_indices, this.selected_elements);\n\n        this.unselected_elements = this._filter_cells_by_cell_num(unsel_cell_nums);\n        this.set_style_on_elements(this.unselected_style, [], this.unselected_elements);\n\n        if(this.anchor_cell_index !== null && this.anchor_cell_index !== undefined) {\n            var anchor_num = this._cell_nums_from_indices([this.anchor_cell_index]);\n            this.anchor_element = this._filter_cells_by_cell_num(anchor_num);\n            this.set_style_on_elements(this.anchor_style, [], this.anchor_element);\n        }\n    },\n\n    style_updated: function(new_style, indices, elements) {\n        // reset the style of the elements and apply the new style\n        this.set_default_style(indices, elements);\n        this.set_style_on_elements(new_style, indices, elements);\n    },\n\n    reset_selection: function() {\n        this.model.set(\"selected\", null);\n        this.touch();\n        this.selected_indices = null;\n        this.clear_style(this.selected_style);\n        this.clear_style(this.unselected_style);\n        this.clear_style(this.anchor_style);\n\n        this.set_default_style([], this.display_cells);\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.compute_view_padding();\n        //TODO: The call to draw has to be changed to something less\n        //expensive.\n        this.draw();\n    },\n\n    _cell_nums_from_indices: function(indices) {\n        if(indices === null || indices === undefined) {\n            return null;\n        }\n        var num_cols = this.model.colors[0].length;\n        return indices.map(function(i) { return i[0] * num_cols + i[1];});\n    },\n\n    invert_point: function(pixel) {\n        // For now, an index selector is not supported for the heatmap\n    },\n\n    selector_changed: function(point_selector, rect_selector) {\n        if(point_selector === undefined) {\n            this.model.set(\"selected\", null);\n            this.touch();\n            return [];\n        }\n        var col_indices = _.range(this.model.colors[0].length);\n        var row_indices = _.range(this.model.colors.length);\n        var that = this;\n        var sel_cols = _.filter(col_indices, function(index) {\n            return rect_selector([that.column_pixels[index], []]);\n        });\n        var sel_rows = _.filter(row_indices, function(index) {\n            return rect_selector([[], that.row_pixels[index]]);\n        });\n        var selected = sel_cols.map(function(s) {\n            return sel_rows.map(function(r) {\n                return [r, s];\n            });\n        });\n        selected = _.flatten(selected, true);\n        this.model.set(\"selected\", selected);\n        this.touch();\n    },\n\n    draw: function() {\n        this.set_ranges();\n\n        var that = this;\n        var num_rows = this.model.colors.length;\n        var num_cols = this.model.colors[0].length;\n\n        var row_scale = this.scales.row;\n        var column_scale = this.scales.column;\n\n        var row_start_aligned = this.model.get(\"row_align\") === \"start\";\n        var col_start_aligned = this.model.get(\"column_align\") === \"start\";\n        var new_domain;\n\n        if(this.model.modes.row !== \"middle\" && this.model.modes.row !== \"boundaries\") {\n            new_domain = this.expand_scale_domain(row_scale, this.model.rows, this.model.modes.row, (row_start_aligned));\n            if(d3.min(new_domain) < d3.min(row_scale.model.domain) || d3.max(new_domain) > d3.max(row_scale.model.domain)) {\n                // Update domain if domain has changed\n                row_scale.model.compute_and_set_domain(new_domain, row_scale.model.model_id);\n            }\n        }\n\n        if(this.model.modes.column !== \"middle\" && this.model.modes.column !== \"boundaries\") {\n            new_domain = this.expand_scale_domain(column_scale, this.model.columns, this.model.modes.column, col_start_aligned);\n            if(d3.min(new_domain) < d3.min(column_scale.model.domain) || d3.max(new_domain) > d3.max(column_scale.model.domain)) {\n                // Update domain if domain has changed\n                column_scale.model.compute_and_set_domain(new_domain, column_scale.model.model_id);\n            }\n        }\n\n        var row_plot_data = this.get_tile_plotting_data(row_scale, this.model.rows, this.model.modes.row, row_start_aligned);\n        var column_plot_data = this.get_tile_plotting_data(column_scale, this.model.columns, this.model.modes.column, col_start_aligned);\n\n        this.row_pixels = row_plot_data.start.map(function(d, i) {\n            return [d, d + row_plot_data.widths[i]];\n        })\n        this.column_pixels = column_plot_data.start.map(function(d, i) {\n            return [d, d + column_plot_data.widths[i]];\n        })\n\n        this.display_rows = this.d3el.selectAll(\".heatmaprow\")\n            .data(_.range(num_rows));\n        this.display_rows.enter().append(\"g\")\n            .attr(\"class\", \"heatmaprow\");\n        this.display_rows\n            .attr(\"transform\", function(d) {\n                return \"translate(0, \" + row_plot_data.start[d] + \")\";\n            });\n\n        var col_nums = _.range(num_cols);\n        var row_nums = _.range(num_rows);\n\n        var data_array = row_nums.map(function(row) {\n            return col_nums.map(function(col) {\n                return that.model.mark_data[row * num_cols + col];\n            });\n        });\n\n        this.display_cell_groups = this.display_rows.selectAll(\".heatmapcell\").data(function(d, i) {\n            return data_array[i];\n        })\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"heatmapcell\")\n        .attr(\"transform\", function(d, i) {\n            return \"translate(\" + column_plot_data.start[i] + \", 0)\";\n        });\n\n        this.display_cells = this.display_cell_groups\n            .append(\"rect\")\n            .attr(\"class\", \"cell_rect\")\n            .on(\"click\", _.bind(function() {\n                this.event_dispatcher(\"element_clicked\");\n            }, this));\n\n        this.display_cell_groups\n            .append(\"text\")\n            .attr(\"class\", \"cell_text\")\n            .style({\"text-anchor\": \"middle\",\n                    \"fill\" : \"black\",\n                    \"pointer-events\": \"none\",\n                    \"dominant-baseline\": \"central\"});\n\n        this.display_cell_groups\n            .selectAll(\".cell_rect\")\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", function(d, i) { return column_plot_data.widths[i]; })\n            .attr(\"height\",function(d) { return row_plot_data.widths[d.row_num]; })\n\n        this.display_cell_groups\n            .selectAll(\".cell_text\")\n            .attr(\"x\", function(d, i) { return column_plot_data.widths[i] / 2; })\n            .attr(\"y\", function(d) { return row_plot_data.widths[d.row_num] / 2; });\n\n        this.apply_styles();\n        this.update_labels();\n\n        this.display_cells.on(\"click\", function(d, i) {\n            return that.event_dispatcher(\"element_clicked\", {\n                data: d.color,\n                index: i,\n                row_num: d.row_num,\n                column_num: d.column_num\n            });\n        });\n    },\n\n    update_stroke: function(model, value) {\n        this.display_cells.style(\"stroke\", value);\n    },\n\n    update_opacity: function(model, value) {\n        this.display_cells.style(\"opacity\", value);\n    },\n\n    update_labels: function() {\n        var display_format_str = this.model.get(\"display_format\");\n        var display_format = d3.format(display_format_str);\n\n        d3.selectAll(\".cell_text\")\n            .text(function(d, i) { return display_format_str ? display_format(d.color) : null; })\n            .style(this.model.get(\"font_style\"));\n    },\n\n    get_tile_plotting_data: function(scale, data, mode, start) {\n        // This function returns the starting points and widths of the\n        // cells based on the parameters passed.\n        //\n        // scale is the scale and data is the data for which the plot data\n        // is to be generated. mode refers to the expansion of the data to\n        // generate the plotting data and start is a boolean indicating the\n        // alignment of the data w.r.t the cells.\n        var reversed_scale = false;\n        var start_points = [];\n        var widths = [];\n        if(mode === \"middle\") {\n            start_points = data.map(function(d) { return scale.scale(d); });\n            widths = data.map(function(d) { return scale.scale.rangeBand(); });\n\n            return {\"start\": start_points, \"widths\": widths};\n        }\n        if(mode === \"boundaries\") {\n            var pixel_points = data.map(function(d) {\n                return scale.scale(d);\n            });\n            widths = [];\n            for (var i=1; i<pixel_points.length; ++i) {\n                widths[i - 1] = Math.abs(pixel_points[i] - pixel_points[i - 1]);\n            }\n            start_points = pixel_points[1] > pixel_points[0] ?\n                pixel_points.slice(0, -1) : pixel_points.slice(1);\n            return {\n                \"start\": start_points,\n                \"widths\": widths\n            };\n        }\n        if(mode === \"expand_one\") {\n            var bounds;\n            if(start) {\n                // Start points remain the same as the data.\n                start_points = data.map(function(d) {\n                    return scale.scale(d);\n                });\n                widths = start_points.slice(1).map(function(d, ind) {\n                    // Absolute value is required as the order of the data\n                    // can be increasing or decreasing in terms of pixels\n                    return Math.abs(d - start_points[ind]);\n                });\n                // Now we have n-1 widths. We have to add the last or the\n                // first width depending on scale is increasing or\n                // decreasing.\n                bounds = d3.max(scale.scale.range());\n                if(start_points[0] < start_points[1]) {\n                    widths = Array.prototype.concat(widths, [Math.abs(bounds - d3.max(start_points))]);\n                } else {\n                    widths = Array.prototype.concat([Math.abs(bounds - d3.max(start_points))], widths);\n                }\n            } else {\n                start_points = data.map(function(d) {\n                    return scale.scale(d);\n                });\n                widths = start_points.slice(1).map(function(d, ind) {\n                    // Absolute value is required as the order of the data\n                    // can be increasing or decreasing in terms of pixels\n                    return Math.abs(d - start_points[ind]);\n                });\n                bounds = d3.min(scale.scale.range());\n                bounds = d3.min(scale.scale.range());\n                if(start_points[1] > start_points[0]) {\n                    // The point corresponding to the bounds is added at\n                    // the start of the array. Hence it has to be added to\n                    // the start_points and the last start_point can be\n                    // removed.\n                    start_points.splice(0, 0, Math.abs(0, 0, bounds));\n                    widths.splice(0, 0, start_points[1] - start_points[0]);\n                    start_points.splice(-1, 1);\n                } else {\n                    // The point for the bounds is added to the end of the\n                    // array. The first start point can now be removed as\n                    // this will be the last end point.\n                    widths = Array.prototype.concat(widths, [Math.abs(bounds - start_points.slice(-1)[0])]);\n                    start_points = Array.prototype.concat(start_points, bounds);\n                    start_points.splice(0, 1);\n                }\n            }\n            return {\n                \"widths\": widths,\n                \"start\": start_points\n            };\n        }\n        if(mode === \"expand_two\") {\n            start_points = data.map(function(d) {\n                return scale.scale(d);\n            });\n\n            var is_positive = (start_points[1] - start_points[0]) > 0;\n            var bound = (is_positive) ? d3.min(scale.scale.range()) : d3.max(scale.scale.range());\n            start_points.splice(0, 0, bound);\n            widths = start_points.slice(1).map(function(d, ind) {\n                return Math.abs(d - start_points[ind]);\n            });\n            bound = (is_positive) ? d3.max(scale.scale.range()) : d3.min(scale.scale.range());\n            widths[widths.length] = Math.abs(bound - start_points.slice(-1)[0]);\n            return {\"start\": start_points, \"widths\": widths};\n        }\n    },\n\n    get_element_fill: function(dat) {\n        if (dat.color === null) {\n            return this.model.get(\"null_color\")\n        }\n        return this.scales.color.scale(dat.color);\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        } else {\n            if(interactions.click !== undefined &&\n              interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click == 'select') {\n                    this.event_listeners.parent_clicked = this.reset_selection;\n                    this.event_listeners.element_clicked = this.click_handler;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n        }\n    },\n});\n\nmodule.exports = {\n    GridHeatMap: GridHeatMap,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar d3 = require(\"d3\");\nvar basemodel = require(\"./BaseModel\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar MarketMapModel = basemodel.BaseModel.extend({\n\n    defaults: function() {\n        return _.extend(basemodel.BaseModel.prototype.defaults(), {\n            _model_name: \"MarketMapModel\",\n            _view_name: \"MarketMap\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n            map_width: 1080,\n            map_height: 800,\n\n            names: [],\n            groups: [],\n            display_text: [],\n            ref_data: undefined,\n            title: \"\",\n\n            tooltip_fields: [],\n            tooltip_formats: [],\n            show_groups: false,\n\n            cols: 0,\n            rows: 0,\n\n            row_groups: 1,\n            colors: d3.scale.category20().range(),\n            scales: {},\n            axes: [],\n            color: [],\n            map_margin: {\n                top: 50,\n                right: 50,\n                left: 50,\n                bottom: 50\n            },\n            preserve_aspect: false,\n            stroke: \"white\",\n            group_stroke: \"black\",\n            selected_stroke: \"dodgerblue\",\n            hovered_stroke: \"orangered\",\n            font_style: {},\n            title_style: {},\n\n            selected: [],\n            enable_hover: true,\n            enable_select: true,\n            tooltip_widget: null\n        });\n    }\n}, {\n    serializers: _.extend({\n        scales: { deserialize: widgets.unpack_models },\n        axes: { deserialize: widgets.unpack_models },\n        tooltip_widget: { deserialize: widgets.unpack_models },\n        style: { deserialize: widgets.unpack_models },\n        layout:  { deserialize: widgets.unpack_models }\n    }, basemodel.BaseModel.serializers)\n});\n\nmodule.exports = {\n    MarketMapModel: MarketMapModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\nvar mark = require(\"./Mark\");\n\nvar HeatMap = mark.Mark.extend({\n\n    render: function() {\n        var base_render_promise = HeatMap.__super__.render.apply(this);\n        var that = this;\n\n        // TODO: create_listeners is put inside the promise success handler\n        // because some of the functions depend on child scales being\n        // created. Make sure none of the event handler functions make that\n        // assumption.\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        this.image = d3.select(this.el)\n            .append(\"image\")\n            .classed(\"heatmap\", true)\n            .attr(\"width\", this.parent.width)\n            .attr(\"height\", this.parent.height);\n\n        this.canvas = document.createElement(\"canvas\");\n\n        return base_render_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        });\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x;\n        if(x_scale) {\n            var x_range = this.parent.padded_range(\"x\", x_scale.model);\n            x_scale.set_range(x_range);\n        }\n        var y_scale = this.scales.y;\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.x, y_scale = this.scales.y;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) { this.draw(); }\n        });\n    },\n\n    initialize_additional_scales: function() {\n        var color_scale = this.scales.color;\n        if(color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                this.draw();\n            });\n            color_scale.on(\"color_scale_range_changed\", this.draw, this);\n        }\n    },\n\n    create_listeners: function() {\n        HeatMap.__super__.create_listeners.apply(this);\n\n        this.d3el.on(\"mouseover\", _.bind(function() { this.event_dispatcher(\"mouse_over\"); }, this))\n            .on(\"mousemove\", _.bind(function() { this.event_dispatcher(\"mouse_move\"); }, this))\n            .on(\"mouseout\", _.bind(function() { this.event_dispatcher(\"mouse_out\"); }, this));\n        this.listenTo(this.model, \"data_updated\", this.draw, this);\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n    },\n\n    click_handler: function (args) {},\n\n    process_interactions: function (args) {},\n\n    relayout: function() {\n        this.set_ranges();\n        this.compute_view_padding();\n        this.draw();\n    },\n\n    draw_canvas: function() {\n        this.image.attr(\"href\", this.canvas.toDataURL(\"image/png\"));\n    },\n\n    draw: function() {\n        this.set_ranges();\n        var that = this;\n\n        var x_plot_data = this.get_x_plotting_data(this.model.mark_data.x);\n        var y_plot_data = this.get_y_plotting_data(this.model.mark_data.y);\n\n        this.canvas.setAttribute(\"width\", x_plot_data.total_width);\n        this.canvas.setAttribute(\"height\", y_plot_data.total_height);\n\n        var ctx = this.canvas.getContext(\"2d\");\n        var colors = this.model.mark_data.color;\n        colors.forEach(function(row, i) {\n            var height = y_plot_data.heights[i];\n            var y = y_plot_data.start[i];\n            row.forEach(function(d, j) {\n                var width = x_plot_data.widths[j];\n                var x = x_plot_data.start[j];\n                ctx.fillStyle = that.get_element_fill(d);\n                // add .5 to width and height to fill gaps\n                ctx.fillRect(x, y, width+.5, height+.5);\n            })\n        })\n        this.image.attr(\"width\", x_plot_data.total_width)\n            .attr(\"height\", y_plot_data.total_height)\n            .attr(\"x\", x_plot_data.x0)\n            .attr(\"y\", y_plot_data.y0);\n        this.draw_canvas();\n    },\n\n    get_x_plotting_data: function(data) {\n        // This function returns the starting points and widths of the\n        // cells based on the parameters passed.\n        //\n        // data is the data for which the plot data is to be generated.\n        var scaled_data = data.map(this.scales.x.scale);\n        var x_padding = this.get_x_padding(scaled_data);\n        var num_cols = data.length;\n\n        var widths = scaled_data.map(function(d, i) {\n            if (i == 0) {\n                return (scaled_data[1] - d) * 0.5 + x_padding.left;\n            }\n            else if (i == num_cols - 1) {\n                return (d - scaled_data[i - 1]) * 0.5 + x_padding.right;\n            }\n            else {\n                return (scaled_data[i + 1] - scaled_data[i - 1]) * 0.5;\n            }\n        });\n\n        var x0 = scaled_data[0] - x_padding.left;\n        var start_points = scaled_data.map(function(d, i) {\n            if (i == 0) { return 0; }\n            else { return (d + scaled_data[i - 1]) * 0.5 - x0; }\n        });\n\n        var total_width = (scaled_data[num_cols-1] - scaled_data[0]) +\n                           x_padding.left + x_padding.right;\n\n        return {\n            \"widths\": widths,\n            \"total_width\": total_width,\n            \"start\": start_points,\n            \"x0\": x0\n        };\n    },\n\n    get_x_padding: function(scaled_data) {\n        var num_cols = scaled_data.length;\n        return {\n            left: (scaled_data[1] - scaled_data[0]) * 0.5,\n            right: (scaled_data[num_cols-1] - scaled_data[num_cols-2]) * 0.5\n        };\n    },\n\n    get_y_plotting_data: function(data) {\n        // This function returns the starting points and heights of the\n        // cells based on the parameters passed.\n        //\n        //  data is the data for which the plot data is to be generated.\n        var scaled_data = data.map(this.scales.y.scale);\n        var y_padding = this.get_y_padding(scaled_data);\n        var num_rows = data.length;\n\n        var heights = scaled_data.map(function(d, i) {\n            if (i == 0) {\n                return -(scaled_data[1] - d) * 0.5 + y_padding.bottom;\n            }\n            else if (i == num_rows - 1) {\n                return -(d - scaled_data[i - 1]) * 0.5 + y_padding.top;\n            }\n            else {\n                return -(scaled_data[i + 1] - scaled_data[i - 1]) * 0.5;\n            }\n        });\n\n        var y0 = scaled_data[num_rows - 1] - y_padding.top\n        var start_points = scaled_data.map(function(d, i) {\n            if (i == num_rows - 1) { return 0; }\n            else { return (d + scaled_data[i + 1]) * 0.5 - y0; }\n        });\n\n        var total_height = (scaled_data[0] - scaled_data[num_rows-1]) +\n                            y_padding.top + y_padding.bottom;\n\n        return {\n            \"heights\": heights,\n            \"total_height\": total_height,\n            \"start\": start_points,\n            \"y0\": y0\n        };\n    },\n\n    get_y_padding: function(scaled_data) {\n        var num_rows = scaled_data.length;\n        return {\n            bottom: -(scaled_data[1] - scaled_data[0]) * 0.5,\n            top: -(scaled_data[num_rows-1] - scaled_data[num_rows-2]) * 0.5\n        };\n    },\n\n    get_element_fill: function(color) {\n        if (color === null) {\n            return this.model.get(\"null_color\")\n        }\n        return this.scales.color.scale(color);\n    },\n});\n\nmodule.exports = {\n    HeatMap: HeatMap,\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar HeatMapModel = markmodel.MarkModel.extend({\n\n    defaults: _.extend({}, markmodel.MarkModel.prototype.defaults, {\n        _model_name: \"HeatMapModel\",\n        _view_name: \"HeatMap\",\n        x: [],\n        y: [],\n        color: null,\n        scales_metadata: {\n            x: { orientation: \"horizontal\", dimension: \"x\" },\n            y: { orientation: \"vertical\", dimension: \"y\" },\n            color: { dimension: \"color\" }\n        },\n        null_color: \"black\",\n    }),\n\n    initialize: function() {\n        HeatMapModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"x\", \"y\", \"color\"], this.update_data, this);\n        // FIXME: replace this with on(\"change:preserve_domain\"). It is not done here because\n        // on_some_change depends on the GLOBAL backbone on(\"change\") handler which\n        // is called AFTER the specific handlers on(\"change:foobar\") and we make that\n        // assumption.\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n        this.update_domains();\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        // Handling data updates\n        this.mark_data = {\n            x: this.get_typed_field(\"x\"),\n            y: this.get_typed_field(\"y\"),\n            color: this.get_typed_field(\"color\")\n        }\n        this.update_domains();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        if (!this.mark_data) { return; }\n\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x, y_scale = scales.y;\n        var color_scale = scales.color;\n        var flat_colors = [].concat.apply([], this.mark_data.color);\n\n        if(!this.get(\"preserve_domain\").x) {\n            x_scale.compute_and_set_domain(this.mark_data.x, this.model_id + \"_x\");\n        } else {\n            x_scale.del_domain([], this.model_id + \"_x\");\n        }\n\n        if(!this.get(\"preserve_domain\").y) {\n            y_scale.compute_and_set_domain(this.mark_data.y, this.model_id + \"_y\");\n        } else {\n            y_scale.del_domain([], this.model_id + \"_y\");\n        }\n        if(color_scale !== null && color_scale !== undefined) {\n            if(!this.get(\"preserve_domain\").color) {\n                color_scale.compute_and_set_domain(flat_colors, this.model_id + \"_color\");\n            } else {\n                color_scale.del_domain([], this.model_id + \"_color\");\n            }\n        }\n    },\n\n    get_data_dict: function(data, index) {\n        return data;\n    },\n});\n\nmodule.exports = {\n    HeatMapModel: HeatMapModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar _ = require(\"underscore\");\nvar semver_range = \"^\" + require(\"../package.json\").version;\n\nvar ToolbarModel = widgets.DOMWidgetModel.extend({\n\n    defaults: function() {\n        return _.extend(widgets.DOMWidgetModel.prototype.defaults(), {\n            _model_name: \"ToolbarModel\",\n            _view_name: \"Toolbar\",\n            _model_module: \"bqplot\",\n            _view_module: \"bqplot\",\n            _model_module_version: semver_range,\n            _view_module_version: semver_range,\n\n            figure: undefined,\n            _panning: false,\n            _panzoom: null\n        });\n    },\n\n    // Backbone attributes:\n    // - _panning: Bool\n    //       Whether one is currently panning - zooming the specified figure.\n    // - _panzoom: Instance of Panzoom or undefined:\n    //       The created panzoom interaction. It is undefined at first.\n    // Attributes:\n    // - cached_interaction: Instance of Interaction or null or undefined.\n    //   The cached interaction of the Figure. It is undefined at first\n    //   and can take the value of the figure interaction, which can be\n    //   null.\n    panzoom: function() {\n        var figure = this.get(\"figure\");\n        if (this.get(\"_panning\")) {\n            if (figure) {\n                figure.set(\"interaction\", this.cached_interaction);\n                figure.save_changes();\n            }\n            this.set(\"_panning\", false);\n            this.save_changes();\n        } else {\n            if (figure) {\n                this.cached_interaction = figure.get(\"interaction\");\n                var that = this;\n                var panzoom = this.get(\"_panzoom\");\n                if (panzoom) {\n                    figure.set(\"interaction\", panzoom);\n                    figure.save_changes();\n                } else {\n                    this._create_panzoom_model(figure).then(function (model) {\n                        that.set(\"_panzoom\", model);\n                        that.save_changes();\n                        figure.set(\"interaction\", model);\n                        figure.save_changes();\n                    })\n                }\n            }\n            this.set(\"_panning\", true);\n            this.save_changes();\n        }\n    },\n\n    reset: function() {\n        /**\n         * Reset the scales, delete the PanZoom widget, set the figure\n         * interaction back to its previous value.\n         */\n        var figure = this.get(\"figure\");\n        var panning = this.get(\"_panning\");\n        if (figure) {\n            figure.set(\"interaction\", this.cached_interaction);\n            figure.save_changes();\n            var panzoom = this.get(\"_panzoom\");\n            // Should reset_scales be part of PanZoomModel.close()?\n            panzoom.reset_scales()\n            panzoom.close();\n            this.set(\"_panzoom\", null);\n            this.set(\"_panning\", false);\n            this.save_changes();\n        }\n    },\n\n    save_png: function() {\n        /**\n         * Triggers the saving for all the views of that figure.\n         */\n        // TODO: the toolbar view needs to be associated with a Figure\n        // view to avoid calling a model method here.\n        var figure = this.get(\"figure\");\n        if (figure) {\n            figure.save_png();\n        }\n     },\n\n    _create_panzoom_model: function(figure) {\n        /**\n         * Creates a panzoom interaction widget for the specified figure.\n         *\n         * It will discover the relevant scales for the specified figure.\n         */\n        return this.widget_manager.new_widget({\n            model_name: \"PanZoomModel\",\n            model_module: \"bqplot\",\n            model_module_version: figure.get(\"_model_module_version\"),\n            view_name: \"PanZoom\",\n            view_module: \"bqplot\",\n            view_module_version: figure.get(\"_view_module_version\")\n        }).then(function(model) {\n            return Promise.all(figure.get(\"marks\")).then(function(marks) {\n                var x_scales = [], y_scales = [];\n                for (var i=0; i<marks.length; ++i) {\n                    var preserve_domain = marks[i].get(\"preserve_domain\");\n                    var scales = marks[i].get(\"scales\");\n                    _.each(scales, function(v, k) {\n                        var dimension = marks[i].get(\"scales_metadata\")[k][\"dimension\"];\n                        if (dimension === \"x\" && !preserve_domain[k]) {\n                             x_scales.push(scales[k]);\n                        }\n                        if (dimension === \"y\" && !preserve_domain[k]) {\n                             y_scales.push(scales[k]);\n                        }\n                    });\n                }\n                model.set(\"scales\", {\n                    \"x\": x_scales,\n                    \"y\": y_scales\n                });\n                model.save_changes();\n                return model;\n            });\n        });\n    },\n}, {\n    serializers: _.extend({\n        figure: { deserialize: widgets.unpack_models },\n        _panzoom: { deserialize: widgets.unpack_models },\n    }, widgets.DOMWidgetModel.serializers)\n});\n\nvar Toolbar = widgets.DOMWidgetView.extend({\n\n    render: function() {\n        var that = this;\n        this.el.classList.add(\"jupyter-widget\"); // @jupyter-widgets/controls css\n        this.el.classList.add(\"widget-hbox\"); // @jupyter-widgets/controls css\n\n        // We use @jupyter-widgets/controls css classes (ipywidget and widget-*-*) to\n        // benefit from default width, shadows.\n        // We do not use btn-group to not break alignment with jupyter\n        // buttons.\n\n        // Create the buttons\n        var _panzoom = document.createElement(\"button\");\n        _panzoom.classList.add(\"jupyter-widgets\"); // @jupyter-widgets/controls css\n        _panzoom.classList.add(\"jupyter-button\"); // @jupyter-widgets/controls css\n        _panzoom.classList.add(\"widget-toggle-button\") // @jupyter-widgets/controls css\n        _panzoom.setAttribute(\"data-toggle\", \"tooltip\");\n        _panzoom.setAttribute(\"title\", \"PanZoom\");\n        _panzoom.onclick = function (e) {\n            e.preventDefault();\n            that.model.panzoom();\n        };\n        var panzoomicon = document.createElement(\"i\");\n        panzoomicon.className = \"fa fa-arrows\";\n        _panzoom.appendChild(panzoomicon);\n\n        var _reset = document.createElement(\"button\");\n        _reset.classList.add(\"jupyter-widgets\"); // @jupyter-widgets/controls css\n        _reset.classList.add(\"jupyter-button\"); // @jupyter-widgets/controls css\n        _reset.classList.add(\"widget-button\") // @jupyter-widgets/controls css\n        _reset.setAttribute(\"data-toggle\", \"tooltip\");\n        _reset.setAttribute(\"title\", \"Reset\");\n        _reset.onclick = function (e) {\n            e.preventDefault();\n            that.model.reset();\n        };\n        var refreshicon = document.createElement(\"i\");\n        refreshicon.className = \"fa fa-refresh\";\n        _reset.appendChild(refreshicon);\n\n        var _save = document.createElement(\"button\");\n        _save.classList.add(\"jupyter-widgets\"); // @jupyter-widgets/controls css\n        _save.classList.add(\"jupyter-button\"); // @jupyter-widgets/controls css\n        _save.classList.add(\"widget-button\") // @jupyter-widgets/controls css\n        _save.setAttribute(\"data-toggle\", \"tooltip\");\n        _save.setAttribute(\"title\", \"Save\");\n        _save.onclick = function (e) {\n            e.preventDefault();\n            that.model.save_png();\n        };\n        var saveicon = document.createElement(\"i\");\n        saveicon.className = \"fa fa-save\";\n        _save.appendChild(saveicon);\n\n        this.el.appendChild(_panzoom);\n        this.el.appendChild(_reset);\n        this.el.appendChild(_save);\n\n        // Handle initial state\n        this._panzoom = _panzoom;\n        this.update();\n    },\n\n    update: function() {\n        if (this.model.get(\"_panning\")) {\n            this._panzoom.classList.add(\"mod-active\");\n        } else {\n            this._panzoom.classList.remove(\"mod-active\");\n        }\n    }\n});\n\nmodule.exports = {\n    Toolbar: Toolbar,\n    ToolbarModel: ToolbarModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar GraphModel = markmodel.MarkModel.extend({\n    defaults: function() {\n        return _.extend({}, markmodel.MarkModel.prototype.defaults, {\n        _model_name: \"GraphModel\",\n        _view_name: \"Graph\",\n\n        x: [],\n        y: [],\n        color: null,\n        hovered_point: null,\n        scales_metadata: {\n            x: { orientation: \"horizontal\", dimension: \"x\" },\n            y: { orientation: \"vertical\", dimension: \"y\" },\n            color: { dimension: \"color\" }\n        },\n        colors: [],\n        });\n    },\n\n    initialize: function() {\n        GraphModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change([\"x\", \"y\", \"color\", \"link_color\",\n                             \"node_data\", \"link_data\", \"link_color\", ],\n                            this.update_data, this);\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n    },\n\n    update_node_data: function() {\n        var node_data = this.get(\"node_data\"),\n            x = this.get_typed_field(\"x\"),\n            y = this.get_typed_field(\"y\"),\n            color = this.get_typed_field(\"color\"),\n\n            scales = this.get(\"scales\"),\n            x_scale = scales.x,\n            y_scale = scales.y,\n            color_scale = scales.color;\n\n        function get_shape_attrs(shape, attrs) {\n            var new_attrs = {};\n            switch (shape) {\n                case \"circle\":\n                    new_attrs.r = attrs.r || 15;\n                    break;\n                case \"rect\":\n                    new_attrs.width = attrs.width || 25;\n                    new_attrs.height = attrs.height || new_attrs.width * 0.8;\n                    new_attrs.rx = attrs.rx || 0;\n                    new_attrs.ry = attrs.ry || 0;\n                    break;\n                case \"ellipse\":\n                    new_attrs.rx = attrs.rx || 20;\n                    new_attrs.ry = attrs.ry || new_attrs.rx * 0.6;\n                    break;\n                default:\n                    console.log(\"Invalid shape passed - \", shape);\n                }\n            return new_attrs;\n        }\n\n        if (node_data.length > 0 && typeof node_data[0] === \"string\") {\n            node_data = node_data.map(function(d) { return {label: d}; });\n        }\n\n        this.mark_data = [];\n        var that = this;\n        //populate mark data from node data with meaningful defaults filled in\n        node_data.forEach(function(d, i) {\n            d.label = d.label || \"N\" + i;\n            d.label_display = d.label_display || \"center\";\n            d.shape = d.shape || \"circle\";\n            d.shape_attrs = get_shape_attrs(d.shape, d.shape_attrs || {});\n            d.value = d.value || null;\n            that.mark_data.push(d);\n        });\n\n        // also add x, y and color fields\n        if (x.length !== 0 && y.length !== 0) {\n            if (color_scale) {\n                if (!this.get(\"preserve_domain\").color) {\n                    color_scale.compute_and_set_domain(color,\n                                                       this.model_id + \"_color\");\n                } else {\n                    color_scale.del_domain([], this.model_id + \"_color\");\n                }\n            }\n\n            this.mark_data.forEach(function(d, i) {\n                d.xval = x[i];\n                d.yval = y[i];\n                d.color = color[i];\n            });\n        }\n    },\n\n    update_link_data: function() {\n        var link_color_scale = this.get(\"scales\").link_color;\n        this.link_data = this.get(\"link_data\");\n        var link_matrix = this.get_typed_field(\"link_matrix\");\n        var link_color = this.get_typed_field(\"link_color\");\n        var that = this;\n\n        if (link_color_scale !== undefined && link_color.length > 0) {\n            link_matrix = link_color;\n        }\n\n        //coerce link matrix into format understandable by d3 force layout\n        if (this.link_data.length === 0 && link_matrix.length > 0) {\n            link_matrix.forEach(function(d, i) {\n                d.forEach(function(e, j) {\n                    if (e !== null) {\n                        that.link_data.push({source: i, target: j, value: e});\n                    }\n                });\n            });\n        }\n    },\n\n    update_data: function() {\n        this.dirty = true;\n        this.update_node_data();\n        this.update_link_data();\n        this.update_unique_ids();\n        this.update_domains();\n        this.dirty = false;\n        this.trigger(\"data_updated\");\n    },\n\n    update_unique_ids: function() {},\n\n    get_data_dict: function(data, index) {\n        return data;\n    },\n\n    update_domains: function() {\n        var data_scale_key_map = {x: 'xval', y: 'yval'};\n\n        if (!this.mark_data) {\n            return;\n        }\n\n        var scales = this.get(\"scales\");\n        for (var key in scales) {\n            if (scales.hasOwnProperty(key)) {\n                var scale = scales[key];\n                if (!this.get(\"preserve_domain\")[key]) {\n                    scale.compute_and_set_domain(this.mark_data.map(function(d) {\n                        return d[key] || d[data_scale_key_map[key]];\n                    }), this.model_id + key);\n                } else {\n                    scale.del_domain([], this.model_id + key);\n                }\n            }\n       }\n    }\n});\n\nmodule.exports = {\n    GraphModel: GraphModel\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar utils = require(\"./utils\");\nvar mark = require(\"./Mark\");\n\nvar min_size = 10;\n\nvar Graph = mark.Mark.extend({\n    render: function() {\n        var base_creation_promise = Graph.__super__.render.apply(this);\n\n        var that = this;\n        this.selected_style = this.model.get(\"selected_style\");\n        this.unselected_style = this.model.get(\"unselected_style\");\n        this.selected_indices = this.model.get(\"selected\");\n\n        this.hovered_style = this.model.get(\"hovered_style\");\n        this.unhovered_style = this.model.get(\"unhovered_style\");\n        this.hovered_index = !this.model.get(\"hovered_point\") ? null: [this.model.get(\"hovered_point\")];\n\n        this.display_el_classes = [\"element\"];\n        this.event_metadata = {\n            \"mouse_over\": {\n                \"msg_name\": \"hover\",\n                \"lookup_data\": false,\n                \"hit_test\": true\n            },\n            \"element_clicked\": {\n                \"msg_name\": \"element_click\",\n                \"lookup_data\": false,\n                \"hit_test\": true\n            },\n            \"parent_clicked\": {\n                \"msg_name\": \"background_click\",\n                \"hit_test\": false\n            }\n        };\n        this.displayed.then(function() {\n            that.parent.tooltip_div.node().appendChild(that.tooltip_div.node());\n            that.create_tooltip();\n        });\n\n        this.d3el.attr(\"class\", \"network\");\n\n        this.arrow = this.parent.svg.append(\"defs\")\n            .append(\"marker\")\n            .attr(\"id\", \"arrow\")\n            .attr(\"refX\", 0)\n            .attr(\"refY\", 3)\n            .attr(\"markerWidth\", 10)\n            .attr(\"markerHeight\", 10)\n            .attr(\"orient\", \"auto\")\n            .append(\"path\")\n            .attr(\"class\", \"linkarrow\")\n            .attr(\"d\", \"M0,0 L0,6 L9,3 z\");\n\n        return base_creation_promise.then(function() {\n            that.event_listeners = {};\n            that.process_interactions();\n            that.create_listeners();\n            that.compute_view_padding();\n            that.draw();\n        });\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n        if (x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        if (y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    set_positional_scales: function() {\n        this.x_scale = this.scales.x;\n        this.y_scale = this.scales.y;\n\n        // If no scale for \"x\" or \"y\" is specified, figure scales are used.\n        if (!this.x_scale) {\n            this.x_scale = this.parent.scale_x;\n        }\n        if (!this.y_scale) {\n            this.y_scale = this.parent.scale_y;\n        }\n\n        this.listenTo(this.x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                this.update_position(); }\n        });\n        this.listenTo(this.y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                this.update_position(); }\n        });\n    },\n\n    relayout: function() {\n        this.set_ranges();\n        this.update_position();\n    },\n\n    update_position: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n        this.set_ranges();\n\n        var that = this;\n        if (x_scale && y_scale) {\n            // set x and y positions on mark data manually\n            // and redraw the force layout\n            this.model.mark_data.forEach(function(d) {\n                d.x = x_scale.scale(d.xval) + x_scale.offset;\n                d.y = y_scale.scale(d.yval) + y_scale.offset;\n            });\n\n            if (this.force_layout) {\n                 this.force_layout\n                    .nodes(this.model.mark_data)\n                    .links(this.model.link_data)\n                    .start();\n\n                if (this.links) {\n                    this.links.data(this.force_layout.links());\n                }\n                if (this.nodes) {\n                    this.nodes.data(this.force_layout.nodes());\n                }\n\n                if (this.nodes && this.links) {\n                    this.tick();\n                }\n            }\n        }\n    },\n\n    initialize_additional_scales: function() {\n        var color_scale = this.scales.color;\n        if (color_scale) {\n            this.listenTo(color_scale, \"domain_changed\", function() {\n                this.color_scale_updated();\n            });\n            color_scale.on(\"color_scale_range_changed\",\n                            this.color_scale_updated, this);\n        }\n\n        var link_color_scale = this.scales.link_color;\n        if (link_color_scale) {\n            this.listenTo(link_color_scale, \"domain_changed\", function() {\n                this.link_color_scale_updated();\n            });\n        }\n    },\n\n    create_listeners: function() {\n        Graph.__super__.create_listeners.apply(this);\n        this.d3el.on(\"mouseover\", _.bind(function() {\n              this.event_dispatcher(\"mouse_over\");\n          }, this))\n          .on(\"mousemove\", _.bind(function() {\n              this.event_dispatcher(\"mouse_move\");\n          }, this))\n          .on(\"mouseout\", _.bind(function() {\n              this.event_dispatcher(\"mouse_out\");\n          }, this));\n\n        this.listenTo(this.model, \"change:charge\", this.update_charge);\n        this.listenTo(this.model, \"change:link_distance\", this.update_link_distance);\n        this.listenTo(this.model, \"data_updated\", this.data_updated, this);\n        this.listenTo(this.model, \"change:tooltip\", this.create_tooltip, this);\n        this.listenTo(this.model, \"change:enable_hover\", function() { this.hide_tooltip(); }, this);\n        this.listenTo(this.model, \"change:interactions\", this.process_interactions);\n        this.listenTo(this.model, \"change:selected\", this.update_selected);\n        this.listenTo(this.model, \"change:hovered_point\", this.update_hovered);\n        this.listenTo(this.model, \"change:hovered_style\", this.hovered_style_updated, this);\n        this.listenTo(this.model, \"change:unhovered_style\", this.unhovered_style_updated, this);\n\n        this.listenTo(this.parent, \"bg_clicked\", function() {\n            this.event_dispatcher(\"parent_clicked\");\n        });\n    },\n\n    data_updated: function() {\n        this.draw();\n        this.relayout();\n    },\n\n    get_node_color: function(data, index) {\n        var color_scale = this.scales.color;\n        var colors = this.model.get(\"colors\");\n        var len = colors.length;\n        if (color_scale && data.color !== undefined) {\n            return color_scale.scale(data.color);\n        }\n        return colors[index % len];\n    },\n\n    draw: function() {\n        this.set_ranges();\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y,\n            color_scale = this.scales.color,\n            link_color_scale = this.scales.link_color;\n\n        // clean up the old graph\n        this.d3el.selectAll(\".node\").remove();\n        this.d3el.selectAll(\".link\").remove();\n\n        this.force_layout = d3.layout.force()\n            .size([this.parent.width, this.parent.height])\n            .linkDistance(this.model.get(\"link_distance\"));\n\n        if (x_scale && y_scale) {\n            //set x and y on mark data manually\n            this.model.mark_data.forEach(function(d) {\n                d.x = x_scale.scale(d.xval) + x_scale.offset;\n                d.y = y_scale.scale(d.yval) + y_scale.offset;\n            });\n        }\n\n        this.force_layout\n            .nodes(this.model.mark_data)\n            .links(this.model.link_data);\n\n        if (!x_scale && !y_scale) {\n            this.force_layout\n                .charge(this.model.get(\"charge\"))\n                .on(\"tick\", _.bind(this.tick, this))\n                .start();\n        }\n\n        var directed = this.model.get(\"directed\");\n\n        this.links = this.d3el.selectAll(\".link\")\n            .data(this.force_layout.links())\n            .enter().append(\"path\")\n            .attr(\"class\", \"link\")\n            .style(\"stroke\", function(d) {\n                return link_color_scale ? link_color_scale.scale(d.value) : null;\n            })\n            .style(\"stroke-width\", function(d) { return d.link_width; })\n            .attr(\"marker-mid\", directed ? \"url(#arrow)\" : null);\n\n        var that = this;\n        this.nodes = this.d3el.selectAll(\".node\")\n            .data(this.force_layout.nodes())\n            .enter().append(\"g\")\n            .attr(\"class\", \"node\")\n            .call(this.force_layout.drag);\n\n        this.nodes\n            .append(function(d) {\n                return document.createElementNS(d3.ns.prefix.svg, d.shape);\n            })\n            .attr(\"class\", \"element\")\n            .each(function(d) {\n                var node = d3.select(this);\n                for(var key in d.shape_attrs) {\n                    node.attr(key, d.shape_attrs[key]);\n                }\n            })\n            .style(\"fill\", function(d, i) {\n                return that.get_node_color(d, i);\n            });\n\n        this.nodes.append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"text-anchor\", function(d) {\n                return d.label_display === \"center\" ? \"middle\": \"start\";\n            })\n            .attr(\"x\", function(d) {\n                var xloc = 0;\n                if (d.label_display === \"outside\") {\n                    switch (d.shape) {\n                        case \"rect\":\n                            xloc = d.shape_attrs.width / 2 + 5;\n                            break;\n                        case \"circle\":\n                            xloc = d.shape_attrs.r + 5;\n                            break;\n                        case \"ellipse\":\n                            xloc = d.shape_attrs.rx + 5;\n                            break;\n                        default:\n                            xloc = 0;\n                    }\n                }\n                return xloc;\n            })\n            .attr(\"y\", \".31em\")\n            .text(function(d) { return d.label; })\n            .style(\"display\", function(d) {\n                return d.label_display === \"none\" ? \"none\" : \"inline\";\n            });\n\n        this.nodes.on(\"click\", _.bind(function(d, i) {\n            this.event_dispatcher(\"element_clicked\",\n                  {\"data\": d, \"index\": i});\n        }, this));\n        this.nodes.on(\"mouseover\", _.bind(function(d, i) {\n            this.hover_handler({\"data\": d, \"index\": i});\n        }, this));\n        this.nodes.on(\"mouseout\", _.bind(function() {\n            this.reset_hover();\n        }, this));\n    },\n\n    color_scale_updated: function() {\n        var that = this;\n        this.nodes\n            .selectAll(\".element\")\n            .style(\"fill\", function(d, i) {\n                return that.get_node_color(d, i);\n            });\n    },\n\n    link_color_scale_updated: function() {\n        var link_color_scale = this.scales.link_color;\n\n        this.links.style(\"stroke\", function(d) {\n            return link_color_scale ? link_color_scale.scale(d.value) : null;\n        });\n    },\n\n    process_interactions: function() {\n        var interactions = this.model.get(\"interactions\");\n        if(_.isEmpty(interactions)) {\n            //set all the event listeners to blank functions\n            this.reset_interactions();\n        } else {\n            if(interactions.click !== undefined &&\n               interactions.click !== null) {\n                if(interactions.click === \"tooltip\") {\n                    this.event_listeners.element_clicked = function() {\n                        return this.refresh_tooltip(true);\n                    };\n                    this.event_listeners.parent_clicked = this.hide_tooltip;\n                } else if (interactions.click == \"select\") {\n                    this.event_listeners.parent_clicked = this.reset_selection;\n                    this.event_listeners.element_clicked = this.click_handler;\n                }\n            } else {\n                this.reset_click();\n            }\n            if(interactions.hover !== undefined &&\n              interactions.hover !== null) {\n                if(interactions.hover === \"tooltip\") {\n                    this.event_listeners.mouse_over = this.refresh_tooltip;\n                    this.event_listeners.mouse_move = this.move_tooltip;\n                    this.event_listeners.mouse_out = this.hide_tooltip;\n                }\n            } else {\n                this.reset_hover();\n            }\n        }\n    },\n\n    reset_hover: function() {\n        this.links.style(\"opacity\", 1);\n        this.model.set(\"hovered_point\", null);\n        this.hovered_index = null;\n        this.touch();\n    },\n\n    hover_handler: function(args) {\n        var data = args.data;\n        var index = args.index;\n        var highlight_links = this.model.get(\"highlight_links\");\n\n        if (highlight_links) {\n            this.links.style(\"opacity\", function(d) {\n                return d.source.label === data.label ||\n                       d.target.label === data.label ? 1 : 0.1;\n            });\n        } else {\n            this.links.style(\"opacity\", 1);\n        }\n\n        this.model.set(\"hovered_point\",\n                       index, {updated_view: this});\n        this.touch();\n    },\n\n    reset_selection: function() {\n        this.model.set(\"selected\", null);\n        this.selected_indices = null;\n        this.touch();\n    },\n\n    click_handler: function(args) {\n        var data = args.data;\n        var index = args.index;\n        var that = this;\n        var idx = this.model.get(\"selected\");\n        var selected = idx ? utils.deepCopy(idx) : [];\n        var elem_index = selected.indexOf(index);\n        // Replacement for \"Accel\" modifier.\n        var accelKey = d3.event.ctrlKey || d3.event.metaKey;\n\n        if(elem_index > -1 && accelKey) {\n            // if the index is already selected and if accel key is\n            // pressed, remove the node from the list\n            selected.splice(elem_index, 1);\n        } else {\n            if(accelKey) {\n                //If accel is pressed and the bar is not already selcted\n                //add the bar to the list of selected bars.\n                selected.push(index);\n            }\n            // updating the array containing the bar indexes selected\n            // and updating the style\n            else {\n                //if accel is not pressed, then clear the selected ones\n                //and set the current node to the selected\n                selected = [];\n                selected.push(index);\n            }\n        }\n        this.model.set(\"selected\",\n                       ((selected.length === 0) ? null : selected),\n                       {updated_view: this});\n        this.touch();\n        if(!d3.event) {\n            d3.event = window.event;\n        }\n        var e = d3.event;\n        if(e.cancelBubble !== undefined) { // IE\n            e.cancelBubble = true;\n        }\n        if(e.stopPropagation) {\n            e.stopPropagation();\n        }\n        e.preventDefault();\n    },\n\n    hovered_style_updated: function(model, style) {\n        this.hovered_style = style;\n        this.clear_style(model.previous(\"hovered_style\"), this.hovered_index);\n        this.style_updated(style, this.hovered_index);\n    },\n\n    unhovered_style_updated: function(model, style) {\n        this.unhovered_style = style;\n        var hov_indices = this.hovered_index;\n        var unhovered_indices = (hov_indices) ?\n            _.range(this.model.mark_data.length).filter(function(index){\n                return hov_indices.indexOf(index) === -1;\n            }) : [];\n        this.clear_style(model.previous(\"unhovered_style\"), unhovered_indices);\n        this.style_updated(style, unhovered_indices);\n    },\n\n    update_selected: function(model, value) {\n        this.selected_indices = value;\n        this.apply_styles();\n    },\n\n    update_hovered: function(model, value) {\n        this.hovered_index = value === null ? value : [value];\n        this.apply_styles();\n    },\n\n    apply_styles: function(style_arr) {\n        if(style_arr === undefined || style_arr === null) {\n            style_arr = [this.selected_style, this.unselected_style,\n                         this.hovered_style, this.unhovered_style];\n        }\n        Graph.__super__.apply_styles.apply(this, [style_arr]);\n\n        var all_indices = _.range(this.model.mark_data.length);\n\n        this.set_style_on_elements(this.hovered_style, this.hovered_index);\n        var unhovered_indices = (!this.hovered_index) ?\n            [] : _.difference(all_indices, this.hovered_index);\n        this.set_style_on_elements(this.unhovered_style, unhovered_indices);\n    },\n\n    clear_style: function(style_dict, indices) {\n        var nodes = this.d3el.selectAll(\".element\");\n        if(indices) {\n            nodes = nodes.filter(function(d, index) {\n                return indices.indexOf(index) !== -1;\n            });\n        }\n        var clearing_style = {};\n        for(var key in style_dict) {\n            clearing_style[key] = null;\n        }\n        nodes.style(clearing_style);\n    },\n\n    set_style_on_elements: function(style, indices) {\n        // If the index array is undefined or of length=0, exit the\n        // function without doing anything\n        if(!indices || indices.length === 0) {\n            return;\n        }\n        // Also, return if the style object itself is blank\n        if(style !== undefined && Object.keys(style).length === 0) {\n            return;\n        }\n        var nodes = this.d3el.selectAll(\".element\");\n        nodes = nodes.filter(function(data, index) {\n            return indices.indexOf(index) !== -1;\n        });\n        nodes.style(style);\n    },\n\n    compute_view_padding: function() {\n        var x_padding = d3.max(this.model.mark_data.map(function(d) {\n                return (d.shape_attrs.r ||\n                        d.shape_attrs.width / 2 ||\n                        d.shape_attrs.rx) + 1.0;\n            }));\n\n        var y_padding = d3.max(this.model.mark_data.map(function(d) {\n                return (d.shape_attrs.r ||\n                        d.shape_attrs.height / 2 ||\n                        d.shape_attrs.ry) + 1.0;\n            }));\n\n        if (x_padding !== this.x_padding || y_padding !== this.y_padding) {\n            this.x_padding = x_padding;\n            this.y_padding = x_padding;\n            this.trigger(\"mark_padding_updated\");\n        }\n    },\n\n    selected_deleter: function() {\n        d3.event.stopPropagation();\n        return;\n    },\n\n    update_link_distance: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n\n        var link_dist = this.model.get(\"link_distance\");\n        if (!x_scale && !y_scale) {\n            this.force_layout.linkDistance(link_dist).start();\n        }\n    },\n\n    update_charge: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n\n        var charge = this.model.get(\"charge\");\n        if (!x_scale && !y_scale) {\n            this.force_layout.charge(charge).start();\n        }\n    },\n\n    link_arc: function(d) {\n        var dx = d.target.x - d.source.x,\n            dy = d.target.y - d.source.y,\n            dr = Math.sqrt(dx * dx + dy * dy);\n        return \"M\" + d.source.x + \",\" + d.source.y + \"A\" + dr + \",\" + dr +\n               \" 0 0,1 \" + d.target.x + \",\" + d.target.y;\n    },\n\n    link_line: function(d) {\n        var midx = (d.source.x + d.target.x) / 2,\n            midy = (d.source.y + d.target.y) / 2;\n        return \"M\" + d.source.x + \",\" + d.source.y + \"L\" + midx + \",\" +\n               midy + \"L\" +  d.target.x + \",\" + d.target.y;\n    },\n\n    link_slant_line: function(d) {\n        var midx = (d.source.x + d.target.x) / 2;\n        return \"M\" + d.source.x + \",\" + d.source.y +\n               \"L\" +  midx + \",\" + d.target.y +\n               \"L\" +  d.target.x + \",\" + d.target.y;\n    },\n\n    tick: function() {\n        var link_type = this.model.get(\"link_type\");\n\n        this.nodes.attr(\"transform\", transform);\n\n        // move rects to center since x, y of rect is at the corner\n        this.nodes.select(\"rect\")\n            .attr(\"transform\", function(d) {\n                return \"translate(\" +\n                       (-d.shape_attrs.width/2) + \",\" +\n                       (-d.shape_attrs.height/2) + \")\";\n            });\n\n        var link_path_func = this.link_arc;\n        switch(link_type) {\n            case 'arc':\n                link_path_func = this.link_arc;\n                break;\n            case 'line':\n                link_path_func = this.link_line;\n                break;\n            case 'slant_line':\n                link_path_func = this.link_slant_line;\n                break;\n            default:\n                link_path_func = this.link_arc;\n        }\n\n        this.links.attr(\"d\", function(d) { return link_path_func(d); });\n\n        function transform(d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        }\n    },\n});\n\nmodule.exports = {\n    Graph: Graph\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar d3 = require(\"d3\");\nvar mark = require(\"./Mark\");\nvar utils = require(\"./utils\");\nvar _ = require(\"underscore\");\n\n\nvar Image = mark.Mark.extend({\n\n    render: function() {\n        var base_render_promise = Image.__super__.render.apply(this);\n        var el = this.d3el || this.el;\n        window.last_el = el;\n        window.last_image = this;\n        this.im = el.append(\"image\")\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", 1)\n            .attr(\"height\", 1)\n            .attr(\"preserveAspectRatio\", \"none\");\n        this.update_image();\n\n        var that = this;\n        return base_render_promise.then(function() {\n            that.create_listeners();\n            that.listenTo(that.parent, \"margin_updated\", function() {\n                that.draw();\n            });\n        });\n    },\n\n    set_positional_scales: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n        this.listenTo(x_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                this.draw();\n             }\n        });\n        this.listenTo(y_scale, \"domain_changed\", function() {\n            if (!this.model.dirty) {\n                this.draw();\n            }\n        });\n    },\n\n    set_ranges: function() {\n        var x_scale = this.scales.x,\n            y_scale = this.scales.y;\n        if(x_scale) {\n            x_scale.set_range(this.parent.padded_range(\"x\", x_scale.model));\n        }\n        if(y_scale) {\n            y_scale.set_range(this.parent.padded_range(\"y\", y_scale.model));\n        }\n    },\n\n    create_listeners: function() {\n        Image.__super__.create_listeners.apply(this);\n        this.listenTo(this.model, \"change:image\", this.update_image, this);\n        this.listenTo(this.model, \"data_updated\", function() {\n            //animate on data update\n            var animate = true;\n            this.draw(animate);\n        }, this);\n    },\n\n    update_image: function() {\n        if(this.im.attr(\"href\")) {\n            URL.revokeObjectURL(this.im.attr(\"href\"));\n        }\n        var image = this.model.get(\"image\");\n        var blob = new Blob([image.get(\"value\")], {type: \"image/\" + image.get(\"format\")});\n        var url = URL.createObjectURL(blob);\n        this.im.attr(\"href\", url);\n    },\n\n    remove: function() {\n        URL.revokeObjectURL(this.im.attr(\"href\"));\n        Image.__super__.remove.apply(this);\n    },\n\n    relayout: function() {\n        this.draw(true);\n    },\n\n    draw: function(animate) {\n        this.set_ranges()\n\n        var x_scale = this.scales.x ? this.scales.x : this.parent.scale_x;\n        var y_scale = this.scales.y ? this.scales.y : this.parent.scale_y;\n\n        var that = this;\n        var animation_duration = animate ? this.parent.model.get(\"animation_duration\") : 0;\n        var el = this.d3el || this.el;\n        var x_scaled = this.model.mark_data[\"x\"].map(x_scale.scale),\n            y_scaled = this.model.mark_data[\"y\"].map(y_scale.scale);\n\n        el.selectAll(\"image\").transition()\n            .duration(animation_duration)\n            .attr(\"transform\", function(d) {\n                var tx = x_scaled[0] + x_scale.offset;\n                var ty = y_scaled[1] + y_scale.offset;\n                var sx = x_scaled[1] - x_scaled[0];\n                var sy = y_scaled[0] - y_scaled[1];\n                return \"translate(\" + tx + \",\" + ty + \") scale(\" + sx + \", \" + sy + \")\"});\n    },\n});\n\nmodule.exports = {\n    Image: Image\n};\n","/* Copyright 2015 Bloomberg Finance L.P.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar widgets = require(\"@jupyter-widgets/base\");\nvar d3 = require(\"d3\");\nvar _ = require(\"underscore\");\nvar markmodel = require(\"./MarkModel\");\n\nvar ImageModel = markmodel.MarkModel.extend({\n\n    defaults: function() {\n        return _.extend(markmodel.MarkModel.prototype.defaults(), {\n            _model_name: \"ImageModel\",\n            _view_name: \"Image\",\n            x: (0.0, 1.0),\n            y: (0.0, 1.0),\n            scales_metadata: {\n                'x': {'orientation': 'horizontal', 'dimension': 'x'},\n                'y': {'orientation': 'vertical', 'dimension': 'y'},\n            },\n        });\n    },\n\n    initialize: function() {\n        ImageModel.__super__.initialize.apply(this, arguments);\n        this.on_some_change(['x', 'y'], this.update_data, this);\n        this.on_some_change([\"preserve_domain\"], this.update_domains, this);\n        this.update_data();\n    },\n\n    update_data: function() {\n        this.mark_data = {\n            x: this.get_typed_field(\"x\"), y: this.get_typed_field(\"y\")\n        };\n        this.update_domains();\n        this.trigger(\"data_updated\");\n    },\n\n    update_domains: function() {\n        if(!this.mark_data) {\n            return;\n        }\n        var scales = this.get(\"scales\");\n        var x_scale = scales.x;\n        var y_scale = scales.y;\n\n        if(x_scale) {\n            if(!this.get(\"preserve_domain\").x) {\n                x_scale.compute_and_set_domain(this.mark_data['x'], this.model_id + \"_x\");\n            } else {\n                x_scale.del_domain([], this.model_id + \"_x\");\n            }\n        }\n        if(y_scale) {\n            if(!this.get(\"preserve_domain\").y) {\n                y_scale.compute_and_set_domain(this.mark_data['y'], this.model_id + \"_y\");\n            } else {\n                y_scale.del_domain([], this.model_id + \"_y\");\n            }\n        }\n    },\n\n}, {\n    serializers: _.extend({\n        image: { deserialize: widgets.unpack_models },\n    }, markmodel.MarkModel.serializers)\n});\n\nmodule.exports = {\n    ImageModel: ImageModel\n};\n"],"sourceRoot":""}